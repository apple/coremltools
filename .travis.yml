dist: trusty
cache:
  directories:
    - $HOME/.ccache

language: python

matrix:
  include:
    - python: 2.7
    - python: 3.6
    - python: 3.7
      dist: xenial
      sudo: true

env:
  global:
    - CI=false
    - OMP_NUM_THREADS=4
    - CC=gcc-5
    - CXX=g++-5

addons:
  apt:
    update: true
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-5
      - g++-5
      - libstdc++6
      - python-setuptools

script:
  - free -m

  # Set cache size to 2G (defaults to 512M)
  - ccache -M 2G
  - ccache -s
  
  # Download and install cmake
  - curl -L https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz -o cmake-3.13.4-Linux-x86_64.tar.gz 
  - tar xf cmake-3.13.4-Linux-x86_64.tar.gz
  - export PATH=${PWD}/cmake-3.13.4-Linux-x86_64/bin:${PATH}
  
  # On certain Travis builds the machines contain the correct `python` and `pip`
  # versions. Running `which python` and `which pip` points to the right path
  # to both the `python` and `pip` programs. Running `which virtualenv` uncovers
  # that some machines on travis have `virtualenv` installed in their current
  # environment while others do not. To correct this running `pip install virtualenv`
  # will ensure that the `virtualenv` the `python` and the `pip` versions all match.
  - pip install virtualenv
  
  # We sometimes get `error: No space left on device`
  # The workaround seems to be to force blocking I/O
  # See https://github.com/travis-ci/travis-ci/issues/8902 and
  # https://github.com/travis-ci/travis-ci/issues/4704#issuecomment-348435959
  # Check whether O_NONBLOCK is set (probably should print "1"):
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
  # Turn off O_NONBLOCK:
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
  # Check whether O_NONBLOCK is set (should print "0"):
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'

  # Make wheel using default python
  - bash -e scripts/make_wheel.sh
  - bash -e scripts/test_wheel.sh --wheel-path=build/dist/*.whl 

  # See the changes in ccache
  - ccache -s
