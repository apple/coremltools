// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Parameters.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Parameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {
class Int64ParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Int64Parameter> {
  public:
  const ::CoreML::Specification::Int64Range* range_;
  const ::CoreML::Specification::Int64Set* set_;
} _Int64Parameter_default_instance_;
class DoubleParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DoubleParameter> {
  public:
  const ::CoreML::Specification::DoubleRange* range_;
} _DoubleParameter_default_instance_;
class StringParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StringParameter> {
} _StringParameter_default_instance_;
class BoolParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BoolParameter> {
} _BoolParameter_default_instance_;

namespace protobuf_Parameters_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _Int64Parameter_default_instance_.Shutdown();
  _DoubleParameter_default_instance_.Shutdown();
  _StringParameter_default_instance_.Shutdown();
  _BoolParameter_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults();
  _Int64Parameter_default_instance_.DefaultConstruct();
  _DoubleParameter_default_instance_.DefaultConstruct();
  _StringParameter_default_instance_.DefaultConstruct();
  _BoolParameter_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_Parameters_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Parameter::kDefaultValueFieldNumber;
const int Int64Parameter::kRangeFieldNumber;
const int Int64Parameter::kSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Parameter::Int64Parameter()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Parameters_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.Int64Parameter)
}
Int64Parameter::Int64Parameter(const Int64Parameter& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  defaultvalue_ = from.defaultvalue_;
  clear_has_AllowedValues();
  switch (from.AllowedValues_case()) {
    case kRange: {
      mutable_range()->::CoreML::Specification::Int64Range::MergeFrom(from.range());
      break;
    }
    case kSet: {
      mutable_set()->::CoreML::Specification::Int64Set::MergeFrom(from.set());
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.Int64Parameter)
}

void Int64Parameter::SharedCtor() {
  defaultvalue_ = GOOGLE_LONGLONG(0);
  clear_has_AllowedValues();
  _cached_size_ = 0;
}

Int64Parameter::~Int64Parameter() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.Int64Parameter)
  SharedDtor();
}

void Int64Parameter::SharedDtor() {
  if (has_AllowedValues()) {
    clear_AllowedValues();
  }
}

void Int64Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Int64Parameter& Int64Parameter::default_instance() {
  protobuf_Parameters_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int64Parameter* Int64Parameter::New(::google::protobuf::Arena* arena) const {
  Int64Parameter* n = new Int64Parameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int64Parameter::clear_AllowedValues() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.Int64Parameter)
  switch (AllowedValues_case()) {
    case kRange: {
      delete AllowedValues_.range_;
      break;
    }
    case kSet: {
      delete AllowedValues_.set_;
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ALLOWEDVALUES_NOT_SET;
}


void Int64Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.Int64Parameter)
  defaultvalue_ = GOOGLE_LONGLONG(0);
  clear_AllowedValues();
}

bool Int64Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.Int64Parameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 defaultValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &defaultvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.Int64Range range = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.Int64Set set = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.Int64Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.Int64Parameter)
  return false;
#undef DO_
}

void Int64Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.Int64Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 defaultValue = 1;
  if (this->defaultvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->defaultvalue(), output);
  }

  // .CoreML.Specification.Int64Range range = 10;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *AllowedValues_.range_, output);
  }

  // .CoreML.Specification.Int64Set set = 11;
  if (has_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *AllowedValues_.set_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.Int64Parameter)
}

size_t Int64Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.Int64Parameter)
  size_t total_size = 0;

  // int64 defaultValue = 1;
  if (this->defaultvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->defaultvalue());
  }

  switch (AllowedValues_case()) {
    // .CoreML.Specification.Int64Range range = 10;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *AllowedValues_.range_);
      break;
    }
    // .CoreML.Specification.Int64Set set = 11;
    case kSet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *AllowedValues_.set_);
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int64Parameter::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Int64Parameter*>(&from));
}

void Int64Parameter::MergeFrom(const Int64Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.Int64Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.defaultvalue() != 0) {
    set_defaultvalue(from.defaultvalue());
  }
  switch (from.AllowedValues_case()) {
    case kRange: {
      mutable_range()->::CoreML::Specification::Int64Range::MergeFrom(from.range());
      break;
    }
    case kSet: {
      mutable_set()->::CoreML::Specification::Int64Set::MergeFrom(from.set());
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
}

void Int64Parameter::CopyFrom(const Int64Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.Int64Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Parameter::IsInitialized() const {
  return true;
}

void Int64Parameter::Swap(Int64Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64Parameter::InternalSwap(Int64Parameter* other) {
  std::swap(defaultvalue_, other->defaultvalue_);
  std::swap(AllowedValues_, other->AllowedValues_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Int64Parameter::GetTypeName() const {
  return "CoreML.Specification.Int64Parameter";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int64Parameter

// int64 defaultValue = 1;
void Int64Parameter::clear_defaultvalue() {
  defaultvalue_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Int64Parameter::defaultvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.Int64Parameter.defaultValue)
  return defaultvalue_;
}
void Int64Parameter::set_defaultvalue(::google::protobuf::int64 value) {
  
  defaultvalue_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.Int64Parameter.defaultValue)
}

// .CoreML.Specification.Int64Range range = 10;
bool Int64Parameter::has_range() const {
  return AllowedValues_case() == kRange;
}
void Int64Parameter::set_has_range() {
  _oneof_case_[0] = kRange;
}
void Int64Parameter::clear_range() {
  if (has_range()) {
    delete AllowedValues_.range_;
    clear_has_AllowedValues();
  }
}
 const ::CoreML::Specification::Int64Range& Int64Parameter::range() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.Int64Parameter.range)
  return has_range()
      ? *AllowedValues_.range_
      : ::CoreML::Specification::Int64Range::default_instance();
}
::CoreML::Specification::Int64Range* Int64Parameter::mutable_range() {
  if (!has_range()) {
    clear_AllowedValues();
    set_has_range();
    AllowedValues_.range_ = new ::CoreML::Specification::Int64Range;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.Int64Parameter.range)
  return AllowedValues_.range_;
}
::CoreML::Specification::Int64Range* Int64Parameter::release_range() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.Int64Parameter.range)
  if (has_range()) {
    clear_has_AllowedValues();
    ::CoreML::Specification::Int64Range* temp = AllowedValues_.range_;
    AllowedValues_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Int64Parameter::set_allocated_range(::CoreML::Specification::Int64Range* range) {
  clear_AllowedValues();
  if (range) {
    set_has_range();
    AllowedValues_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.Int64Parameter.range)
}

// .CoreML.Specification.Int64Set set = 11;
bool Int64Parameter::has_set() const {
  return AllowedValues_case() == kSet;
}
void Int64Parameter::set_has_set() {
  _oneof_case_[0] = kSet;
}
void Int64Parameter::clear_set() {
  if (has_set()) {
    delete AllowedValues_.set_;
    clear_has_AllowedValues();
  }
}
 const ::CoreML::Specification::Int64Set& Int64Parameter::set() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.Int64Parameter.set)
  return has_set()
      ? *AllowedValues_.set_
      : ::CoreML::Specification::Int64Set::default_instance();
}
::CoreML::Specification::Int64Set* Int64Parameter::mutable_set() {
  if (!has_set()) {
    clear_AllowedValues();
    set_has_set();
    AllowedValues_.set_ = new ::CoreML::Specification::Int64Set;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.Int64Parameter.set)
  return AllowedValues_.set_;
}
::CoreML::Specification::Int64Set* Int64Parameter::release_set() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.Int64Parameter.set)
  if (has_set()) {
    clear_has_AllowedValues();
    ::CoreML::Specification::Int64Set* temp = AllowedValues_.set_;
    AllowedValues_.set_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Int64Parameter::set_allocated_set(::CoreML::Specification::Int64Set* set) {
  clear_AllowedValues();
  if (set) {
    set_has_set();
    AllowedValues_.set_ = set;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.Int64Parameter.set)
}

bool Int64Parameter::has_AllowedValues() const {
  return AllowedValues_case() != ALLOWEDVALUES_NOT_SET;
}
void Int64Parameter::clear_has_AllowedValues() {
  _oneof_case_[0] = ALLOWEDVALUES_NOT_SET;
}
Int64Parameter::AllowedValuesCase Int64Parameter::AllowedValues_case() const {
  return Int64Parameter::AllowedValuesCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleParameter::kDefaultValueFieldNumber;
const int DoubleParameter::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleParameter::DoubleParameter()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Parameters_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.DoubleParameter)
}
DoubleParameter::DoubleParameter(const DoubleParameter& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  defaultvalue_ = from.defaultvalue_;
  clear_has_AllowedValues();
  switch (from.AllowedValues_case()) {
    case kRange: {
      mutable_range()->::CoreML::Specification::DoubleRange::MergeFrom(from.range());
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.DoubleParameter)
}

void DoubleParameter::SharedCtor() {
  defaultvalue_ = 0;
  clear_has_AllowedValues();
  _cached_size_ = 0;
}

DoubleParameter::~DoubleParameter() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.DoubleParameter)
  SharedDtor();
}

void DoubleParameter::SharedDtor() {
  if (has_AllowedValues()) {
    clear_AllowedValues();
  }
}

void DoubleParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DoubleParameter& DoubleParameter::default_instance() {
  protobuf_Parameters_2eproto::InitDefaults();
  return *internal_default_instance();
}

DoubleParameter* DoubleParameter::New(::google::protobuf::Arena* arena) const {
  DoubleParameter* n = new DoubleParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoubleParameter::clear_AllowedValues() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.DoubleParameter)
  switch (AllowedValues_case()) {
    case kRange: {
      delete AllowedValues_.range_;
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ALLOWEDVALUES_NOT_SET;
}


void DoubleParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.DoubleParameter)
  defaultvalue_ = 0;
  clear_AllowedValues();
}

bool DoubleParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.DoubleParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double defaultValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &defaultvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.DoubleRange range = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.DoubleParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.DoubleParameter)
  return false;
#undef DO_
}

void DoubleParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.DoubleParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double defaultValue = 1;
  if (this->defaultvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->defaultvalue(), output);
  }

  // .CoreML.Specification.DoubleRange range = 10;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *AllowedValues_.range_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.DoubleParameter)
}

size_t DoubleParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.DoubleParameter)
  size_t total_size = 0;

  // double defaultValue = 1;
  if (this->defaultvalue() != 0) {
    total_size += 1 + 8;
  }

  switch (AllowedValues_case()) {
    // .CoreML.Specification.DoubleRange range = 10;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *AllowedValues_.range_);
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoubleParameter::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DoubleParameter*>(&from));
}

void DoubleParameter::MergeFrom(const DoubleParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.DoubleParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.defaultvalue() != 0) {
    set_defaultvalue(from.defaultvalue());
  }
  switch (from.AllowedValues_case()) {
    case kRange: {
      mutable_range()->::CoreML::Specification::DoubleRange::MergeFrom(from.range());
      break;
    }
    case ALLOWEDVALUES_NOT_SET: {
      break;
    }
  }
}

void DoubleParameter::CopyFrom(const DoubleParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.DoubleParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleParameter::IsInitialized() const {
  return true;
}

void DoubleParameter::Swap(DoubleParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleParameter::InternalSwap(DoubleParameter* other) {
  std::swap(defaultvalue_, other->defaultvalue_);
  std::swap(AllowedValues_, other->AllowedValues_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string DoubleParameter::GetTypeName() const {
  return "CoreML.Specification.DoubleParameter";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoubleParameter

// double defaultValue = 1;
void DoubleParameter::clear_defaultvalue() {
  defaultvalue_ = 0;
}
double DoubleParameter::defaultvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.DoubleParameter.defaultValue)
  return defaultvalue_;
}
void DoubleParameter::set_defaultvalue(double value) {
  
  defaultvalue_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.DoubleParameter.defaultValue)
}

// .CoreML.Specification.DoubleRange range = 10;
bool DoubleParameter::has_range() const {
  return AllowedValues_case() == kRange;
}
void DoubleParameter::set_has_range() {
  _oneof_case_[0] = kRange;
}
void DoubleParameter::clear_range() {
  if (has_range()) {
    delete AllowedValues_.range_;
    clear_has_AllowedValues();
  }
}
 const ::CoreML::Specification::DoubleRange& DoubleParameter::range() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.DoubleParameter.range)
  return has_range()
      ? *AllowedValues_.range_
      : ::CoreML::Specification::DoubleRange::default_instance();
}
::CoreML::Specification::DoubleRange* DoubleParameter::mutable_range() {
  if (!has_range()) {
    clear_AllowedValues();
    set_has_range();
    AllowedValues_.range_ = new ::CoreML::Specification::DoubleRange;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.DoubleParameter.range)
  return AllowedValues_.range_;
}
::CoreML::Specification::DoubleRange* DoubleParameter::release_range() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.DoubleParameter.range)
  if (has_range()) {
    clear_has_AllowedValues();
    ::CoreML::Specification::DoubleRange* temp = AllowedValues_.range_;
    AllowedValues_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void DoubleParameter::set_allocated_range(::CoreML::Specification::DoubleRange* range) {
  clear_AllowedValues();
  if (range) {
    set_has_range();
    AllowedValues_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.DoubleParameter.range)
}

bool DoubleParameter::has_AllowedValues() const {
  return AllowedValues_case() != ALLOWEDVALUES_NOT_SET;
}
void DoubleParameter::clear_has_AllowedValues() {
  _oneof_case_[0] = ALLOWEDVALUES_NOT_SET;
}
DoubleParameter::AllowedValuesCase DoubleParameter::AllowedValues_case() const {
  return DoubleParameter::AllowedValuesCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringParameter::kDefaultValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringParameter::StringParameter()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Parameters_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.StringParameter)
}
StringParameter::StringParameter(const StringParameter& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  defaultvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.defaultvalue().size() > 0) {
    defaultvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultvalue_);
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.StringParameter)
}

void StringParameter::SharedCtor() {
  defaultvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StringParameter::~StringParameter() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.StringParameter)
  SharedDtor();
}

void StringParameter::SharedDtor() {
  defaultvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringParameter& StringParameter::default_instance() {
  protobuf_Parameters_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringParameter* StringParameter::New(::google::protobuf::Arena* arena) const {
  StringParameter* n = new StringParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.StringParameter)
  defaultvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.StringParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string defaultValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_defaultvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->defaultvalue().data(), this->defaultvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.StringParameter.defaultValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.StringParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.StringParameter)
  return false;
#undef DO_
}

void StringParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.StringParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string defaultValue = 1;
  if (this->defaultvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->defaultvalue().data(), this->defaultvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.StringParameter.defaultValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->defaultvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.StringParameter)
}

size_t StringParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.StringParameter)
  size_t total_size = 0;

  // string defaultValue = 1;
  if (this->defaultvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->defaultvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringParameter::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringParameter*>(&from));
}

void StringParameter::MergeFrom(const StringParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.StringParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.defaultvalue().size() > 0) {

    defaultvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.defaultvalue_);
  }
}

void StringParameter::CopyFrom(const StringParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.StringParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringParameter::IsInitialized() const {
  return true;
}

void StringParameter::Swap(StringParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringParameter::InternalSwap(StringParameter* other) {
  defaultvalue_.Swap(&other->defaultvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringParameter::GetTypeName() const {
  return "CoreML.Specification.StringParameter";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringParameter

// string defaultValue = 1;
void StringParameter::clear_defaultvalue() {
  defaultvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StringParameter::defaultvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.StringParameter.defaultValue)
  return defaultvalue_.GetNoArena();
}
void StringParameter::set_defaultvalue(const ::std::string& value) {
  
  defaultvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.StringParameter.defaultValue)
}
#if LANG_CXX11
void StringParameter::set_defaultvalue(::std::string&& value) {
  
  defaultvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.StringParameter.defaultValue)
}
#endif
void StringParameter::set_defaultvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  defaultvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.StringParameter.defaultValue)
}
void StringParameter::set_defaultvalue(const char* value, size_t size) {
  
  defaultvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.StringParameter.defaultValue)
}
::std::string* StringParameter::mutable_defaultvalue() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.StringParameter.defaultValue)
  return defaultvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringParameter::release_defaultvalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.StringParameter.defaultValue)
  
  return defaultvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringParameter::set_allocated_defaultvalue(::std::string* defaultvalue) {
  if (defaultvalue != NULL) {
    
  } else {
    
  }
  defaultvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), defaultvalue);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.StringParameter.defaultValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolParameter::kDefaultValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolParameter::BoolParameter()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Parameters_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.BoolParameter)
}
BoolParameter::BoolParameter(const BoolParameter& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  defaultvalue_ = from.defaultvalue_;
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.BoolParameter)
}

void BoolParameter::SharedCtor() {
  defaultvalue_ = false;
  _cached_size_ = 0;
}

BoolParameter::~BoolParameter() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.BoolParameter)
  SharedDtor();
}

void BoolParameter::SharedDtor() {
}

void BoolParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BoolParameter& BoolParameter::default_instance() {
  protobuf_Parameters_2eproto::InitDefaults();
  return *internal_default_instance();
}

BoolParameter* BoolParameter::New(::google::protobuf::Arena* arena) const {
  BoolParameter* n = new BoolParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BoolParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.BoolParameter)
  defaultvalue_ = false;
}

bool BoolParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.BoolParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool defaultValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &defaultvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.BoolParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.BoolParameter)
  return false;
#undef DO_
}

void BoolParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.BoolParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool defaultValue = 1;
  if (this->defaultvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->defaultvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.BoolParameter)
}

size_t BoolParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.BoolParameter)
  size_t total_size = 0;

  // bool defaultValue = 1;
  if (this->defaultvalue() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoolParameter::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BoolParameter*>(&from));
}

void BoolParameter::MergeFrom(const BoolParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.BoolParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.defaultvalue() != 0) {
    set_defaultvalue(from.defaultvalue());
  }
}

void BoolParameter::CopyFrom(const BoolParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.BoolParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolParameter::IsInitialized() const {
  return true;
}

void BoolParameter::Swap(BoolParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolParameter::InternalSwap(BoolParameter* other) {
  std::swap(defaultvalue_, other->defaultvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string BoolParameter::GetTypeName() const {
  return "CoreML.Specification.BoolParameter";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BoolParameter

// bool defaultValue = 1;
void BoolParameter::clear_defaultvalue() {
  defaultvalue_ = false;
}
bool BoolParameter::defaultvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.BoolParameter.defaultValue)
  return defaultvalue_;
}
void BoolParameter::set_defaultvalue(bool value) {
  
  defaultvalue_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.BoolParameter.defaultValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
