// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AudioFeaturePrint.proto

#ifndef PROTOBUF_AudioFeaturePrint_2eproto__INCLUDED
#define PROTOBUF_AudioFeaturePrint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace CoreML {
namespace Specification {
namespace CoreMLModels {
class AudioFeaturePrint;
class AudioFeaturePrintDefaultTypeInternal;
extern AudioFeaturePrintDefaultTypeInternal _AudioFeaturePrint_default_instance_;
class AudioFeaturePrint_Sound;
class AudioFeaturePrint_SoundDefaultTypeInternal;
extern AudioFeaturePrint_SoundDefaultTypeInternal _AudioFeaturePrint_Sound_default_instance_;
}  // namespace CoreMLModels
}  // namespace Specification
}  // namespace CoreML

namespace CoreML {
namespace Specification {
namespace CoreMLModels {

namespace protobuf_AudioFeaturePrint_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AudioFeaturePrint_2eproto

enum AudioFeaturePrint_Sound_SoundVersion {
  AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_INVALID = 0,
  AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_1 = 1,
  AudioFeaturePrint_Sound_SoundVersion_AudioFeaturePrint_Sound_SoundVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AudioFeaturePrint_Sound_SoundVersion_AudioFeaturePrint_Sound_SoundVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AudioFeaturePrint_Sound_SoundVersion_IsValid(int value);
const AudioFeaturePrint_Sound_SoundVersion AudioFeaturePrint_Sound_SoundVersion_SoundVersion_MIN = AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_INVALID;
const AudioFeaturePrint_Sound_SoundVersion AudioFeaturePrint_Sound_SoundVersion_SoundVersion_MAX = AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_1;
const int AudioFeaturePrint_Sound_SoundVersion_SoundVersion_ARRAYSIZE = AudioFeaturePrint_Sound_SoundVersion_SoundVersion_MAX + 1;

// ===================================================================

class AudioFeaturePrint_Sound : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound) */ {
 public:
  AudioFeaturePrint_Sound();
  virtual ~AudioFeaturePrint_Sound();

  AudioFeaturePrint_Sound(const AudioFeaturePrint_Sound& from);

  inline AudioFeaturePrint_Sound& operator=(const AudioFeaturePrint_Sound& from) {
    CopyFrom(from);
    return *this;
  }

  static const AudioFeaturePrint_Sound& default_instance();

  static inline const AudioFeaturePrint_Sound* internal_default_instance() {
    return reinterpret_cast<const AudioFeaturePrint_Sound*>(
               &_AudioFeaturePrint_Sound_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AudioFeaturePrint_Sound* other);

  // implements Message ----------------------------------------------

  inline AudioFeaturePrint_Sound* New() const PROTOBUF_FINAL { return New(NULL); }

  AudioFeaturePrint_Sound* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AudioFeaturePrint_Sound& from);
  void MergeFrom(const AudioFeaturePrint_Sound& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AudioFeaturePrint_Sound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AudioFeaturePrint_Sound_SoundVersion SoundVersion;
  static const SoundVersion SOUND_VERSION_INVALID =
    AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_INVALID;
  static const SoundVersion SOUND_VERSION_1 =
    AudioFeaturePrint_Sound_SoundVersion_SOUND_VERSION_1;
  static inline bool SoundVersion_IsValid(int value) {
    return AudioFeaturePrint_Sound_SoundVersion_IsValid(value);
  }
  static const SoundVersion SoundVersion_MIN =
    AudioFeaturePrint_Sound_SoundVersion_SoundVersion_MIN;
  static const SoundVersion SoundVersion_MAX =
    AudioFeaturePrint_Sound_SoundVersion_SoundVersion_MAX;
  static const int SoundVersion_ARRAYSIZE =
    AudioFeaturePrint_Sound_SoundVersion_SoundVersion_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound.SoundVersion version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion version() const;
  void set_version(::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int version_;
  mutable int _cached_size_;
  friend struct protobuf_AudioFeaturePrint_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AudioFeaturePrint : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.CoreMLModels.AudioFeaturePrint) */ {
 public:
  AudioFeaturePrint();
  virtual ~AudioFeaturePrint();

  AudioFeaturePrint(const AudioFeaturePrint& from);

  inline AudioFeaturePrint& operator=(const AudioFeaturePrint& from) {
    CopyFrom(from);
    return *this;
  }

  static const AudioFeaturePrint& default_instance();

  enum AudioFeaturePrintTypeCase {
    kSound = 20,
    AUDIOFEATUREPRINTTYPE_NOT_SET = 0,
  };

  static inline const AudioFeaturePrint* internal_default_instance() {
    return reinterpret_cast<const AudioFeaturePrint*>(
               &_AudioFeaturePrint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AudioFeaturePrint* other);

  // implements Message ----------------------------------------------

  inline AudioFeaturePrint* New() const PROTOBUF_FINAL { return New(NULL); }

  AudioFeaturePrint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const AudioFeaturePrint& from);
  void MergeFrom(const AudioFeaturePrint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AudioFeaturePrint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AudioFeaturePrint_Sound Sound;

  // accessors -------------------------------------------------------

  // .CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound sound = 20;
  bool has_sound() const;
  void clear_sound();
  static const int kSoundFieldNumber = 20;
  const ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound& sound() const;
  ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* mutable_sound();
  ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* release_sound();
  void set_allocated_sound(::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* sound);

  AudioFeaturePrintTypeCase AudioFeaturePrintType_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.CoreMLModels.AudioFeaturePrint)
 private:
  void set_has_sound();

  inline bool has_AudioFeaturePrintType() const;
  void clear_AudioFeaturePrintType();
  inline void clear_has_AudioFeaturePrintType();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union AudioFeaturePrintTypeUnion {
    AudioFeaturePrintTypeUnion() {}
    ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* sound_;
  } AudioFeaturePrintType_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_AudioFeaturePrint_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AudioFeaturePrint_Sound

// .CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound.SoundVersion version = 1;
inline void AudioFeaturePrint_Sound::clear_version() {
  version_ = 0;
}
inline ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion AudioFeaturePrint_Sound::version() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound.version)
  return static_cast< ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion >(version_);
}
inline void AudioFeaturePrint_Sound::set_version(::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound.version)
}

// -------------------------------------------------------------------

// AudioFeaturePrint

// .CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound sound = 20;
inline bool AudioFeaturePrint::has_sound() const {
  return AudioFeaturePrintType_case() == kSound;
}
inline void AudioFeaturePrint::set_has_sound() {
  _oneof_case_[0] = kSound;
}
inline void AudioFeaturePrint::clear_sound() {
  if (has_sound()) {
    delete AudioFeaturePrintType_.sound_;
    clear_has_AudioFeaturePrintType();
  }
}
inline  const ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound& AudioFeaturePrint::sound() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CoreMLModels.AudioFeaturePrint.sound)
  return has_sound()
      ? *AudioFeaturePrintType_.sound_
      : ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::default_instance();
}
inline ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* AudioFeaturePrint::mutable_sound() {
  if (!has_sound()) {
    clear_AudioFeaturePrintType();
    set_has_sound();
    AudioFeaturePrintType_.sound_ = new ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.CoreMLModels.AudioFeaturePrint.sound)
  return AudioFeaturePrintType_.sound_;
}
inline ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* AudioFeaturePrint::release_sound() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.CoreMLModels.AudioFeaturePrint.sound)
  if (has_sound()) {
    clear_has_AudioFeaturePrintType();
    ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* temp = AudioFeaturePrintType_.sound_;
    AudioFeaturePrintType_.sound_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AudioFeaturePrint::set_allocated_sound(::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound* sound) {
  clear_AudioFeaturePrintType();
  if (sound) {
    set_has_sound();
    AudioFeaturePrintType_.sound_ = sound;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.CoreMLModels.AudioFeaturePrint.sound)
}

inline bool AudioFeaturePrint::has_AudioFeaturePrintType() const {
  return AudioFeaturePrintType_case() != AUDIOFEATUREPRINTTYPE_NOT_SET;
}
inline void AudioFeaturePrint::clear_has_AudioFeaturePrintType() {
  _oneof_case_[0] = AUDIOFEATUREPRINTTYPE_NOT_SET;
}
inline AudioFeaturePrint::AudioFeaturePrintTypeCase AudioFeaturePrint::AudioFeaturePrintType_case() const {
  return AudioFeaturePrint::AudioFeaturePrintTypeCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace CoreMLModels
}  // namespace Specification
}  // namespace CoreML

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound_SoundVersion> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AudioFeaturePrint_2eproto__INCLUDED
