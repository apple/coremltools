// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CustomModel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_CustomModel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_CustomModel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry_lite.h>
#include <google/protobuf/map_field_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_CustomModel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_CustomModel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
namespace CoreML {
namespace Specification {
class CustomModel;
struct CustomModelDefaultTypeInternal;
extern CustomModelDefaultTypeInternal _CustomModel_default_instance_;
class CustomModel_CustomModelParamValue;
struct CustomModel_CustomModelParamValueDefaultTypeInternal;
extern CustomModel_CustomModelParamValueDefaultTypeInternal _CustomModel_CustomModelParamValue_default_instance_;
class CustomModel_ParametersEntry_DoNotUse;
struct CustomModel_ParametersEntry_DoNotUseDefaultTypeInternal;
extern CustomModel_ParametersEntry_DoNotUseDefaultTypeInternal _CustomModel_ParametersEntry_DoNotUse_default_instance_;
}  // namespace Specification
}  // namespace CoreML
PROTOBUF_NAMESPACE_OPEN
template<> ::CoreML::Specification::CustomModel* Arena::CreateMaybeMessage<::CoreML::Specification::CustomModel>(Arena*);
template<> ::CoreML::Specification::CustomModel_CustomModelParamValue* Arena::CreateMaybeMessage<::CoreML::Specification::CustomModel_CustomModelParamValue>(Arena*);
template<> ::CoreML::Specification::CustomModel_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage<::CoreML::Specification::CustomModel_ParametersEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CoreML {
namespace Specification {

// ===================================================================

class CustomModel_CustomModelParamValue final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.CustomModel.CustomModelParamValue) */ {
 public:
  inline CustomModel_CustomModelParamValue() : CustomModel_CustomModelParamValue(nullptr) {}
  ~CustomModel_CustomModelParamValue() override;
  explicit constexpr CustomModel_CustomModelParamValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomModel_CustomModelParamValue(const CustomModel_CustomModelParamValue& from);
  CustomModel_CustomModelParamValue(CustomModel_CustomModelParamValue&& from) noexcept
    : CustomModel_CustomModelParamValue() {
    *this = ::std::move(from);
  }

  inline CustomModel_CustomModelParamValue& operator=(const CustomModel_CustomModelParamValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomModel_CustomModelParamValue& operator=(CustomModel_CustomModelParamValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CustomModel_CustomModelParamValue& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kDoubleValue = 10,
    kStringValue = 20,
    kIntValue = 30,
    kLongValue = 40,
    kBoolValue = 50,
    kBytesValue = 60,
    VALUE_NOT_SET = 0,
  };

  static inline const CustomModel_CustomModelParamValue* internal_default_instance() {
    return reinterpret_cast<const CustomModel_CustomModelParamValue*>(
               &_CustomModel_CustomModelParamValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CustomModel_CustomModelParamValue& a, CustomModel_CustomModelParamValue& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomModel_CustomModelParamValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomModel_CustomModelParamValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomModel_CustomModelParamValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomModel_CustomModelParamValue>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const CustomModel_CustomModelParamValue& from);
  void MergeFrom(const CustomModel_CustomModelParamValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CustomModel_CustomModelParamValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CoreML.Specification.CustomModel.CustomModelParamValue";
  }
  protected:
  explicit CustomModel_CustomModelParamValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoubleValueFieldNumber = 10,
    kStringValueFieldNumber = 20,
    kIntValueFieldNumber = 30,
    kLongValueFieldNumber = 40,
    kBoolValueFieldNumber = 50,
    kBytesValueFieldNumber = 60,
  };
  // double doubleValue = 10;
  bool has_doublevalue() const;
  private:
  bool _internal_has_doublevalue() const;
  public:
  void clear_doublevalue();
  double doublevalue() const;
  void set_doublevalue(double value);
  private:
  double _internal_doublevalue() const;
  void _internal_set_doublevalue(double value);
  public:

  // string stringValue = 20;
  bool has_stringvalue() const;
  private:
  bool _internal_has_stringvalue() const;
  public:
  void clear_stringvalue();
  const std::string& stringvalue() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_stringvalue(ArgT0&& arg0, ArgT... args);
  std::string* mutable_stringvalue();
  PROTOBUF_NODISCARD std::string* release_stringvalue();
  void set_allocated_stringvalue(std::string* stringvalue);
  private:
  const std::string& _internal_stringvalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stringvalue(const std::string& value);
  std::string* _internal_mutable_stringvalue();
  public:

  // int32 intValue = 30;
  bool has_intvalue() const;
  private:
  bool _internal_has_intvalue() const;
  public:
  void clear_intvalue();
  int32_t intvalue() const;
  void set_intvalue(int32_t value);
  private:
  int32_t _internal_intvalue() const;
  void _internal_set_intvalue(int32_t value);
  public:

  // int64 longValue = 40;
  bool has_longvalue() const;
  private:
  bool _internal_has_longvalue() const;
  public:
  void clear_longvalue();
  int64_t longvalue() const;
  void set_longvalue(int64_t value);
  private:
  int64_t _internal_longvalue() const;
  void _internal_set_longvalue(int64_t value);
  public:

  // bool boolValue = 50;
  bool has_boolvalue() const;
  private:
  bool _internal_has_boolvalue() const;
  public:
  void clear_boolvalue();
  bool boolvalue() const;
  void set_boolvalue(bool value);
  private:
  bool _internal_boolvalue() const;
  void _internal_set_boolvalue(bool value);
  public:

  // bytes bytesValue = 60;
  bool has_bytesvalue() const;
  private:
  bool _internal_has_bytesvalue() const;
  public:
  void clear_bytesvalue();
  const std::string& bytesvalue() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_bytesvalue(ArgT0&& arg0, ArgT... args);
  std::string* mutable_bytesvalue();
  PROTOBUF_NODISCARD std::string* release_bytesvalue();
  void set_allocated_bytesvalue(std::string* bytesvalue);
  private:
  const std::string& _internal_bytesvalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytesvalue(const std::string& value);
  std::string* _internal_mutable_bytesvalue();
  public:

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.CustomModel.CustomModelParamValue)
 private:
  class _Internal;
  void set_has_doublevalue();
  void set_has_stringvalue();
  void set_has_intvalue();
  void set_has_longvalue();
  void set_has_boolvalue();
  void set_has_bytesvalue();

  inline bool has_value() const;
  inline void clear_has_value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    double doublevalue_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
    int32_t intvalue_;
    int64_t longvalue_;
    bool boolvalue_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytesvalue_;
  } value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_CustomModel_2eproto;
};
// -------------------------------------------------------------------

class CustomModel_ParametersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<CustomModel_ParametersEntry_DoNotUse, 
    std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntryLite<CustomModel_ParametersEntry_DoNotUse, 
    std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  CustomModel_ParametersEntry_DoNotUse();
  explicit constexpr CustomModel_ParametersEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit CustomModel_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CustomModel_ParametersEntry_DoNotUse& other);
  static const CustomModel_ParametersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CustomModel_ParametersEntry_DoNotUse*>(&_CustomModel_ParametersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "CoreML.Specification.CustomModel.ParametersEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
};

// -------------------------------------------------------------------

class CustomModel final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.CustomModel) */ {
 public:
  inline CustomModel() : CustomModel(nullptr) {}
  ~CustomModel() override;
  explicit constexpr CustomModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CustomModel(const CustomModel& from);
  CustomModel(CustomModel&& from) noexcept
    : CustomModel() {
    *this = ::std::move(from);
  }

  inline CustomModel& operator=(const CustomModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomModel& operator=(CustomModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const CustomModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomModel* internal_default_instance() {
    return reinterpret_cast<const CustomModel*>(
               &_CustomModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CustomModel& a, CustomModel& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CustomModel>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const CustomModel& from);
  void MergeFrom(const CustomModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CustomModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CoreML.Specification.CustomModel";
  }
  protected:
  explicit CustomModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef CustomModel_CustomModelParamValue CustomModelParamValue;

  // accessors -------------------------------------------------------

  enum : int {
    kParametersFieldNumber = 30,
    kClassNameFieldNumber = 10,
    kDescriptionFieldNumber = 40,
  };
  // map<string, .CoreML.Specification.CustomModel.CustomModelParamValue> parameters = 30;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;
  public:
  void clear_parameters();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >&
      _internal_parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >*
      _internal_mutable_parameters();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >&
      parameters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >*
      mutable_parameters();

  // string className = 10;
  void clear_classname();
  const std::string& classname() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_classname(ArgT0&& arg0, ArgT... args);
  std::string* mutable_classname();
  PROTOBUF_NODISCARD std::string* release_classname();
  void set_allocated_classname(std::string* classname);
  private:
  const std::string& _internal_classname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_classname(const std::string& value);
  std::string* _internal_mutable_classname();
  public:

  // string description = 40;
  void clear_description();
  const std::string& description() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_description(ArgT0&& arg0, ArgT... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // @@protoc_insertion_point(class_scope:CoreML.Specification.CustomModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapFieldLite<
      CustomModel_ParametersEntry_DoNotUse,
      std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> parameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr classname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_CustomModel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CustomModel_CustomModelParamValue

// double doubleValue = 10;
inline bool CustomModel_CustomModelParamValue::_internal_has_doublevalue() const {
  return value_case() == kDoubleValue;
}
inline bool CustomModel_CustomModelParamValue::has_doublevalue() const {
  return _internal_has_doublevalue();
}
inline void CustomModel_CustomModelParamValue::set_has_doublevalue() {
  _oneof_case_[0] = kDoubleValue;
}
inline void CustomModel_CustomModelParamValue::clear_doublevalue() {
  if (_internal_has_doublevalue()) {
    value_.doublevalue_ = 0;
    clear_has_value();
  }
}
inline double CustomModel_CustomModelParamValue::_internal_doublevalue() const {
  if (_internal_has_doublevalue()) {
    return value_.doublevalue_;
  }
  return 0;
}
inline void CustomModel_CustomModelParamValue::_internal_set_doublevalue(double value) {
  if (!_internal_has_doublevalue()) {
    clear_value();
    set_has_doublevalue();
  }
  value_.doublevalue_ = value;
}
inline double CustomModel_CustomModelParamValue::doublevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.doubleValue)
  return _internal_doublevalue();
}
inline void CustomModel_CustomModelParamValue::set_doublevalue(double value) {
  _internal_set_doublevalue(value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.doubleValue)
}

// string stringValue = 20;
inline bool CustomModel_CustomModelParamValue::_internal_has_stringvalue() const {
  return value_case() == kStringValue;
}
inline bool CustomModel_CustomModelParamValue::has_stringvalue() const {
  return _internal_has_stringvalue();
}
inline void CustomModel_CustomModelParamValue::set_has_stringvalue() {
  _oneof_case_[0] = kStringValue;
}
inline void CustomModel_CustomModelParamValue::clear_stringvalue() {
  if (_internal_has_stringvalue()) {
    value_.stringvalue_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_value();
  }
}
inline const std::string& CustomModel_CustomModelParamValue::stringvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.stringValue)
  return _internal_stringvalue();
}
template <typename ArgT0, typename... ArgT>
inline void CustomModel_CustomModelParamValue::set_stringvalue(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.stringValue)
}
inline std::string* CustomModel_CustomModelParamValue::mutable_stringvalue() {
  std::string* _s = _internal_mutable_stringvalue();
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.CustomModel.CustomModelParamValue.stringValue)
  return _s;
}
inline const std::string& CustomModel_CustomModelParamValue::_internal_stringvalue() const {
  if (_internal_has_stringvalue()) {
    return value_.stringvalue_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void CustomModel_CustomModelParamValue::_internal_set_stringvalue(const std::string& value) {
  if (!_internal_has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CustomModel_CustomModelParamValue::_internal_mutable_stringvalue() {
  if (!_internal_has_stringvalue()) {
    clear_value();
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return value_.stringvalue_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CustomModel_CustomModelParamValue::release_stringvalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.CustomModel.CustomModelParamValue.stringValue)
  if (_internal_has_stringvalue()) {
    clear_has_value();
    return value_.stringvalue_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void CustomModel_CustomModelParamValue::set_allocated_stringvalue(std::string* stringvalue) {
  if (has_value()) {
    clear_value();
  }
  if (stringvalue != nullptr) {
    set_has_stringvalue();
    value_.stringvalue_.UnsafeSetDefault(stringvalue);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(stringvalue);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.CustomModel.CustomModelParamValue.stringValue)
}

// int32 intValue = 30;
inline bool CustomModel_CustomModelParamValue::_internal_has_intvalue() const {
  return value_case() == kIntValue;
}
inline bool CustomModel_CustomModelParamValue::has_intvalue() const {
  return _internal_has_intvalue();
}
inline void CustomModel_CustomModelParamValue::set_has_intvalue() {
  _oneof_case_[0] = kIntValue;
}
inline void CustomModel_CustomModelParamValue::clear_intvalue() {
  if (_internal_has_intvalue()) {
    value_.intvalue_ = 0;
    clear_has_value();
  }
}
inline int32_t CustomModel_CustomModelParamValue::_internal_intvalue() const {
  if (_internal_has_intvalue()) {
    return value_.intvalue_;
  }
  return 0;
}
inline void CustomModel_CustomModelParamValue::_internal_set_intvalue(int32_t value) {
  if (!_internal_has_intvalue()) {
    clear_value();
    set_has_intvalue();
  }
  value_.intvalue_ = value;
}
inline int32_t CustomModel_CustomModelParamValue::intvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.intValue)
  return _internal_intvalue();
}
inline void CustomModel_CustomModelParamValue::set_intvalue(int32_t value) {
  _internal_set_intvalue(value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.intValue)
}

// int64 longValue = 40;
inline bool CustomModel_CustomModelParamValue::_internal_has_longvalue() const {
  return value_case() == kLongValue;
}
inline bool CustomModel_CustomModelParamValue::has_longvalue() const {
  return _internal_has_longvalue();
}
inline void CustomModel_CustomModelParamValue::set_has_longvalue() {
  _oneof_case_[0] = kLongValue;
}
inline void CustomModel_CustomModelParamValue::clear_longvalue() {
  if (_internal_has_longvalue()) {
    value_.longvalue_ = int64_t{0};
    clear_has_value();
  }
}
inline int64_t CustomModel_CustomModelParamValue::_internal_longvalue() const {
  if (_internal_has_longvalue()) {
    return value_.longvalue_;
  }
  return int64_t{0};
}
inline void CustomModel_CustomModelParamValue::_internal_set_longvalue(int64_t value) {
  if (!_internal_has_longvalue()) {
    clear_value();
    set_has_longvalue();
  }
  value_.longvalue_ = value;
}
inline int64_t CustomModel_CustomModelParamValue::longvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.longValue)
  return _internal_longvalue();
}
inline void CustomModel_CustomModelParamValue::set_longvalue(int64_t value) {
  _internal_set_longvalue(value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.longValue)
}

// bool boolValue = 50;
inline bool CustomModel_CustomModelParamValue::_internal_has_boolvalue() const {
  return value_case() == kBoolValue;
}
inline bool CustomModel_CustomModelParamValue::has_boolvalue() const {
  return _internal_has_boolvalue();
}
inline void CustomModel_CustomModelParamValue::set_has_boolvalue() {
  _oneof_case_[0] = kBoolValue;
}
inline void CustomModel_CustomModelParamValue::clear_boolvalue() {
  if (_internal_has_boolvalue()) {
    value_.boolvalue_ = false;
    clear_has_value();
  }
}
inline bool CustomModel_CustomModelParamValue::_internal_boolvalue() const {
  if (_internal_has_boolvalue()) {
    return value_.boolvalue_;
  }
  return false;
}
inline void CustomModel_CustomModelParamValue::_internal_set_boolvalue(bool value) {
  if (!_internal_has_boolvalue()) {
    clear_value();
    set_has_boolvalue();
  }
  value_.boolvalue_ = value;
}
inline bool CustomModel_CustomModelParamValue::boolvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.boolValue)
  return _internal_boolvalue();
}
inline void CustomModel_CustomModelParamValue::set_boolvalue(bool value) {
  _internal_set_boolvalue(value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.boolValue)
}

// bytes bytesValue = 60;
inline bool CustomModel_CustomModelParamValue::_internal_has_bytesvalue() const {
  return value_case() == kBytesValue;
}
inline bool CustomModel_CustomModelParamValue::has_bytesvalue() const {
  return _internal_has_bytesvalue();
}
inline void CustomModel_CustomModelParamValue::set_has_bytesvalue() {
  _oneof_case_[0] = kBytesValue;
}
inline void CustomModel_CustomModelParamValue::clear_bytesvalue() {
  if (_internal_has_bytesvalue()) {
    value_.bytesvalue_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_value();
  }
}
inline const std::string& CustomModel_CustomModelParamValue::bytesvalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.CustomModelParamValue.bytesValue)
  return _internal_bytesvalue();
}
template <typename ArgT0, typename... ArgT>
inline void CustomModel_CustomModelParamValue::set_bytesvalue(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_bytesvalue()) {
    clear_value();
    set_has_bytesvalue();
    value_.bytesvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytesvalue_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.CustomModelParamValue.bytesValue)
}
inline std::string* CustomModel_CustomModelParamValue::mutable_bytesvalue() {
  std::string* _s = _internal_mutable_bytesvalue();
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.CustomModel.CustomModelParamValue.bytesValue)
  return _s;
}
inline const std::string& CustomModel_CustomModelParamValue::_internal_bytesvalue() const {
  if (_internal_has_bytesvalue()) {
    return value_.bytesvalue_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void CustomModel_CustomModelParamValue::_internal_set_bytesvalue(const std::string& value) {
  if (!_internal_has_bytesvalue()) {
    clear_value();
    set_has_bytesvalue();
    value_.bytesvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytesvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CustomModel_CustomModelParamValue::_internal_mutable_bytesvalue() {
  if (!_internal_has_bytesvalue()) {
    clear_value();
    set_has_bytesvalue();
    value_.bytesvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return value_.bytesvalue_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CustomModel_CustomModelParamValue::release_bytesvalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.CustomModel.CustomModelParamValue.bytesValue)
  if (_internal_has_bytesvalue()) {
    clear_has_value();
    return value_.bytesvalue_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void CustomModel_CustomModelParamValue::set_allocated_bytesvalue(std::string* bytesvalue) {
  if (has_value()) {
    clear_value();
  }
  if (bytesvalue != nullptr) {
    set_has_bytesvalue();
    value_.bytesvalue_.UnsafeSetDefault(bytesvalue);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(bytesvalue);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.CustomModel.CustomModelParamValue.bytesValue)
}

inline bool CustomModel_CustomModelParamValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void CustomModel_CustomModelParamValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline CustomModel_CustomModelParamValue::ValueCase CustomModel_CustomModelParamValue::value_case() const {
  return CustomModel_CustomModelParamValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CustomModel

// string className = 10;
inline void CustomModel::clear_classname() {
  classname_.ClearToEmpty();
}
inline const std::string& CustomModel::classname() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.className)
  return _internal_classname();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CustomModel::set_classname(ArgT0&& arg0, ArgT... args) {
 
 classname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.className)
}
inline std::string* CustomModel::mutable_classname() {
  std::string* _s = _internal_mutable_classname();
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.CustomModel.className)
  return _s;
}
inline const std::string& CustomModel::_internal_classname() const {
  return classname_.Get();
}
inline void CustomModel::_internal_set_classname(const std::string& value) {
  
  classname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CustomModel::_internal_mutable_classname() {
  
  return classname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CustomModel::release_classname() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.CustomModel.className)
  return classname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CustomModel::set_allocated_classname(std::string* classname) {
  if (classname != nullptr) {
    
  } else {
    
  }
  classname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), classname,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (classname_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    classname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.CustomModel.className)
}

// map<string, .CoreML.Specification.CustomModel.CustomModelParamValue> parameters = 30;
inline int CustomModel::_internal_parameters_size() const {
  return parameters_.size();
}
inline int CustomModel::parameters_size() const {
  return _internal_parameters_size();
}
inline void CustomModel::clear_parameters() {
  parameters_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >&
CustomModel::_internal_parameters() const {
  return parameters_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >&
CustomModel::parameters() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.CustomModel.parameters)
  return _internal_parameters();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >*
CustomModel::_internal_mutable_parameters() {
  return parameters_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::CoreML::Specification::CustomModel_CustomModelParamValue >*
CustomModel::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.CustomModel.parameters)
  return _internal_mutable_parameters();
}

// string description = 40;
inline void CustomModel::clear_description() {
  description_.ClearToEmpty();
}
inline const std::string& CustomModel::description() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.CustomModel.description)
  return _internal_description();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CustomModel::set_description(ArgT0&& arg0, ArgT... args) {
 
 description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CoreML.Specification.CustomModel.description)
}
inline std::string* CustomModel::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.CustomModel.description)
  return _s;
}
inline const std::string& CustomModel::_internal_description() const {
  return description_.Get();
}
inline void CustomModel::_internal_set_description(const std::string& value) {
  
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CustomModel::_internal_mutable_description() {
  
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CustomModel::release_description() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.CustomModel.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CustomModel::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (description_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.CustomModel.description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_CustomModel_2eproto
