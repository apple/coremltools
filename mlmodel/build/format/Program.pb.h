// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Program.proto

#ifndef PROTOBUF_Program_2eproto__INCLUDED
#define PROTOBUF_Program_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_lite.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace CoreML {
namespace Specification {
namespace V5 {
class Block;
class BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
class Block_InputsEntry;
class Block_InputsEntryDefaultTypeInternal;
extern Block_InputsEntryDefaultTypeInternal _Block_InputsEntry_default_instance_;
class Dimension;
class DimensionDefaultTypeInternal;
extern DimensionDefaultTypeInternal _Dimension_default_instance_;
class Function;
class FunctionDefaultTypeInternal;
extern FunctionDefaultTypeInternal _Function_default_instance_;
class ListType;
class ListTypeDefaultTypeInternal;
extern ListTypeDefaultTypeInternal _ListType_default_instance_;
class NamedValueType;
class NamedValueTypeDefaultTypeInternal;
extern NamedValueTypeDefaultTypeInternal _NamedValueType_default_instance_;
class Operator;
class OperatorDefaultTypeInternal;
extern OperatorDefaultTypeInternal _Operator_default_instance_;
class Operator_AttributesEntry;
class Operator_AttributesEntryDefaultTypeInternal;
extern Operator_AttributesEntryDefaultTypeInternal _Operator_AttributesEntry_default_instance_;
class Operator_InputsEntry;
class Operator_InputsEntryDefaultTypeInternal;
extern Operator_InputsEntryDefaultTypeInternal _Operator_InputsEntry_default_instance_;
class Program;
class ProgramDefaultTypeInternal;
extern ProgramDefaultTypeInternal _Program_default_instance_;
class Program_ParametersEntry;
class Program_ParametersEntryDefaultTypeInternal;
extern Program_ParametersEntryDefaultTypeInternal _Program_ParametersEntry_default_instance_;
class TensorType;
class TensorTypeDefaultTypeInternal;
extern TensorTypeDefaultTypeInternal _TensorType_default_instance_;
class TensorValue;
class TensorValueDefaultTypeInternal;
extern TensorValueDefaultTypeInternal _TensorValue_default_instance_;
class TupleType;
class TupleTypeDefaultTypeInternal;
extern TupleTypeDefaultTypeInternal _TupleType_default_instance_;
class TupleValue;
class TupleValueDefaultTypeInternal;
extern TupleValueDefaultTypeInternal _TupleValue_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
class ValueType;
class ValueTypeDefaultTypeInternal;
extern ValueTypeDefaultTypeInternal _ValueType_default_instance_;
class Value_FileValue;
class Value_FileValueDefaultTypeInternal;
extern Value_FileValueDefaultTypeInternal _Value_FileValue_default_instance_;
class Value_ImmediateValue;
class Value_ImmediateValueDefaultTypeInternal;
extern Value_ImmediateValueDefaultTypeInternal _Value_ImmediateValue_default_instance_;
}  // namespace V5
}  // namespace Specification
}  // namespace CoreML

namespace CoreML {
namespace Specification {
namespace V5 {

namespace protobuf_Program_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Program_2eproto

enum ScalarType {
  DYNAMIC = 0,
  BOOL = 1,
  STRING = 2,
  FLOAT16 = 10,
  FLOAT32 = 11,
  FLOAT64 = 12,
  BFLOAT16 = 13,
  INT4 = 20,
  INT8 = 21,
  INT16 = 22,
  INT32 = 23,
  INT64 = 24,
  UINT4 = 30,
  UINT8 = 31,
  UINT16 = 32,
  UINT32 = 33,
  UINT64 = 34,
  ScalarType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScalarType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScalarType_IsValid(int value);
const ScalarType ScalarType_MIN = DYNAMIC;
const ScalarType ScalarType_MAX = UINT64;
const int ScalarType_ARRAYSIZE = ScalarType_MAX + 1;

// ===================================================================


// -------------------------------------------------------------------

class Program : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Program) */ {
 public:
  Program();
  virtual ~Program();

  Program(const Program& from);

  inline Program& operator=(const Program& from) {
    CopyFrom(from);
    return *this;
  }

  static const Program& default_instance();

  static inline const Program* internal_default_instance() {
    return reinterpret_cast<const Program*>(
               &_Program_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Program* other);

  // implements Message ----------------------------------------------

  inline Program* New() const PROTOBUF_FINAL { return New(NULL); }

  Program* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Program& from);
  void MergeFrom(const Program& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Program* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.V5.Function functions = 2;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 2;
  const ::CoreML::Specification::V5::Function& functions(int index) const;
  ::CoreML::Specification::V5::Function* mutable_functions(int index);
  ::CoreML::Specification::V5::Function* add_functions();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >*
      mutable_functions();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >&
      functions() const;

  // map<string, .CoreML.Specification.V5.Value> parameters = 3;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
      parameters() const;
  ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
      mutable_parameters();

  // string docString = 4;
  void clear_docstring();
  static const int kDocStringFieldNumber = 4;
  const ::std::string& docstring() const;
  void set_docstring(const ::std::string& value);
  #if LANG_CXX11
  void set_docstring(::std::string&& value);
  #endif
  void set_docstring(const char* value);
  void set_docstring(const char* value, size_t size);
  ::std::string* mutable_docstring();
  ::std::string* release_docstring();
  void set_allocated_docstring(::std::string* docstring);

  // int64 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Program)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function > functions_;
  public:
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::CoreML::Specification::V5::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Program_ParametersEntry;
  ::google::protobuf::internal::MapFieldLite<
      Program_ParametersEntry,
      ::std::string, ::CoreML::Specification::V5::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > parameters_;
  private:
  ::google::protobuf::internal::ArenaStringPtr docstring_;
  ::google::protobuf::int64 version_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Function : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Function) */ {
 public:
  Function();
  virtual ~Function();

  Function(const Function& from);

  inline Function& operator=(const Function& from) {
    CopyFrom(from);
    return *this;
  }

  static const Function& default_instance();

  static inline const Function* internal_default_instance() {
    return reinterpret_cast<const Function*>(
               &_Function_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Function* other);

  // implements Message ----------------------------------------------

  inline Function* New() const PROTOBUF_FINAL { return New(NULL); }

  Function* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Function& from);
  void MergeFrom(const Function& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Function* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 2;
  const ::CoreML::Specification::V5::NamedValueType& inputs(int index) const;
  ::CoreML::Specification::V5::NamedValueType* mutable_inputs(int index);
  ::CoreML::Specification::V5::NamedValueType* add_inputs();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
      mutable_inputs();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
      inputs() const;

  // repeated .CoreML.Specification.V5.ValueType outputs = 3;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 3;
  const ::CoreML::Specification::V5::ValueType& outputs(int index) const;
  ::CoreML::Specification::V5::ValueType* mutable_outputs(int index);
  ::CoreML::Specification::V5::ValueType* add_outputs();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
      mutable_outputs();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
      outputs() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .CoreML.Specification.V5.Block block = 4;
  bool has_block() const;
  void clear_block();
  static const int kBlockFieldNumber = 4;
  const ::CoreML::Specification::V5::Block& block() const;
  ::CoreML::Specification::V5::Block* mutable_block();
  ::CoreML::Specification::V5::Block* release_block();
  void set_allocated_block(::CoreML::Specification::V5::Block* block);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Function)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType > inputs_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType > outputs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::CoreML::Specification::V5::Block* block_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Block : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Block) */ {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }

  static const Block& default_instance();

  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Block* other);

  // implements Message ----------------------------------------------

  inline Block* New() const PROTOBUF_FINAL { return New(NULL); }

  Block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> inputs = 1;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      inputs() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_inputs();

  // repeated string outputs = 2;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 2;
  const ::std::string& outputs(int index) const;
  ::std::string* mutable_outputs(int index);
  void set_outputs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_outputs(int index, ::std::string&& value);
  #endif
  void set_outputs(int index, const char* value);
  void set_outputs(int index, const char* value, size_t size);
  ::std::string* add_outputs();
  void add_outputs(const ::std::string& value);
  #if LANG_CXX11
  void add_outputs(::std::string&& value);
  #endif
  void add_outputs(const char* value);
  void add_outputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& outputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_outputs();

  // repeated .CoreML.Specification.V5.Operator operators = 3;
  int operators_size() const;
  void clear_operators();
  static const int kOperatorsFieldNumber = 3;
  const ::CoreML::Specification::V5::Operator& operators(int index) const;
  ::CoreML::Specification::V5::Operator* mutable_operators(int index);
  ::CoreML::Specification::V5::Operator* add_operators();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >*
      mutable_operators();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >&
      operators() const;

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  public:
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Block_InputsEntry;
  ::google::protobuf::internal::MapFieldLite<
      Block_InputsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > inputs_;
  private:
  ::google::protobuf::RepeatedPtrField< ::std::string> outputs_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator > operators_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Operator : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Operator) */ {
 public:
  Operator();
  virtual ~Operator();

  Operator(const Operator& from);

  inline Operator& operator=(const Operator& from) {
    CopyFrom(from);
    return *this;
  }

  static const Operator& default_instance();

  static inline const Operator* internal_default_instance() {
    return reinterpret_cast<const Operator*>(
               &_Operator_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Operator* other);

  // implements Message ----------------------------------------------

  inline Operator* New() const PROTOBUF_FINAL { return New(NULL); }

  Operator* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Operator& from);
  void MergeFrom(const Operator& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Operator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> inputs = 3;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      inputs() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_inputs();

  // repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 4;
  const ::CoreML::Specification::V5::NamedValueType& outputs(int index) const;
  ::CoreML::Specification::V5::NamedValueType* mutable_outputs(int index);
  ::CoreML::Specification::V5::NamedValueType* add_outputs();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
      mutable_outputs();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
      outputs() const;

  // repeated .CoreML.Specification.V5.Block blocks = 5;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 5;
  const ::CoreML::Specification::V5::Block& blocks(int index) const;
  ::CoreML::Specification::V5::Block* mutable_blocks(int index);
  ::CoreML::Specification::V5::Block* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >&
      blocks() const;

  // map<string, .CoreML.Specification.V5.Value> attributes = 6;
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
      attributes() const;
  ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
      mutable_attributes();

  // string opType = 1;
  void clear_optype();
  static const int kOpTypeFieldNumber = 1;
  const ::std::string& optype() const;
  void set_optype(const ::std::string& value);
  #if LANG_CXX11
  void set_optype(::std::string&& value);
  #endif
  void set_optype(const char* value);
  void set_optype(const char* value, size_t size);
  ::std::string* mutable_optype();
  ::std::string* release_optype();
  void set_allocated_optype(::std::string* optype);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Operator)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  public:
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Operator_InputsEntry;
  ::google::protobuf::internal::MapFieldLite<
      Operator_InputsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > inputs_;
  private:
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType > outputs_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block > blocks_;
  public:
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::CoreML::Specification::V5::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Operator_AttributesEntry;
  ::google::protobuf::internal::MapFieldLite<
      Operator_AttributesEntry,
      ::std::string, ::CoreML::Specification::V5::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > attributes_;
  private:
  ::google::protobuf::internal::ArenaStringPtr optype_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NamedValueType : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.NamedValueType) */ {
 public:
  NamedValueType();
  virtual ~NamedValueType();

  NamedValueType(const NamedValueType& from);

  inline NamedValueType& operator=(const NamedValueType& from) {
    CopyFrom(from);
    return *this;
  }

  static const NamedValueType& default_instance();

  static inline const NamedValueType* internal_default_instance() {
    return reinterpret_cast<const NamedValueType*>(
               &_NamedValueType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(NamedValueType* other);

  // implements Message ----------------------------------------------

  inline NamedValueType* New() const PROTOBUF_FINAL { return New(NULL); }

  NamedValueType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const NamedValueType& from);
  void MergeFrom(const NamedValueType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NamedValueType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .CoreML.Specification.V5.ValueType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::CoreML::Specification::V5::ValueType& type() const;
  ::CoreML::Specification::V5::ValueType* mutable_type();
  ::CoreML::Specification::V5::ValueType* release_type();
  void set_allocated_type(::CoreML::Specification::V5::ValueType* type);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.NamedValueType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::CoreML::Specification::V5::ValueType* type_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValueType : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.ValueType) */ {
 public:
  ValueType();
  virtual ~ValueType();

  ValueType(const ValueType& from);

  inline ValueType& operator=(const ValueType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ValueType& default_instance();

  enum TypeCase {
    kScalarType = 1,
    kTensorType = 2,
    kListType = 3,
    kTupleType = 4,
    TYPE_NOT_SET = 0,
  };

  static inline const ValueType* internal_default_instance() {
    return reinterpret_cast<const ValueType*>(
               &_ValueType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ValueType* other);

  // implements Message ----------------------------------------------

  inline ValueType* New() const PROTOBUF_FINAL { return New(NULL); }

  ValueType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ValueType& from);
  void MergeFrom(const ValueType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CoreML.Specification.V5.ScalarType scalarType = 1;
  private:
  bool has_scalartype() const;
  public:
  void clear_scalartype();
  static const int kScalarTypeFieldNumber = 1;
  ::CoreML::Specification::V5::ScalarType scalartype() const;
  void set_scalartype(::CoreML::Specification::V5::ScalarType value);

  // .CoreML.Specification.V5.TensorType tensorType = 2;
  bool has_tensortype() const;
  void clear_tensortype();
  static const int kTensorTypeFieldNumber = 2;
  const ::CoreML::Specification::V5::TensorType& tensortype() const;
  ::CoreML::Specification::V5::TensorType* mutable_tensortype();
  ::CoreML::Specification::V5::TensorType* release_tensortype();
  void set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype);

  // .CoreML.Specification.V5.ListType listType = 3;
  bool has_listtype() const;
  void clear_listtype();
  static const int kListTypeFieldNumber = 3;
  const ::CoreML::Specification::V5::ListType& listtype() const;
  ::CoreML::Specification::V5::ListType* mutable_listtype();
  ::CoreML::Specification::V5::ListType* release_listtype();
  void set_allocated_listtype(::CoreML::Specification::V5::ListType* listtype);

  // .CoreML.Specification.V5.TupleType tupleType = 4;
  bool has_tupletype() const;
  void clear_tupletype();
  static const int kTupleTypeFieldNumber = 4;
  const ::CoreML::Specification::V5::TupleType& tupletype() const;
  ::CoreML::Specification::V5::TupleType* mutable_tupletype();
  ::CoreML::Specification::V5::TupleType* release_tupletype();
  void set_allocated_tupletype(::CoreML::Specification::V5::TupleType* tupletype);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.ValueType)
 private:
  void set_has_scalartype();
  void set_has_tensortype();
  void set_has_listtype();
  void set_has_tupletype();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    int scalartype_;
    ::CoreML::Specification::V5::TensorType* tensortype_;
    ::CoreML::Specification::V5::ListType* listtype_;
    ::CoreML::Specification::V5::TupleType* tupletype_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TensorType : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.TensorType) */ {
 public:
  TensorType();
  virtual ~TensorType();

  TensorType(const TensorType& from);

  inline TensorType& operator=(const TensorType& from) {
    CopyFrom(from);
    return *this;
  }

  static const TensorType& default_instance();

  static inline const TensorType* internal_default_instance() {
    return reinterpret_cast<const TensorType*>(
               &_TensorType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TensorType* other);

  // implements Message ----------------------------------------------

  inline TensorType* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TensorType& from);
  void MergeFrom(const TensorType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TensorType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.V5.Dimension dimension = 3;
  int dimension_size() const;
  void clear_dimension();
  static const int kDimensionFieldNumber = 3;
  const ::CoreML::Specification::V5::Dimension& dimension(int index) const;
  ::CoreML::Specification::V5::Dimension* mutable_dimension(int index);
  ::CoreML::Specification::V5::Dimension* add_dimension();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >*
      mutable_dimension();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >&
      dimension() const;

  // int64 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::int64 rank() const;
  void set_rank(::google::protobuf::int64 value);

  // .CoreML.Specification.V5.ScalarType scalarType = 1;
  void clear_scalartype();
  static const int kScalarTypeFieldNumber = 1;
  ::CoreML::Specification::V5::ScalarType scalartype() const;
  void set_scalartype(::CoreML::Specification::V5::ScalarType value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.TensorType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension > dimension_;
  ::google::protobuf::int64 rank_;
  int scalartype_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListType : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.ListType) */ {
 public:
  ListType();
  virtual ~ListType();

  ListType(const ListType& from);

  inline ListType& operator=(const ListType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ListType& default_instance();

  static inline const ListType* internal_default_instance() {
    return reinterpret_cast<const ListType*>(
               &_ListType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ListType* other);

  // implements Message ----------------------------------------------

  inline ListType* New() const PROTOBUF_FINAL { return New(NULL); }

  ListType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ListType& from);
  void MergeFrom(const ListType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CoreML.Specification.V5.ValueType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::CoreML::Specification::V5::ValueType& type() const;
  ::CoreML::Specification::V5::ValueType* mutable_type();
  ::CoreML::Specification::V5::ValueType* release_type();
  void set_allocated_type(::CoreML::Specification::V5::ValueType* type);

  // .CoreML.Specification.V5.Dimension length = 2;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  const ::CoreML::Specification::V5::Dimension& length() const;
  ::CoreML::Specification::V5::Dimension* mutable_length();
  ::CoreML::Specification::V5::Dimension* release_length();
  void set_allocated_length(::CoreML::Specification::V5::Dimension* length);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.ListType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::CoreML::Specification::V5::ValueType* type_;
  ::CoreML::Specification::V5::Dimension* length_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TupleType : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.TupleType) */ {
 public:
  TupleType();
  virtual ~TupleType();

  TupleType(const TupleType& from);

  inline TupleType& operator=(const TupleType& from) {
    CopyFrom(from);
    return *this;
  }

  static const TupleType& default_instance();

  static inline const TupleType* internal_default_instance() {
    return reinterpret_cast<const TupleType*>(
               &_TupleType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TupleType* other);

  // implements Message ----------------------------------------------

  inline TupleType* New() const PROTOBUF_FINAL { return New(NULL); }

  TupleType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TupleType& from);
  void MergeFrom(const TupleType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TupleType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.V5.ValueType values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::CoreML::Specification::V5::ValueType& values(int index) const;
  ::CoreML::Specification::V5::ValueType* mutable_values(int index);
  ::CoreML::Specification::V5::ValueType* add_values();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
      values() const;

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.TupleType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType > values_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Dimension : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Dimension) */ {
 public:
  Dimension();
  virtual ~Dimension();

  Dimension(const Dimension& from);

  inline Dimension& operator=(const Dimension& from) {
    CopyFrom(from);
    return *this;
  }

  static const Dimension& default_instance();

  enum DimensionCase {
    kSymbol = 1,
    kSize = 2,
    DIMENSION_NOT_SET = 0,
  };

  static inline const Dimension* internal_default_instance() {
    return reinterpret_cast<const Dimension*>(
               &_Dimension_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Dimension* other);

  // implements Message ----------------------------------------------

  inline Dimension* New() const PROTOBUF_FINAL { return New(NULL); }

  Dimension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Dimension& from);
  void MergeFrom(const Dimension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Dimension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string symbol = 1;
  private:
  bool has_symbol() const;
  public:
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // int64 size = 2;
  private:
  bool has_size() const;
  public:
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  DimensionCase dimension_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Dimension)
 private:
  void set_has_symbol();
  void set_has_size();

  inline bool has_dimension() const;
  void clear_dimension();
  inline void clear_has_dimension();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union DimensionUnion {
    DimensionUnion() {}
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::google::protobuf::int64 size_;
  } dimension_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_ImmediateValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Value.ImmediateValue) */ {
 public:
  Value_ImmediateValue();
  virtual ~Value_ImmediateValue();

  Value_ImmediateValue(const Value_ImmediateValue& from);

  inline Value_ImmediateValue& operator=(const Value_ImmediateValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const Value_ImmediateValue& default_instance();

  enum ValueCase {
    kF = 1,
    kI = 2,
    kB = 3,
    kS = 4,
    kTensor = 5,
    kTuple = 6,
    VALUE_NOT_SET = 0,
  };

  static inline const Value_ImmediateValue* internal_default_instance() {
    return reinterpret_cast<const Value_ImmediateValue*>(
               &_Value_ImmediateValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Value_ImmediateValue* other);

  // implements Message ----------------------------------------------

  inline Value_ImmediateValue* New() const PROTOBUF_FINAL { return New(NULL); }

  Value_ImmediateValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Value_ImmediateValue& from);
  void MergeFrom(const Value_ImmediateValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Value_ImmediateValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float f = 1;
  private:
  bool has_f() const;
  public:
  void clear_f();
  static const int kFFieldNumber = 1;
  float f() const;
  void set_f(float value);

  // int64 i = 2;
  private:
  bool has_i() const;
  public:
  void clear_i();
  static const int kIFieldNumber = 2;
  ::google::protobuf::int64 i() const;
  void set_i(::google::protobuf::int64 value);

  // bool b = 3;
  private:
  bool has_b() const;
  public:
  void clear_b();
  static const int kBFieldNumber = 3;
  bool b() const;
  void set_b(bool value);

  // bytes s = 4;
  private:
  bool has_s() const;
  public:
  void clear_s();
  static const int kSFieldNumber = 4;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  #if LANG_CXX11
  void set_s(::std::string&& value);
  #endif
  void set_s(const char* value);
  void set_s(const void* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // .CoreML.Specification.V5.TensorValue tensor = 5;
  bool has_tensor() const;
  void clear_tensor();
  static const int kTensorFieldNumber = 5;
  const ::CoreML::Specification::V5::TensorValue& tensor() const;
  ::CoreML::Specification::V5::TensorValue* mutable_tensor();
  ::CoreML::Specification::V5::TensorValue* release_tensor();
  void set_allocated_tensor(::CoreML::Specification::V5::TensorValue* tensor);

  // .CoreML.Specification.V5.TupleValue tuple = 6;
  bool has_tuple() const;
  void clear_tuple();
  static const int kTupleFieldNumber = 6;
  const ::CoreML::Specification::V5::TupleValue& tuple() const;
  ::CoreML::Specification::V5::TupleValue* mutable_tuple();
  ::CoreML::Specification::V5::TupleValue* release_tuple();
  void set_allocated_tuple(::CoreML::Specification::V5::TupleValue* tuple);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Value.ImmediateValue)
 private:
  void set_has_f();
  void set_has_i();
  void set_has_b();
  void set_has_s();
  void set_has_tensor();
  void set_has_tuple();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    float f_;
    ::google::protobuf::int64 i_;
    bool b_;
    ::google::protobuf::internal::ArenaStringPtr s_;
    ::CoreML::Specification::V5::TensorValue* tensor_;
    ::CoreML::Specification::V5::TupleValue* tuple_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value_FileValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Value.FileValue) */ {
 public:
  Value_FileValue();
  virtual ~Value_FileValue();

  Value_FileValue(const Value_FileValue& from);

  inline Value_FileValue& operator=(const Value_FileValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const Value_FileValue& default_instance();

  static inline const Value_FileValue* internal_default_instance() {
    return reinterpret_cast<const Value_FileValue*>(
               &_Value_FileValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Value_FileValue* other);

  // implements Message ----------------------------------------------

  inline Value_FileValue* New() const PROTOBUF_FINAL { return New(NULL); }

  Value_FileValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Value_FileValue& from);
  void MergeFrom(const Value_FileValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Value_FileValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string fileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // uint64 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // uint64 length = 3;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint64 length() const;
  void set_length(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Value.FileValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::uint64 length_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }

  static const Value& default_instance();

  enum ValueCase {
    kImmediateValue = 4,
    kFileValue = 5,
    VALUE_NOT_SET = 0,
  };

  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Value* other);

  // implements Message ----------------------------------------------

  inline Value* New() const PROTOBUF_FINAL { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Value_ImmediateValue ImmediateValue;
  typedef Value_FileValue FileValue;

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string docString = 2;
  void clear_docstring();
  static const int kDocStringFieldNumber = 2;
  const ::std::string& docstring() const;
  void set_docstring(const ::std::string& value);
  #if LANG_CXX11
  void set_docstring(::std::string&& value);
  #endif
  void set_docstring(const char* value);
  void set_docstring(const char* value, size_t size);
  ::std::string* mutable_docstring();
  ::std::string* release_docstring();
  void set_allocated_docstring(::std::string* docstring);

  // .CoreML.Specification.V5.ValueType type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::CoreML::Specification::V5::ValueType& type() const;
  ::CoreML::Specification::V5::ValueType* mutable_type();
  ::CoreML::Specification::V5::ValueType* release_type();
  void set_allocated_type(::CoreML::Specification::V5::ValueType* type);

  // .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
  bool has_immediatevalue() const;
  void clear_immediatevalue();
  static const int kImmediateValueFieldNumber = 4;
  const ::CoreML::Specification::V5::Value_ImmediateValue& immediatevalue() const;
  ::CoreML::Specification::V5::Value_ImmediateValue* mutable_immediatevalue();
  ::CoreML::Specification::V5::Value_ImmediateValue* release_immediatevalue();
  void set_allocated_immediatevalue(::CoreML::Specification::V5::Value_ImmediateValue* immediatevalue);

  // .CoreML.Specification.V5.Value.FileValue fileValue = 5;
  bool has_filevalue() const;
  void clear_filevalue();
  static const int kFileValueFieldNumber = 5;
  const ::CoreML::Specification::V5::Value_FileValue& filevalue() const;
  ::CoreML::Specification::V5::Value_FileValue* mutable_filevalue();
  ::CoreML::Specification::V5::Value_FileValue* release_filevalue();
  void set_allocated_filevalue(::CoreML::Specification::V5::Value_FileValue* filevalue);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.Value)
 private:
  void set_has_immediatevalue();
  void set_has_filevalue();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr docstring_;
  ::CoreML::Specification::V5::ValueType* type_;
  union ValueUnion {
    ValueUnion() {}
    ::CoreML::Specification::V5::Value_ImmediateValue* immediatevalue_;
    ::CoreML::Specification::V5::Value_FileValue* filevalue_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TensorValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.TensorValue) */ {
 public:
  TensorValue();
  virtual ~TensorValue();

  TensorValue(const TensorValue& from);

  inline TensorValue& operator=(const TensorValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const TensorValue& default_instance();

  static inline const TensorValue* internal_default_instance() {
    return reinterpret_cast<const TensorValue*>(
               &_TensorValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TensorValue* other);

  // implements Message ----------------------------------------------

  inline TensorValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TensorValue& from);
  void MergeFrom(const TensorValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TensorValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float floats = 2 [packed = true];
  int floats_size() const;
  void clear_floats();
  static const int kFloatsFieldNumber = 2;
  float floats(int index) const;
  void set_floats(int index, float value);
  void add_floats(float value);
  const ::google::protobuf::RepeatedField< float >&
      floats() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_floats();

  // repeated int64 ints = 3 [packed = true];
  int ints_size() const;
  void clear_ints();
  static const int kIntsFieldNumber = 3;
  ::google::protobuf::int64 ints(int index) const;
  void set_ints(int index, ::google::protobuf::int64 value);
  void add_ints(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ints() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ints();

  // repeated bool bools = 4 [packed = true];
  int bools_size() const;
  void clear_bools();
  static const int kBoolsFieldNumber = 4;
  bool bools(int index) const;
  void set_bools(int index, bool value);
  void add_bools(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      bools() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_bools();

  // repeated bytes strings = 5;
  int strings_size() const;
  void clear_strings();
  static const int kStringsFieldNumber = 5;
  const ::std::string& strings(int index) const;
  ::std::string* mutable_strings(int index);
  void set_strings(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_strings(int index, ::std::string&& value);
  #endif
  void set_strings(int index, const char* value);
  void set_strings(int index, const void* value, size_t size);
  ::std::string* add_strings();
  void add_strings(const ::std::string& value);
  #if LANG_CXX11
  void add_strings(::std::string&& value);
  #endif
  void add_strings(const char* value);
  void add_strings(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strings();

  // .CoreML.Specification.V5.TensorType tensorType = 1;
  bool has_tensortype() const;
  void clear_tensortype();
  static const int kTensorTypeFieldNumber = 1;
  const ::CoreML::Specification::V5::TensorType& tensortype() const;
  ::CoreML::Specification::V5::TensorType* mutable_tensortype();
  ::CoreML::Specification::V5::TensorType* release_tensortype();
  void set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.TensorValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< float > floats_;
  mutable int _floats_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ints_;
  mutable int _ints_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > bools_;
  mutable int _bools_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strings_;
  ::CoreML::Specification::V5::TensorType* tensortype_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TupleValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.V5.TupleValue) */ {
 public:
  TupleValue();
  virtual ~TupleValue();

  TupleValue(const TupleValue& from);

  inline TupleValue& operator=(const TupleValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const TupleValue& default_instance();

  static inline const TupleValue* internal_default_instance() {
    return reinterpret_cast<const TupleValue*>(
               &_TupleValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TupleValue* other);

  // implements Message ----------------------------------------------

  inline TupleValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TupleValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TupleValue& from);
  void MergeFrom(const TupleValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TupleValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CoreML.Specification.V5.Value value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::CoreML::Specification::V5::Value& value(int index) const;
  ::CoreML::Specification::V5::Value* mutable_value(int index);
  ::CoreML::Specification::V5::Value* add_value();
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >*
      mutable_value();
  const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >&
      value() const;

  // @@protoc_insertion_point(class_scope:CoreML.Specification.V5.TupleValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value > value_;
  mutable int _cached_size_;
  friend struct protobuf_Program_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// Program

// int64 version = 1;
inline void Program::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Program::version() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.version)
  return version_;
}
inline void Program::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Program.version)
}

// repeated .CoreML.Specification.V5.Function functions = 2;
inline int Program::functions_size() const {
  return functions_.size();
}
inline void Program::clear_functions() {
  functions_.Clear();
}
inline const ::CoreML::Specification::V5::Function& Program::functions(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.functions)
  return functions_.Get(index);
}
inline ::CoreML::Specification::V5::Function* Program::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Program.functions)
  return functions_.Mutable(index);
}
inline ::CoreML::Specification::V5::Function* Program::add_functions() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Program.functions)
  return functions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >*
Program::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Program.functions)
  return &functions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >&
Program::functions() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Program.functions)
  return functions_;
}

// map<string, .CoreML.Specification.V5.Value> parameters = 3;
inline int Program::parameters_size() const {
  return parameters_.size();
}
inline void Program::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
Program::parameters() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Program.parameters)
  return parameters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
Program::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Program.parameters)
  return parameters_.MutableMap();
}

// string docString = 4;
inline void Program::clear_docstring() {
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Program::docstring() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.docString)
  return docstring_.GetNoArena();
}
inline void Program::set_docstring(const ::std::string& value) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Program.docString)
}
#if LANG_CXX11
inline void Program::set_docstring(::std::string&& value) {
  
  docstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Program.docString)
}
#endif
inline void Program::set_docstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Program.docString)
}
inline void Program::set_docstring(const char* value, size_t size) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Program.docString)
}
inline ::std::string* Program::mutable_docstring() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Program.docString)
  return docstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Program::release_docstring() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Program.docString)
  
  return docstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Program::set_allocated_docstring(::std::string* docstring) {
  if (docstring != NULL) {
    
  } else {
    
  }
  docstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docstring);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Program.docString)
}

// -------------------------------------------------------------------

// Function

// string name = 1;
inline void Function::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Function::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.name)
  return name_.GetNoArena();
}
inline void Function::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Function.name)
}
#if LANG_CXX11
inline void Function::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Function.name)
}
#endif
inline void Function::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Function.name)
}
inline void Function::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Function.name)
}
inline ::std::string* Function::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Function::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Function.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Function::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Function.name)
}

// repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
inline int Function::inputs_size() const {
  return inputs_.size();
}
inline void Function::clear_inputs() {
  inputs_.Clear();
}
inline const ::CoreML::Specification::V5::NamedValueType& Function::inputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.inputs)
  return inputs_.Get(index);
}
inline ::CoreML::Specification::V5::NamedValueType* Function::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.inputs)
  return inputs_.Mutable(index);
}
inline ::CoreML::Specification::V5::NamedValueType* Function::add_inputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Function.inputs)
  return inputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
Function::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Function.inputs)
  return &inputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
Function::inputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Function.inputs)
  return inputs_;
}

// repeated .CoreML.Specification.V5.ValueType outputs = 3;
inline int Function::outputs_size() const {
  return outputs_.size();
}
inline void Function::clear_outputs() {
  outputs_.Clear();
}
inline const ::CoreML::Specification::V5::ValueType& Function::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.outputs)
  return outputs_.Get(index);
}
inline ::CoreML::Specification::V5::ValueType* Function::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.outputs)
  return outputs_.Mutable(index);
}
inline ::CoreML::Specification::V5::ValueType* Function::add_outputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Function.outputs)
  return outputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
Function::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Function.outputs)
  return &outputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
Function::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Function.outputs)
  return outputs_;
}

// .CoreML.Specification.V5.Block block = 4;
inline bool Function::has_block() const {
  return this != internal_default_instance() && block_ != NULL;
}
inline void Function::clear_block() {
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;
}
inline const ::CoreML::Specification::V5::Block& Function::block() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.block)
  return block_ != NULL ? *block_
                         : *::CoreML::Specification::V5::Block::internal_default_instance();
}
inline ::CoreML::Specification::V5::Block* Function::mutable_block() {
  
  if (block_ == NULL) {
    block_ = new ::CoreML::Specification::V5::Block;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.block)
  return block_;
}
inline ::CoreML::Specification::V5::Block* Function::release_block() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Function.block)
  
  ::CoreML::Specification::V5::Block* temp = block_;
  block_ = NULL;
  return temp;
}
inline void Function::set_allocated_block(::CoreML::Specification::V5::Block* block) {
  delete block_;
  block_ = block;
  if (block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Function.block)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Block

// map<string, string> inputs = 1;
inline int Block::inputs_size() const {
  return inputs_.size();
}
inline void Block::clear_inputs() {
  inputs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Block::inputs() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Block.inputs)
  return inputs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Block::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Block.inputs)
  return inputs_.MutableMap();
}

// repeated string outputs = 2;
inline int Block::outputs_size() const {
  return outputs_.size();
}
inline void Block::clear_outputs() {
  outputs_.Clear();
}
inline const ::std::string& Block::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Block.outputs)
  return outputs_.Get(index);
}
inline ::std::string* Block::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Block.outputs)
  return outputs_.Mutable(index);
}
inline void Block::set_outputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Block.outputs)
  outputs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Block::set_outputs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Block.outputs)
  outputs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Block::set_outputs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Block.outputs)
}
inline void Block::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Block.outputs)
}
inline ::std::string* Block::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:CoreML.Specification.V5.Block.outputs)
  return outputs_.Add();
}
inline void Block::add_outputs(const ::std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.outputs)
}
#if LANG_CXX11
inline void Block::add_outputs(::std::string&& value) {
  outputs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.outputs)
}
#endif
inline void Block::add_outputs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CoreML.Specification.V5.Block.outputs)
}
inline void Block::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CoreML.Specification.V5.Block.outputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Block.outputs)
  return outputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Block.outputs)
  return &outputs_;
}

// repeated .CoreML.Specification.V5.Operator operators = 3;
inline int Block::operators_size() const {
  return operators_.size();
}
inline void Block::clear_operators() {
  operators_.Clear();
}
inline const ::CoreML::Specification::V5::Operator& Block::operators(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Block.operators)
  return operators_.Get(index);
}
inline ::CoreML::Specification::V5::Operator* Block::mutable_operators(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Block.operators)
  return operators_.Mutable(index);
}
inline ::CoreML::Specification::V5::Operator* Block::add_operators() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.operators)
  return operators_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >*
Block::mutable_operators() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Block.operators)
  return &operators_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >&
Block::operators() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Block.operators)
  return operators_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Operator

// string opType = 1;
inline void Operator::clear_optype() {
  optype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Operator::optype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.opType)
  return optype_.GetNoArena();
}
inline void Operator::set_optype(const ::std::string& value) {
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Operator.opType)
}
#if LANG_CXX11
inline void Operator::set_optype(::std::string&& value) {
  
  optype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Operator.opType)
}
#endif
inline void Operator::set_optype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Operator.opType)
}
inline void Operator::set_optype(const char* value, size_t size) {
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Operator.opType)
}
inline ::std::string* Operator::mutable_optype() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.opType)
  return optype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Operator::release_optype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Operator.opType)
  
  return optype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Operator::set_allocated_optype(::std::string* optype) {
  if (optype != NULL) {
    
  } else {
    
  }
  optype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optype);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Operator.opType)
}

// string name = 2;
inline void Operator::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Operator::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.name)
  return name_.GetNoArena();
}
inline void Operator::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Operator.name)
}
#if LANG_CXX11
inline void Operator::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Operator.name)
}
#endif
inline void Operator::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Operator.name)
}
inline void Operator::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Operator.name)
}
inline ::std::string* Operator::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Operator::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Operator.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Operator::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Operator.name)
}

// map<string, string> inputs = 3;
inline int Operator::inputs_size() const {
  return inputs_.size();
}
inline void Operator::clear_inputs() {
  inputs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Operator::inputs() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Operator.inputs)
  return inputs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Operator::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Operator.inputs)
  return inputs_.MutableMap();
}

// repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
inline int Operator::outputs_size() const {
  return outputs_.size();
}
inline void Operator::clear_outputs() {
  outputs_.Clear();
}
inline const ::CoreML::Specification::V5::NamedValueType& Operator::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Get(index);
}
inline ::CoreML::Specification::V5::NamedValueType* Operator::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Mutable(index);
}
inline ::CoreML::Specification::V5::NamedValueType* Operator::add_outputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
Operator::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Operator.outputs)
  return &outputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
Operator::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Operator.outputs)
  return outputs_;
}

// repeated .CoreML.Specification.V5.Block blocks = 5;
inline int Operator::blocks_size() const {
  return blocks_.size();
}
inline void Operator::clear_blocks() {
  blocks_.Clear();
}
inline const ::CoreML::Specification::V5::Block& Operator::blocks(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Get(index);
}
inline ::CoreML::Specification::V5::Block* Operator::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Mutable(index);
}
inline ::CoreML::Specification::V5::Block* Operator::add_blocks() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >*
Operator::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Operator.blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >&
Operator::blocks() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Operator.blocks)
  return blocks_;
}

// map<string, .CoreML.Specification.V5.Value> attributes = 6;
inline int Operator::attributes_size() const {
  return attributes_.size();
}
inline void Operator::clear_attributes() {
  attributes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
Operator::attributes() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Operator.attributes)
  return attributes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
Operator::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Operator.attributes)
  return attributes_.MutableMap();
}

// -------------------------------------------------------------------

// NamedValueType

// string name = 1;
inline void NamedValueType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NamedValueType::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.NamedValueType.name)
  return name_.GetNoArena();
}
inline void NamedValueType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.NamedValueType.name)
}
#if LANG_CXX11
inline void NamedValueType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.NamedValueType.name)
}
#endif
inline void NamedValueType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.NamedValueType.name)
}
inline void NamedValueType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.NamedValueType.name)
}
inline ::std::string* NamedValueType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.NamedValueType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NamedValueType::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.NamedValueType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NamedValueType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.NamedValueType.name)
}

// .CoreML.Specification.V5.ValueType type = 2;
inline bool NamedValueType::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void NamedValueType::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
inline const ::CoreML::Specification::V5::ValueType& NamedValueType::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.NamedValueType.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
inline ::CoreML::Specification::V5::ValueType* NamedValueType::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.NamedValueType.type)
  return type_;
}
inline ::CoreML::Specification::V5::ValueType* NamedValueType::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.NamedValueType.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void NamedValueType::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.NamedValueType.type)
}

// -------------------------------------------------------------------

// ValueType

// .CoreML.Specification.V5.ScalarType scalarType = 1;
inline bool ValueType::has_scalartype() const {
  return type_case() == kScalarType;
}
inline void ValueType::set_has_scalartype() {
  _oneof_case_[0] = kScalarType;
}
inline void ValueType::clear_scalartype() {
  if (has_scalartype()) {
    type_.scalartype_ = 0;
    clear_has_type();
  }
}
inline ::CoreML::Specification::V5::ScalarType ValueType::scalartype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.scalarType)
  if (has_scalartype()) {
    return static_cast< ::CoreML::Specification::V5::ScalarType >(type_.scalartype_);
  }
  return static_cast< ::CoreML::Specification::V5::ScalarType >(0);
}
inline void ValueType::set_scalartype(::CoreML::Specification::V5::ScalarType value) {
  if (!has_scalartype()) {
    clear_type();
    set_has_scalartype();
  }
  type_.scalartype_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.ValueType.scalarType)
}

// .CoreML.Specification.V5.TensorType tensorType = 2;
inline bool ValueType::has_tensortype() const {
  return type_case() == kTensorType;
}
inline void ValueType::set_has_tensortype() {
  _oneof_case_[0] = kTensorType;
}
inline void ValueType::clear_tensortype() {
  if (has_tensortype()) {
    delete type_.tensortype_;
    clear_has_type();
  }
}
inline  const ::CoreML::Specification::V5::TensorType& ValueType::tensortype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.tensorType)
  return has_tensortype()
      ? *type_.tensortype_
      : ::CoreML::Specification::V5::TensorType::default_instance();
}
inline ::CoreML::Specification::V5::TensorType* ValueType::mutable_tensortype() {
  if (!has_tensortype()) {
    clear_type();
    set_has_tensortype();
    type_.tensortype_ = new ::CoreML::Specification::V5::TensorType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.tensorType)
  return type_.tensortype_;
}
inline ::CoreML::Specification::V5::TensorType* ValueType::release_tensortype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.tensorType)
  if (has_tensortype()) {
    clear_has_type();
    ::CoreML::Specification::V5::TensorType* temp = type_.tensortype_;
    type_.tensortype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueType::set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype) {
  clear_type();
  if (tensortype) {
    set_has_tensortype();
    type_.tensortype_ = tensortype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.tensorType)
}

// .CoreML.Specification.V5.ListType listType = 3;
inline bool ValueType::has_listtype() const {
  return type_case() == kListType;
}
inline void ValueType::set_has_listtype() {
  _oneof_case_[0] = kListType;
}
inline void ValueType::clear_listtype() {
  if (has_listtype()) {
    delete type_.listtype_;
    clear_has_type();
  }
}
inline  const ::CoreML::Specification::V5::ListType& ValueType::listtype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.listType)
  return has_listtype()
      ? *type_.listtype_
      : ::CoreML::Specification::V5::ListType::default_instance();
}
inline ::CoreML::Specification::V5::ListType* ValueType::mutable_listtype() {
  if (!has_listtype()) {
    clear_type();
    set_has_listtype();
    type_.listtype_ = new ::CoreML::Specification::V5::ListType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.listType)
  return type_.listtype_;
}
inline ::CoreML::Specification::V5::ListType* ValueType::release_listtype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.listType)
  if (has_listtype()) {
    clear_has_type();
    ::CoreML::Specification::V5::ListType* temp = type_.listtype_;
    type_.listtype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueType::set_allocated_listtype(::CoreML::Specification::V5::ListType* listtype) {
  clear_type();
  if (listtype) {
    set_has_listtype();
    type_.listtype_ = listtype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.listType)
}

// .CoreML.Specification.V5.TupleType tupleType = 4;
inline bool ValueType::has_tupletype() const {
  return type_case() == kTupleType;
}
inline void ValueType::set_has_tupletype() {
  _oneof_case_[0] = kTupleType;
}
inline void ValueType::clear_tupletype() {
  if (has_tupletype()) {
    delete type_.tupletype_;
    clear_has_type();
  }
}
inline  const ::CoreML::Specification::V5::TupleType& ValueType::tupletype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.tupleType)
  return has_tupletype()
      ? *type_.tupletype_
      : ::CoreML::Specification::V5::TupleType::default_instance();
}
inline ::CoreML::Specification::V5::TupleType* ValueType::mutable_tupletype() {
  if (!has_tupletype()) {
    clear_type();
    set_has_tupletype();
    type_.tupletype_ = new ::CoreML::Specification::V5::TupleType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.tupleType)
  return type_.tupletype_;
}
inline ::CoreML::Specification::V5::TupleType* ValueType::release_tupletype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.tupleType)
  if (has_tupletype()) {
    clear_has_type();
    ::CoreML::Specification::V5::TupleType* temp = type_.tupletype_;
    type_.tupletype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueType::set_allocated_tupletype(::CoreML::Specification::V5::TupleType* tupletype) {
  clear_type();
  if (tupletype) {
    set_has_tupletype();
    type_.tupletype_ = tupletype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.tupleType)
}

inline bool ValueType::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void ValueType::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline ValueType::TypeCase ValueType::type_case() const {
  return ValueType::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TensorType

// .CoreML.Specification.V5.ScalarType scalarType = 1;
inline void TensorType::clear_scalartype() {
  scalartype_ = 0;
}
inline ::CoreML::Specification::V5::ScalarType TensorType::scalartype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.scalarType)
  return static_cast< ::CoreML::Specification::V5::ScalarType >(scalartype_);
}
inline void TensorType::set_scalartype(::CoreML::Specification::V5::ScalarType value) {
  
  scalartype_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorType.scalarType)
}

// int64 rank = 2;
inline void TensorType::clear_rank() {
  rank_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TensorType::rank() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.rank)
  return rank_;
}
inline void TensorType::set_rank(::google::protobuf::int64 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorType.rank)
}

// repeated .CoreML.Specification.V5.Dimension dimension = 3;
inline int TensorType::dimension_size() const {
  return dimension_.size();
}
inline void TensorType::clear_dimension() {
  dimension_.Clear();
}
inline const ::CoreML::Specification::V5::Dimension& TensorType::dimension(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Get(index);
}
inline ::CoreML::Specification::V5::Dimension* TensorType::mutable_dimension(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Mutable(index);
}
inline ::CoreML::Specification::V5::Dimension* TensorType::add_dimension() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >*
TensorType::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorType.dimension)
  return &dimension_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >&
TensorType::dimension() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorType.dimension)
  return dimension_;
}

// -------------------------------------------------------------------

// ListType

// .CoreML.Specification.V5.ValueType type = 1;
inline bool ListType::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void ListType::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
inline const ::CoreML::Specification::V5::ValueType& ListType::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ListType.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
inline ::CoreML::Specification::V5::ValueType* ListType::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ListType.type)
  return type_;
}
inline ::CoreML::Specification::V5::ValueType* ListType::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ListType.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void ListType::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ListType.type)
}

// .CoreML.Specification.V5.Dimension length = 2;
inline bool ListType::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline void ListType::clear_length() {
  if (GetArenaNoVirtual() == NULL && length_ != NULL) delete length_;
  length_ = NULL;
}
inline const ::CoreML::Specification::V5::Dimension& ListType::length() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ListType.length)
  return length_ != NULL ? *length_
                         : *::CoreML::Specification::V5::Dimension::internal_default_instance();
}
inline ::CoreML::Specification::V5::Dimension* ListType::mutable_length() {
  
  if (length_ == NULL) {
    length_ = new ::CoreML::Specification::V5::Dimension;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ListType.length)
  return length_;
}
inline ::CoreML::Specification::V5::Dimension* ListType::release_length() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ListType.length)
  
  ::CoreML::Specification::V5::Dimension* temp = length_;
  length_ = NULL;
  return temp;
}
inline void ListType::set_allocated_length(::CoreML::Specification::V5::Dimension* length) {
  delete length_;
  length_ = length;
  if (length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ListType.length)
}

// -------------------------------------------------------------------

// TupleType

// repeated .CoreML.Specification.V5.ValueType values = 1;
inline int TupleType::values_size() const {
  return values_.size();
}
inline void TupleType::clear_values() {
  values_.Clear();
}
inline const ::CoreML::Specification::V5::ValueType& TupleType::values(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TupleType.values)
  return values_.Get(index);
}
inline ::CoreML::Specification::V5::ValueType* TupleType::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TupleType.values)
  return values_.Mutable(index);
}
inline ::CoreML::Specification::V5::ValueType* TupleType::add_values() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TupleType.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
TupleType::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TupleType.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
TupleType::values() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TupleType.values)
  return values_;
}

// -------------------------------------------------------------------

// Dimension

// string symbol = 1;
inline bool Dimension::has_symbol() const {
  return dimension_case() == kSymbol;
}
inline void Dimension::set_has_symbol() {
  _oneof_case_[0] = kSymbol;
}
inline void Dimension::clear_symbol() {
  if (has_symbol()) {
    dimension_.symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_dimension();
  }
}
inline const ::std::string& Dimension::symbol() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Dimension.symbol)
  if (has_symbol()) {
    return dimension_.symbol_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Dimension::set_symbol(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
}
#if LANG_CXX11
inline void Dimension::set_symbol(::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Dimension.symbol)
}
#endif
inline void Dimension::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Dimension.symbol)
}
inline void Dimension::set_symbol(const char* value, size_t size) {
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Dimension.symbol)
}
inline ::std::string* Dimension::mutable_symbol() {
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Dimension.symbol)
  return dimension_.symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Dimension::release_symbol() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Dimension.symbol)
  if (has_symbol()) {
    clear_has_dimension();
    return dimension_.symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Dimension::set_allocated_symbol(::std::string* symbol) {
  if (!has_symbol()) {
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_dimension();
  if (symbol != NULL) {
    set_has_symbol();
    dimension_.symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        symbol);
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Dimension.symbol)
}

// int64 size = 2;
inline bool Dimension::has_size() const {
  return dimension_case() == kSize;
}
inline void Dimension::set_has_size() {
  _oneof_case_[0] = kSize;
}
inline void Dimension::clear_size() {
  if (has_size()) {
    dimension_.size_ = GOOGLE_LONGLONG(0);
    clear_has_dimension();
  }
}
inline ::google::protobuf::int64 Dimension::size() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Dimension.size)
  if (has_size()) {
    return dimension_.size_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Dimension::set_size(::google::protobuf::int64 value) {
  if (!has_size()) {
    clear_dimension();
    set_has_size();
  }
  dimension_.size_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.size)
}

inline bool Dimension::has_dimension() const {
  return dimension_case() != DIMENSION_NOT_SET;
}
inline void Dimension::clear_has_dimension() {
  _oneof_case_[0] = DIMENSION_NOT_SET;
}
inline Dimension::DimensionCase Dimension::dimension_case() const {
  return Dimension::DimensionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Value_ImmediateValue

// float f = 1;
inline bool Value_ImmediateValue::has_f() const {
  return value_case() == kF;
}
inline void Value_ImmediateValue::set_has_f() {
  _oneof_case_[0] = kF;
}
inline void Value_ImmediateValue::clear_f() {
  if (has_f()) {
    value_.f_ = 0;
    clear_has_value();
  }
}
inline float Value_ImmediateValue::f() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.f)
  if (has_f()) {
    return value_.f_;
  }
  return 0;
}
inline void Value_ImmediateValue::set_f(float value) {
  if (!has_f()) {
    clear_value();
    set_has_f();
  }
  value_.f_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.f)
}

// int64 i = 2;
inline bool Value_ImmediateValue::has_i() const {
  return value_case() == kI;
}
inline void Value_ImmediateValue::set_has_i() {
  _oneof_case_[0] = kI;
}
inline void Value_ImmediateValue::clear_i() {
  if (has_i()) {
    value_.i_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Value_ImmediateValue::i() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.i)
  if (has_i()) {
    return value_.i_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Value_ImmediateValue::set_i(::google::protobuf::int64 value) {
  if (!has_i()) {
    clear_value();
    set_has_i();
  }
  value_.i_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.i)
}

// bool b = 3;
inline bool Value_ImmediateValue::has_b() const {
  return value_case() == kB;
}
inline void Value_ImmediateValue::set_has_b() {
  _oneof_case_[0] = kB;
}
inline void Value_ImmediateValue::clear_b() {
  if (has_b()) {
    value_.b_ = false;
    clear_has_value();
  }
}
inline bool Value_ImmediateValue::b() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.b)
  if (has_b()) {
    return value_.b_;
  }
  return false;
}
inline void Value_ImmediateValue::set_b(bool value) {
  if (!has_b()) {
    clear_value();
    set_has_b();
  }
  value_.b_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.b)
}

// bytes s = 4;
inline bool Value_ImmediateValue::has_s() const {
  return value_case() == kS;
}
inline void Value_ImmediateValue::set_has_s() {
  _oneof_case_[0] = kS;
}
inline void Value_ImmediateValue::clear_s() {
  if (has_s()) {
    value_.s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Value_ImmediateValue::s() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (has_s()) {
    return value_.s_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Value_ImmediateValue::set_s(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
}
#if LANG_CXX11
inline void Value_ImmediateValue::set_s(::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.ImmediateValue.s)
}
#endif
inline void Value_ImmediateValue::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.ImmediateValue.s)
}
inline void Value_ImmediateValue::set_s(const void* value, size_t size) {
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.ImmediateValue.s)
}
inline ::std::string* Value_ImmediateValue::mutable_s() {
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.s)
  return value_.s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value_ImmediateValue::release_s() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (has_s()) {
    clear_has_value();
    return value_.s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Value_ImmediateValue::set_allocated_s(::std::string* s) {
  if (!has_s()) {
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (s != NULL) {
    set_has_s();
    value_.s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        s);
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.s)
}

// .CoreML.Specification.V5.TensorValue tensor = 5;
inline bool Value_ImmediateValue::has_tensor() const {
  return value_case() == kTensor;
}
inline void Value_ImmediateValue::set_has_tensor() {
  _oneof_case_[0] = kTensor;
}
inline void Value_ImmediateValue::clear_tensor() {
  if (has_tensor()) {
    delete value_.tensor_;
    clear_has_value();
  }
}
inline  const ::CoreML::Specification::V5::TensorValue& Value_ImmediateValue::tensor() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  return has_tensor()
      ? *value_.tensor_
      : ::CoreML::Specification::V5::TensorValue::default_instance();
}
inline ::CoreML::Specification::V5::TensorValue* Value_ImmediateValue::mutable_tensor() {
  if (!has_tensor()) {
    clear_value();
    set_has_tensor();
    value_.tensor_ = new ::CoreML::Specification::V5::TensorValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  return value_.tensor_;
}
inline ::CoreML::Specification::V5::TensorValue* Value_ImmediateValue::release_tensor() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  if (has_tensor()) {
    clear_has_value();
    ::CoreML::Specification::V5::TensorValue* temp = value_.tensor_;
    value_.tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value_ImmediateValue::set_allocated_tensor(::CoreML::Specification::V5::TensorValue* tensor) {
  clear_value();
  if (tensor) {
    set_has_tensor();
    value_.tensor_ = tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.tensor)
}

// .CoreML.Specification.V5.TupleValue tuple = 6;
inline bool Value_ImmediateValue::has_tuple() const {
  return value_case() == kTuple;
}
inline void Value_ImmediateValue::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
inline void Value_ImmediateValue::clear_tuple() {
  if (has_tuple()) {
    delete value_.tuple_;
    clear_has_value();
  }
}
inline  const ::CoreML::Specification::V5::TupleValue& Value_ImmediateValue::tuple() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  return has_tuple()
      ? *value_.tuple_
      : ::CoreML::Specification::V5::TupleValue::default_instance();
}
inline ::CoreML::Specification::V5::TupleValue* Value_ImmediateValue::mutable_tuple() {
  if (!has_tuple()) {
    clear_value();
    set_has_tuple();
    value_.tuple_ = new ::CoreML::Specification::V5::TupleValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  return value_.tuple_;
}
inline ::CoreML::Specification::V5::TupleValue* Value_ImmediateValue::release_tuple() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  if (has_tuple()) {
    clear_has_value();
    ::CoreML::Specification::V5::TupleValue* temp = value_.tuple_;
    value_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value_ImmediateValue::set_allocated_tuple(::CoreML::Specification::V5::TupleValue* tuple) {
  clear_value();
  if (tuple) {
    set_has_tuple();
    value_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.tuple)
}

inline bool Value_ImmediateValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Value_ImmediateValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Value_ImmediateValue::ValueCase Value_ImmediateValue::value_case() const {
  return Value_ImmediateValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Value_FileValue

// string fileName = 1;
inline void Value_FileValue::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Value_FileValue::filename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.fileName)
  return filename_.GetNoArena();
}
inline void Value_FileValue::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.fileName)
}
#if LANG_CXX11
inline void Value_FileValue::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.FileValue.fileName)
}
#endif
inline void Value_FileValue::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.FileValue.fileName)
}
inline void Value_FileValue::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.FileValue.fileName)
}
inline ::std::string* Value_FileValue::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.FileValue.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value_FileValue::release_filename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.FileValue.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value_FileValue::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.FileValue.fileName)
}

// uint64 offset = 2;
inline void Value_FileValue::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value_FileValue::offset() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.offset)
  return offset_;
}
inline void Value_FileValue::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.offset)
}

// uint64 length = 3;
inline void Value_FileValue::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value_FileValue::length() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.length)
  return length_;
}
inline void Value_FileValue::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.length)
}

// -------------------------------------------------------------------

// Value

// string name = 1;
inline void Value::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Value::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.name)
  return name_.GetNoArena();
}
inline void Value::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.name)
}
#if LANG_CXX11
inline void Value::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.name)
}
#endif
inline void Value::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.name)
}
inline void Value::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.name)
}
inline ::std::string* Value::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.name)
}

// string docString = 2;
inline void Value::clear_docstring() {
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Value::docstring() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.docString)
  return docstring_.GetNoArena();
}
inline void Value::set_docstring(const ::std::string& value) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.docString)
}
#if LANG_CXX11
inline void Value::set_docstring(::std::string&& value) {
  
  docstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.docString)
}
#endif
inline void Value::set_docstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.docString)
}
inline void Value::set_docstring(const char* value, size_t size) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.docString)
}
inline ::std::string* Value::mutable_docstring() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.docString)
  return docstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_docstring() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.docString)
  
  return docstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_docstring(::std::string* docstring) {
  if (docstring != NULL) {
    
  } else {
    
  }
  docstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docstring);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.docString)
}

// .CoreML.Specification.V5.ValueType type = 3;
inline bool Value::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void Value::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
inline const ::CoreML::Specification::V5::ValueType& Value::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
inline ::CoreML::Specification::V5::ValueType* Value::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.type)
  return type_;
}
inline ::CoreML::Specification::V5::ValueType* Value::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void Value::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.type)
}

// .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
inline bool Value::has_immediatevalue() const {
  return value_case() == kImmediateValue;
}
inline void Value::set_has_immediatevalue() {
  _oneof_case_[0] = kImmediateValue;
}
inline void Value::clear_immediatevalue() {
  if (has_immediatevalue()) {
    delete value_.immediatevalue_;
    clear_has_value();
  }
}
inline  const ::CoreML::Specification::V5::Value_ImmediateValue& Value::immediatevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.immediateValue)
  return has_immediatevalue()
      ? *value_.immediatevalue_
      : ::CoreML::Specification::V5::Value_ImmediateValue::default_instance();
}
inline ::CoreML::Specification::V5::Value_ImmediateValue* Value::mutable_immediatevalue() {
  if (!has_immediatevalue()) {
    clear_value();
    set_has_immediatevalue();
    value_.immediatevalue_ = new ::CoreML::Specification::V5::Value_ImmediateValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.immediateValue)
  return value_.immediatevalue_;
}
inline ::CoreML::Specification::V5::Value_ImmediateValue* Value::release_immediatevalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.immediateValue)
  if (has_immediatevalue()) {
    clear_has_value();
    ::CoreML::Specification::V5::Value_ImmediateValue* temp = value_.immediatevalue_;
    value_.immediatevalue_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::set_allocated_immediatevalue(::CoreML::Specification::V5::Value_ImmediateValue* immediatevalue) {
  clear_value();
  if (immediatevalue) {
    set_has_immediatevalue();
    value_.immediatevalue_ = immediatevalue;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.immediateValue)
}

// .CoreML.Specification.V5.Value.FileValue fileValue = 5;
inline bool Value::has_filevalue() const {
  return value_case() == kFileValue;
}
inline void Value::set_has_filevalue() {
  _oneof_case_[0] = kFileValue;
}
inline void Value::clear_filevalue() {
  if (has_filevalue()) {
    delete value_.filevalue_;
    clear_has_value();
  }
}
inline  const ::CoreML::Specification::V5::Value_FileValue& Value::filevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.fileValue)
  return has_filevalue()
      ? *value_.filevalue_
      : ::CoreML::Specification::V5::Value_FileValue::default_instance();
}
inline ::CoreML::Specification::V5::Value_FileValue* Value::mutable_filevalue() {
  if (!has_filevalue()) {
    clear_value();
    set_has_filevalue();
    value_.filevalue_ = new ::CoreML::Specification::V5::Value_FileValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.fileValue)
  return value_.filevalue_;
}
inline ::CoreML::Specification::V5::Value_FileValue* Value::release_filevalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.fileValue)
  if (has_filevalue()) {
    clear_has_value();
    ::CoreML::Specification::V5::Value_FileValue* temp = value_.filevalue_;
    value_.filevalue_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::set_allocated_filevalue(::CoreML::Specification::V5::Value_FileValue* filevalue) {
  clear_value();
  if (filevalue) {
    set_has_filevalue();
    value_.filevalue_ = filevalue;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.fileValue)
}

inline bool Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Value::ValueCase Value::value_case() const {
  return Value::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TensorValue

// .CoreML.Specification.V5.TensorType tensorType = 1;
inline bool TensorValue::has_tensortype() const {
  return this != internal_default_instance() && tensortype_ != NULL;
}
inline void TensorValue::clear_tensortype() {
  if (GetArenaNoVirtual() == NULL && tensortype_ != NULL) delete tensortype_;
  tensortype_ = NULL;
}
inline const ::CoreML::Specification::V5::TensorType& TensorValue::tensortype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.tensorType)
  return tensortype_ != NULL ? *tensortype_
                         : *::CoreML::Specification::V5::TensorType::internal_default_instance();
}
inline ::CoreML::Specification::V5::TensorType* TensorValue::mutable_tensortype() {
  
  if (tensortype_ == NULL) {
    tensortype_ = new ::CoreML::Specification::V5::TensorType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorValue.tensorType)
  return tensortype_;
}
inline ::CoreML::Specification::V5::TensorType* TensorValue::release_tensortype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.TensorValue.tensorType)
  
  ::CoreML::Specification::V5::TensorType* temp = tensortype_;
  tensortype_ = NULL;
  return temp;
}
inline void TensorValue::set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype) {
  delete tensortype_;
  tensortype_ = tensortype;
  if (tensortype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.TensorValue.tensorType)
}

// repeated float floats = 2 [packed = true];
inline int TensorValue::floats_size() const {
  return floats_.size();
}
inline void TensorValue::clear_floats() {
  floats_.Clear();
}
inline float TensorValue::floats(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.floats)
  return floats_.Get(index);
}
inline void TensorValue::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.floats)
}
inline void TensorValue::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.floats)
}
inline const ::google::protobuf::RepeatedField< float >&
TensorValue::floats() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.floats)
  return floats_;
}
inline ::google::protobuf::RepeatedField< float >*
TensorValue::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.floats)
  return &floats_;
}

// repeated int64 ints = 3 [packed = true];
inline int TensorValue::ints_size() const {
  return ints_.size();
}
inline void TensorValue::clear_ints() {
  ints_.Clear();
}
inline ::google::protobuf::int64 TensorValue::ints(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.ints)
  return ints_.Get(index);
}
inline void TensorValue::set_ints(int index, ::google::protobuf::int64 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.ints)
}
inline void TensorValue::add_ints(::google::protobuf::int64 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.ints)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorValue::ints() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.ints)
  return ints_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorValue::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.ints)
  return &ints_;
}

// repeated bool bools = 4 [packed = true];
inline int TensorValue::bools_size() const {
  return bools_.size();
}
inline void TensorValue::clear_bools() {
  bools_.Clear();
}
inline bool TensorValue::bools(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.bools)
  return bools_.Get(index);
}
inline void TensorValue::set_bools(int index, bool value) {
  bools_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.bools)
}
inline void TensorValue::add_bools(bool value) {
  bools_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.bools)
}
inline const ::google::protobuf::RepeatedField< bool >&
TensorValue::bools() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.bools)
  return bools_;
}
inline ::google::protobuf::RepeatedField< bool >*
TensorValue::mutable_bools() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.bools)
  return &bools_;
}

// repeated bytes strings = 5;
inline int TensorValue::strings_size() const {
  return strings_.size();
}
inline void TensorValue::clear_strings() {
  strings_.Clear();
}
inline const ::std::string& TensorValue::strings(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Get(index);
}
inline ::std::string* TensorValue::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Mutable(index);
}
inline void TensorValue::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.strings)
  strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TensorValue::set_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.strings)
  strings_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TensorValue::set_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.TensorValue.strings)
}
inline void TensorValue::set_strings(int index, const void* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.TensorValue.strings)
}
inline ::std::string* TensorValue::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Add();
}
inline void TensorValue::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.strings)
}
#if LANG_CXX11
inline void TensorValue::add_strings(::std::string&& value) {
  strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.strings)
}
#endif
inline void TensorValue::add_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CoreML.Specification.V5.TensorValue.strings)
}
inline void TensorValue::add_strings(const void* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CoreML.Specification.V5.TensorValue.strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TensorValue::strings() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.strings)
  return strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TensorValue::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.strings)
  return &strings_;
}

// -------------------------------------------------------------------

// TupleValue

// repeated .CoreML.Specification.V5.Value value = 1;
inline int TupleValue::value_size() const {
  return value_.size();
}
inline void TupleValue::clear_value() {
  value_.Clear();
}
inline const ::CoreML::Specification::V5::Value& TupleValue::value(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TupleValue.value)
  return value_.Get(index);
}
inline ::CoreML::Specification::V5::Value* TupleValue::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TupleValue.value)
  return value_.Mutable(index);
}
inline ::CoreML::Specification::V5::Value* TupleValue::add_value() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TupleValue.value)
  return value_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >*
TupleValue::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TupleValue.value)
  return &value_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >&
TupleValue::value() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TupleValue.value)
  return value_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace V5
}  // namespace Specification
}  // namespace CoreML

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CoreML::Specification::V5::ScalarType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Program_2eproto__INCLUDED
