// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Normalizer.proto

#ifndef PROTOBUF_Normalizer_2eproto__INCLUDED
#define PROTOBUF_Normalizer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace CoreML {
namespace Specification {
class Normalizer;
class NormalizerDefaultTypeInternal;
extern NormalizerDefaultTypeInternal _Normalizer_default_instance_;
}  // namespace Specification
}  // namespace CoreML

namespace CoreML {
namespace Specification {

namespace protobuf_Normalizer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Normalizer_2eproto

enum Normalizer_NormType {
  Normalizer_NormType_LMax = 0,
  Normalizer_NormType_L1 = 1,
  Normalizer_NormType_L2 = 2,
  Normalizer_NormType_Normalizer_NormType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Normalizer_NormType_Normalizer_NormType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Normalizer_NormType_IsValid(int value);
const Normalizer_NormType Normalizer_NormType_NormType_MIN = Normalizer_NormType_LMax;
const Normalizer_NormType Normalizer_NormType_NormType_MAX = Normalizer_NormType_L2;
const int Normalizer_NormType_NormType_ARRAYSIZE = Normalizer_NormType_NormType_MAX + 1;

// ===================================================================

class Normalizer : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.Normalizer) */ {
 public:
  Normalizer();
  virtual ~Normalizer();

  Normalizer(const Normalizer& from);

  inline Normalizer& operator=(const Normalizer& from) {
    CopyFrom(from);
    return *this;
  }

  static const Normalizer& default_instance();

  static inline const Normalizer* internal_default_instance() {
    return reinterpret_cast<const Normalizer*>(
               &_Normalizer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Normalizer* other);

  // implements Message ----------------------------------------------

  inline Normalizer* New() const PROTOBUF_FINAL { return New(NULL); }

  Normalizer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Normalizer& from);
  void MergeFrom(const Normalizer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Normalizer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Normalizer_NormType NormType;
  static const NormType LMax =
    Normalizer_NormType_LMax;
  static const NormType L1 =
    Normalizer_NormType_L1;
  static const NormType L2 =
    Normalizer_NormType_L2;
  static inline bool NormType_IsValid(int value) {
    return Normalizer_NormType_IsValid(value);
  }
  static const NormType NormType_MIN =
    Normalizer_NormType_NormType_MIN;
  static const NormType NormType_MAX =
    Normalizer_NormType_NormType_MAX;
  static const int NormType_ARRAYSIZE =
    Normalizer_NormType_NormType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .CoreML.Specification.Normalizer.NormType normType = 1;
  void clear_normtype();
  static const int kNormTypeFieldNumber = 1;
  ::CoreML::Specification::Normalizer_NormType normtype() const;
  void set_normtype(::CoreML::Specification::Normalizer_NormType value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.Normalizer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int normtype_;
  mutable int _cached_size_;
  friend struct protobuf_Normalizer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Normalizer

// .CoreML.Specification.Normalizer.NormType normType = 1;
inline void Normalizer::clear_normtype() {
  normtype_ = 0;
}
inline ::CoreML::Specification::Normalizer_NormType Normalizer::normtype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.Normalizer.normType)
  return static_cast< ::CoreML::Specification::Normalizer_NormType >(normtype_);
}
inline void Normalizer::set_normtype(::CoreML::Specification::Normalizer_NormType value) {
  
  normtype_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.Normalizer.normType)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Specification
}  // namespace CoreML

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CoreML::Specification::Normalizer_NormType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Normalizer_2eproto__INCLUDED
