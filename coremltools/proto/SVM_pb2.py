# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SVM.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import DataStructures_pb2 as DataStructures__pb2
try:
  FeatureTypes__pb2 = DataStructures__pb2.FeatureTypes__pb2
except AttributeError:
  FeatureTypes__pb2 = DataStructures__pb2.FeatureTypes_pb2

from .DataStructures_pb2 import *

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tSVM.proto\x12\x14\x43oreML.Specification\x1a\x14\x44\x61taStructures.proto\"\x0e\n\x0cLinearKernel\"\x1a\n\tRBFKernel\x12\r\n\x05gamma\x18\x01 \x01(\x01\"6\n\nPolyKernel\x12\x0e\n\x06\x64\x65gree\x18\x01 \x01(\x05\x12\t\n\x01\x63\x18\x02 \x01(\x01\x12\r\n\x05gamma\x18\x03 \x01(\x01\")\n\rSigmoidKernel\x12\r\n\x05gamma\x18\x01 \x01(\x01\x12\t\n\x01\x63\x18\x02 \x01(\x01\"\xfa\x01\n\x06Kernel\x12:\n\x0clinearKernel\x18\x01 \x01(\x0b\x32\".CoreML.Specification.LinearKernelH\x00\x12\x34\n\trbfKernel\x18\x02 \x01(\x0b\x32\x1f.CoreML.Specification.RBFKernelH\x00\x12\x36\n\npolyKernel\x18\x03 \x01(\x0b\x32 .CoreML.Specification.PolyKernelH\x00\x12<\n\rsigmoidKernel\x18\x04 \x01(\x0b\x32#.CoreML.Specification.SigmoidKernelH\x00\x42\x08\n\x06kernel\"*\n\nSparseNode\x12\r\n\x05index\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01\"?\n\x0cSparseVector\x12/\n\x05nodes\x18\x01 \x03(\x0b\x32 .CoreML.Specification.SparseNode\"K\n\x14SparseSupportVectors\x12\x33\n\x07vectors\x18\x01 \x03(\x0b\x32\".CoreML.Specification.SparseVector\"\x1d\n\x0b\x44\x65nseVector\x12\x0e\n\x06values\x18\x01 \x03(\x01\"I\n\x13\x44\x65nseSupportVectors\x12\x32\n\x07vectors\x18\x01 \x03(\x0b\x32!.CoreML.Specification.DenseVector\"\x1d\n\x0c\x43oefficients\x12\r\n\x05\x61lpha\x18\x01 \x03(\x01\"\xb5\x02\n\x16SupportVectorRegressor\x12,\n\x06kernel\x18\x01 \x01(\x0b\x32\x1c.CoreML.Specification.Kernel\x12J\n\x14sparseSupportVectors\x18\x02 \x01(\x0b\x32*.CoreML.Specification.SparseSupportVectorsH\x00\x12H\n\x13\x64\x65nseSupportVectors\x18\x03 \x01(\x0b\x32).CoreML.Specification.DenseSupportVectorsH\x00\x12\x38\n\x0c\x63oefficients\x18\x04 \x01(\x0b\x32\".CoreML.Specification.Coefficients\x12\x0b\n\x03rho\x18\x05 \x01(\x01\x42\x10\n\x0esupportVectors\"\x8b\x04\n\x17SupportVectorClassifier\x12,\n\x06kernel\x18\x01 \x01(\x0b\x32\x1c.CoreML.Specification.Kernel\x12&\n\x1enumberOfSupportVectorsPerClass\x18\x02 \x03(\x05\x12J\n\x14sparseSupportVectors\x18\x03 \x01(\x0b\x32*.CoreML.Specification.SparseSupportVectorsH\x00\x12H\n\x13\x64\x65nseSupportVectors\x18\x04 \x01(\x0b\x32).CoreML.Specification.DenseSupportVectorsH\x00\x12\x38\n\x0c\x63oefficients\x18\x05 \x03(\x0b\x32\".CoreML.Specification.Coefficients\x12\x0b\n\x03rho\x18\x06 \x03(\x01\x12\r\n\x05probA\x18\x07 \x03(\x01\x12\r\n\x05probB\x18\x08 \x03(\x01\x12?\n\x11stringClassLabels\x18\x64 \x01(\x0b\x32\".CoreML.Specification.StringVectorH\x01\x12=\n\x10int64ClassLabels\x18\x65 \x01(\x0b\x32!.CoreML.Specification.Int64VectorH\x01\x42\x10\n\x0esupportVectorsB\r\n\x0b\x43lassLabelsB\x02H\x03P\x00\x62\x06proto3')



_LINEARKERNEL = DESCRIPTOR.message_types_by_name['LinearKernel']
_RBFKERNEL = DESCRIPTOR.message_types_by_name['RBFKernel']
_POLYKERNEL = DESCRIPTOR.message_types_by_name['PolyKernel']
_SIGMOIDKERNEL = DESCRIPTOR.message_types_by_name['SigmoidKernel']
_KERNEL = DESCRIPTOR.message_types_by_name['Kernel']
_SPARSENODE = DESCRIPTOR.message_types_by_name['SparseNode']
_SPARSEVECTOR = DESCRIPTOR.message_types_by_name['SparseVector']
_SPARSESUPPORTVECTORS = DESCRIPTOR.message_types_by_name['SparseSupportVectors']
_DENSEVECTOR = DESCRIPTOR.message_types_by_name['DenseVector']
_DENSESUPPORTVECTORS = DESCRIPTOR.message_types_by_name['DenseSupportVectors']
_COEFFICIENTS = DESCRIPTOR.message_types_by_name['Coefficients']
_SUPPORTVECTORREGRESSOR = DESCRIPTOR.message_types_by_name['SupportVectorRegressor']
_SUPPORTVECTORCLASSIFIER = DESCRIPTOR.message_types_by_name['SupportVectorClassifier']
LinearKernel = _reflection.GeneratedProtocolMessageType('LinearKernel', (_message.Message,), {
  'DESCRIPTOR' : _LINEARKERNEL,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.LinearKernel)
  })
_sym_db.RegisterMessage(LinearKernel)

RBFKernel = _reflection.GeneratedProtocolMessageType('RBFKernel', (_message.Message,), {
  'DESCRIPTOR' : _RBFKERNEL,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.RBFKernel)
  })
_sym_db.RegisterMessage(RBFKernel)

PolyKernel = _reflection.GeneratedProtocolMessageType('PolyKernel', (_message.Message,), {
  'DESCRIPTOR' : _POLYKERNEL,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.PolyKernel)
  })
_sym_db.RegisterMessage(PolyKernel)

SigmoidKernel = _reflection.GeneratedProtocolMessageType('SigmoidKernel', (_message.Message,), {
  'DESCRIPTOR' : _SIGMOIDKERNEL,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SigmoidKernel)
  })
_sym_db.RegisterMessage(SigmoidKernel)

Kernel = _reflection.GeneratedProtocolMessageType('Kernel', (_message.Message,), {
  'DESCRIPTOR' : _KERNEL,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.Kernel)
  })
_sym_db.RegisterMessage(Kernel)

SparseNode = _reflection.GeneratedProtocolMessageType('SparseNode', (_message.Message,), {
  'DESCRIPTOR' : _SPARSENODE,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SparseNode)
  })
_sym_db.RegisterMessage(SparseNode)

SparseVector = _reflection.GeneratedProtocolMessageType('SparseVector', (_message.Message,), {
  'DESCRIPTOR' : _SPARSEVECTOR,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SparseVector)
  })
_sym_db.RegisterMessage(SparseVector)

SparseSupportVectors = _reflection.GeneratedProtocolMessageType('SparseSupportVectors', (_message.Message,), {
  'DESCRIPTOR' : _SPARSESUPPORTVECTORS,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SparseSupportVectors)
  })
_sym_db.RegisterMessage(SparseSupportVectors)

DenseVector = _reflection.GeneratedProtocolMessageType('DenseVector', (_message.Message,), {
  'DESCRIPTOR' : _DENSEVECTOR,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.DenseVector)
  })
_sym_db.RegisterMessage(DenseVector)

DenseSupportVectors = _reflection.GeneratedProtocolMessageType('DenseSupportVectors', (_message.Message,), {
  'DESCRIPTOR' : _DENSESUPPORTVECTORS,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.DenseSupportVectors)
  })
_sym_db.RegisterMessage(DenseSupportVectors)

Coefficients = _reflection.GeneratedProtocolMessageType('Coefficients', (_message.Message,), {
  'DESCRIPTOR' : _COEFFICIENTS,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.Coefficients)
  })
_sym_db.RegisterMessage(Coefficients)

SupportVectorRegressor = _reflection.GeneratedProtocolMessageType('SupportVectorRegressor', (_message.Message,), {
  'DESCRIPTOR' : _SUPPORTVECTORREGRESSOR,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SupportVectorRegressor)
  })
_sym_db.RegisterMessage(SupportVectorRegressor)

SupportVectorClassifier = _reflection.GeneratedProtocolMessageType('SupportVectorClassifier', (_message.Message,), {
  'DESCRIPTOR' : _SUPPORTVECTORCLASSIFIER,
  '__module__' : 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.SupportVectorClassifier)
  })
_sym_db.RegisterMessage(SupportVectorClassifier)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\003'
  _LINEARKERNEL._serialized_start=57
  _LINEARKERNEL._serialized_end=71
  _RBFKERNEL._serialized_start=73
  _RBFKERNEL._serialized_end=99
  _POLYKERNEL._serialized_start=101
  _POLYKERNEL._serialized_end=155
  _SIGMOIDKERNEL._serialized_start=157
  _SIGMOIDKERNEL._serialized_end=198
  _KERNEL._serialized_start=201
  _KERNEL._serialized_end=451
  _SPARSENODE._serialized_start=453
  _SPARSENODE._serialized_end=495
  _SPARSEVECTOR._serialized_start=497
  _SPARSEVECTOR._serialized_end=560
  _SPARSESUPPORTVECTORS._serialized_start=562
  _SPARSESUPPORTVECTORS._serialized_end=637
  _DENSEVECTOR._serialized_start=639
  _DENSEVECTOR._serialized_end=668
  _DENSESUPPORTVECTORS._serialized_start=670
  _DENSESUPPORTVECTORS._serialized_end=743
  _COEFFICIENTS._serialized_start=745
  _COEFFICIENTS._serialized_end=774
  _SUPPORTVECTORREGRESSOR._serialized_start=777
  _SUPPORTVECTORREGRESSOR._serialized_end=1086
  _SUPPORTVECTORCLASSIFIER._serialized_start=1089
  _SUPPORTVECTORCLASSIFIER._serialized_end=1612
# @@protoc_insertion_point(module_scope)
