# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WordTagger.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import DataStructures_pb2 as DataStructures__pb2
try:
  FeatureTypes__pb2 = DataStructures__pb2.FeatureTypes__pb2
except AttributeError:
  FeatureTypes__pb2 = DataStructures__pb2.FeatureTypes_pb2

from .DataStructures_pb2 import *

DESCRIPTOR = _descriptor.FileDescriptor(
  name='WordTagger.proto',
  package='CoreML.Specification.CoreMLModels',
  syntax='proto3',
  serialized_pb=_b('\n\x10WordTagger.proto\x12!CoreML.Specification.CoreMLModels\x1a\x14\x44\x61taStructures.proto\"\xa4\x02\n\nWordTagger\x12\x10\n\x08revision\x18\x01 \x01(\r\x12\x10\n\x08language\x18\n \x01(\t\x12\x1f\n\x17tokensOutputFeatureName\x18\x14 \x01(\t\x12\"\n\x1atokenTagsOutputFeatureName\x18\x15 \x01(\t\x12\'\n\x1ftokenLocationsOutputFeatureName\x18\x16 \x01(\t\x12%\n\x1dtokenLengthsOutputFeatureName\x18\x17 \x01(\t\x12\x1a\n\x12modelParameterData\x18\x64 \x01(\x0c\x12\x39\n\nstringTags\x18\xc8\x01 \x01(\x0b\x32\".CoreML.Specification.StringVectorH\x00\x42\x06\n\x04TagsB\x02H\x03P\x00\x62\x06proto3')
  ,
  dependencies=[DataStructures__pb2.DESCRIPTOR,],
  public_dependencies=[DataStructures__pb2.DESCRIPTOR,])




_WORDTAGGER = _descriptor.Descriptor(
  name='WordTagger',
  full_name='CoreML.Specification.CoreMLModels.WordTagger',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='revision', full_name='CoreML.Specification.CoreMLModels.WordTagger.revision', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='language', full_name='CoreML.Specification.CoreMLModels.WordTagger.language', index=1,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tokensOutputFeatureName', full_name='CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName', index=2,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tokenTagsOutputFeatureName', full_name='CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName', index=3,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tokenLocationsOutputFeatureName', full_name='CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName', index=4,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tokenLengthsOutputFeatureName', full_name='CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName', index=5,
      number=23, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='modelParameterData', full_name='CoreML.Specification.CoreMLModels.WordTagger.modelParameterData', index=6,
      number=100, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stringTags', full_name='CoreML.Specification.CoreMLModels.WordTagger.stringTags', index=7,
      number=200, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Tags', full_name='CoreML.Specification.CoreMLModels.WordTagger.Tags',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=78,
  serialized_end=370,
)

_WORDTAGGER.fields_by_name['stringTags'].message_type = DataStructures__pb2._STRINGVECTOR
_WORDTAGGER.oneofs_by_name['Tags'].fields.append(
  _WORDTAGGER.fields_by_name['stringTags'])
_WORDTAGGER.fields_by_name['stringTags'].containing_oneof = _WORDTAGGER.oneofs_by_name['Tags']
DESCRIPTOR.message_types_by_name['WordTagger'] = _WORDTAGGER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

WordTagger = _reflection.GeneratedProtocolMessageType('WordTagger', (_message.Message,), dict(
  DESCRIPTOR = _WORDTAGGER,
  __module__ = 'WordTagger_pb2'
  # @@protoc_insertion_point(class_scope:CoreML.Specification.CoreMLModels.WordTagger)
  ))
_sym_db.RegisterMessage(WordTagger)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\003'))
# @@protoc_insertion_point(module_scope)
