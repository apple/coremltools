// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NonMaximumSuppression.proto

#ifndef PROTOBUF_NonMaximumSuppression_2eproto__INCLUDED
#define PROTOBUF_NonMaximumSuppression_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "DataStructures.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace CoreML {
namespace Specification {
class ArrayFeatureType;
class ArrayFeatureTypeDefaultTypeInternal;
extern ArrayFeatureTypeDefaultTypeInternal _ArrayFeatureType_default_instance_;
class ArrayFeatureType_EnumeratedShapes;
class ArrayFeatureType_EnumeratedShapesDefaultTypeInternal;
extern ArrayFeatureType_EnumeratedShapesDefaultTypeInternal _ArrayFeatureType_EnumeratedShapes_default_instance_;
class ArrayFeatureType_Shape;
class ArrayFeatureType_ShapeDefaultTypeInternal;
extern ArrayFeatureType_ShapeDefaultTypeInternal _ArrayFeatureType_Shape_default_instance_;
class ArrayFeatureType_ShapeRange;
class ArrayFeatureType_ShapeRangeDefaultTypeInternal;
extern ArrayFeatureType_ShapeRangeDefaultTypeInternal _ArrayFeatureType_ShapeRange_default_instance_;
class DictionaryFeatureType;
class DictionaryFeatureTypeDefaultTypeInternal;
extern DictionaryFeatureTypeDefaultTypeInternal _DictionaryFeatureType_default_instance_;
class DoubleFeatureType;
class DoubleFeatureTypeDefaultTypeInternal;
extern DoubleFeatureTypeDefaultTypeInternal _DoubleFeatureType_default_instance_;
class DoubleVector;
class DoubleVectorDefaultTypeInternal;
extern DoubleVectorDefaultTypeInternal _DoubleVector_default_instance_;
class FeatureType;
class FeatureTypeDefaultTypeInternal;
extern FeatureTypeDefaultTypeInternal _FeatureType_default_instance_;
class ImageFeatureType;
class ImageFeatureTypeDefaultTypeInternal;
extern ImageFeatureTypeDefaultTypeInternal _ImageFeatureType_default_instance_;
class ImageFeatureType_EnumeratedImageSizes;
class ImageFeatureType_EnumeratedImageSizesDefaultTypeInternal;
extern ImageFeatureType_EnumeratedImageSizesDefaultTypeInternal _ImageFeatureType_EnumeratedImageSizes_default_instance_;
class ImageFeatureType_ImageSize;
class ImageFeatureType_ImageSizeDefaultTypeInternal;
extern ImageFeatureType_ImageSizeDefaultTypeInternal _ImageFeatureType_ImageSize_default_instance_;
class ImageFeatureType_ImageSizeRange;
class ImageFeatureType_ImageSizeRangeDefaultTypeInternal;
extern ImageFeatureType_ImageSizeRangeDefaultTypeInternal _ImageFeatureType_ImageSizeRange_default_instance_;
class Int64FeatureType;
class Int64FeatureTypeDefaultTypeInternal;
extern Int64FeatureTypeDefaultTypeInternal _Int64FeatureType_default_instance_;
class Int64ToDoubleMap;
class Int64ToDoubleMapDefaultTypeInternal;
extern Int64ToDoubleMapDefaultTypeInternal _Int64ToDoubleMap_default_instance_;
class Int64ToDoubleMap_MapEntry;
class Int64ToDoubleMap_MapEntryDefaultTypeInternal;
extern Int64ToDoubleMap_MapEntryDefaultTypeInternal _Int64ToDoubleMap_MapEntry_default_instance_;
class Int64ToStringMap;
class Int64ToStringMapDefaultTypeInternal;
extern Int64ToStringMapDefaultTypeInternal _Int64ToStringMap_default_instance_;
class Int64ToStringMap_MapEntry;
class Int64ToStringMap_MapEntryDefaultTypeInternal;
extern Int64ToStringMap_MapEntryDefaultTypeInternal _Int64ToStringMap_MapEntry_default_instance_;
class Int64Vector;
class Int64VectorDefaultTypeInternal;
extern Int64VectorDefaultTypeInternal _Int64Vector_default_instance_;
class NonMaximumSuppression;
class NonMaximumSuppressionDefaultTypeInternal;
extern NonMaximumSuppressionDefaultTypeInternal _NonMaximumSuppression_default_instance_;
class NonMaximumSuppression_PickTop;
class NonMaximumSuppression_PickTopDefaultTypeInternal;
extern NonMaximumSuppression_PickTopDefaultTypeInternal _NonMaximumSuppression_PickTop_default_instance_;
class SequenceFeatureType;
class SequenceFeatureTypeDefaultTypeInternal;
extern SequenceFeatureTypeDefaultTypeInternal _SequenceFeatureType_default_instance_;
class SizeRange;
class SizeRangeDefaultTypeInternal;
extern SizeRangeDefaultTypeInternal _SizeRange_default_instance_;
class StringFeatureType;
class StringFeatureTypeDefaultTypeInternal;
extern StringFeatureTypeDefaultTypeInternal _StringFeatureType_default_instance_;
class StringToDoubleMap;
class StringToDoubleMapDefaultTypeInternal;
extern StringToDoubleMapDefaultTypeInternal _StringToDoubleMap_default_instance_;
class StringToDoubleMap_MapEntry;
class StringToDoubleMap_MapEntryDefaultTypeInternal;
extern StringToDoubleMap_MapEntryDefaultTypeInternal _StringToDoubleMap_MapEntry_default_instance_;
class StringToInt64Map;
class StringToInt64MapDefaultTypeInternal;
extern StringToInt64MapDefaultTypeInternal _StringToInt64Map_default_instance_;
class StringToInt64Map_MapEntry;
class StringToInt64Map_MapEntryDefaultTypeInternal;
extern StringToInt64Map_MapEntryDefaultTypeInternal _StringToInt64Map_MapEntry_default_instance_;
class StringVector;
class StringVectorDefaultTypeInternal;
extern StringVectorDefaultTypeInternal _StringVector_default_instance_;
}  // namespace Specification
}  // namespace CoreML

namespace CoreML {
namespace Specification {

namespace protobuf_NonMaximumSuppression_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_NonMaximumSuppression_2eproto

// ===================================================================

class NonMaximumSuppression_PickTop : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.NonMaximumSuppression.PickTop) */ {
 public:
  NonMaximumSuppression_PickTop();
  virtual ~NonMaximumSuppression_PickTop();

  NonMaximumSuppression_PickTop(const NonMaximumSuppression_PickTop& from);

  inline NonMaximumSuppression_PickTop& operator=(const NonMaximumSuppression_PickTop& from) {
    CopyFrom(from);
    return *this;
  }

  static const NonMaximumSuppression_PickTop& default_instance();

  static inline const NonMaximumSuppression_PickTop* internal_default_instance() {
    return reinterpret_cast<const NonMaximumSuppression_PickTop*>(
               &_NonMaximumSuppression_PickTop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(NonMaximumSuppression_PickTop* other);

  // implements Message ----------------------------------------------

  inline NonMaximumSuppression_PickTop* New() const PROTOBUF_FINAL { return New(NULL); }

  NonMaximumSuppression_PickTop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const NonMaximumSuppression_PickTop& from);
  void MergeFrom(const NonMaximumSuppression_PickTop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NonMaximumSuppression_PickTop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool perClass = 1;
  void clear_perclass();
  static const int kPerClassFieldNumber = 1;
  bool perclass() const;
  void set_perclass(bool value);

  // @@protoc_insertion_point(class_scope:CoreML.Specification.NonMaximumSuppression.PickTop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  bool perclass_;
  mutable int _cached_size_;
  friend struct protobuf_NonMaximumSuppression_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NonMaximumSuppression : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:CoreML.Specification.NonMaximumSuppression) */ {
 public:
  NonMaximumSuppression();
  virtual ~NonMaximumSuppression();

  NonMaximumSuppression(const NonMaximumSuppression& from);

  inline NonMaximumSuppression& operator=(const NonMaximumSuppression& from) {
    CopyFrom(from);
    return *this;
  }

  static const NonMaximumSuppression& default_instance();

  enum SuppressionMethodCase {
    kPickTop = 1,
    SUPPRESSIONMETHOD_NOT_SET = 0,
  };

  enum ClassLabelsCase {
    kStringClassLabels = 100,
    kInt64ClassLabels = 101,
    CLASSLABELS_NOT_SET = 0,
  };

  static inline const NonMaximumSuppression* internal_default_instance() {
    return reinterpret_cast<const NonMaximumSuppression*>(
               &_NonMaximumSuppression_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NonMaximumSuppression* other);

  // implements Message ----------------------------------------------

  inline NonMaximumSuppression* New() const PROTOBUF_FINAL { return New(NULL); }

  NonMaximumSuppression* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const NonMaximumSuppression& from);
  void MergeFrom(const NonMaximumSuppression& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NonMaximumSuppression* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NonMaximumSuppression_PickTop PickTop;

  // accessors -------------------------------------------------------

  // string confidenceInputFeatureName = 200;
  void clear_confidenceinputfeaturename();
  static const int kConfidenceInputFeatureNameFieldNumber = 200;
  const ::std::string& confidenceinputfeaturename() const;
  void set_confidenceinputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_confidenceinputfeaturename(::std::string&& value);
  #endif
  void set_confidenceinputfeaturename(const char* value);
  void set_confidenceinputfeaturename(const char* value, size_t size);
  ::std::string* mutable_confidenceinputfeaturename();
  ::std::string* release_confidenceinputfeaturename();
  void set_allocated_confidenceinputfeaturename(::std::string* confidenceinputfeaturename);

  // string coordinatesInputFeatureName = 201;
  void clear_coordinatesinputfeaturename();
  static const int kCoordinatesInputFeatureNameFieldNumber = 201;
  const ::std::string& coordinatesinputfeaturename() const;
  void set_coordinatesinputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_coordinatesinputfeaturename(::std::string&& value);
  #endif
  void set_coordinatesinputfeaturename(const char* value);
  void set_coordinatesinputfeaturename(const char* value, size_t size);
  ::std::string* mutable_coordinatesinputfeaturename();
  ::std::string* release_coordinatesinputfeaturename();
  void set_allocated_coordinatesinputfeaturename(::std::string* coordinatesinputfeaturename);

  // string iouThresholdInputFeatureName = 202;
  void clear_iouthresholdinputfeaturename();
  static const int kIouThresholdInputFeatureNameFieldNumber = 202;
  const ::std::string& iouthresholdinputfeaturename() const;
  void set_iouthresholdinputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_iouthresholdinputfeaturename(::std::string&& value);
  #endif
  void set_iouthresholdinputfeaturename(const char* value);
  void set_iouthresholdinputfeaturename(const char* value, size_t size);
  ::std::string* mutable_iouthresholdinputfeaturename();
  ::std::string* release_iouthresholdinputfeaturename();
  void set_allocated_iouthresholdinputfeaturename(::std::string* iouthresholdinputfeaturename);

  // string confidenceThresholdInputFeatureName = 203;
  void clear_confidencethresholdinputfeaturename();
  static const int kConfidenceThresholdInputFeatureNameFieldNumber = 203;
  const ::std::string& confidencethresholdinputfeaturename() const;
  void set_confidencethresholdinputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_confidencethresholdinputfeaturename(::std::string&& value);
  #endif
  void set_confidencethresholdinputfeaturename(const char* value);
  void set_confidencethresholdinputfeaturename(const char* value, size_t size);
  ::std::string* mutable_confidencethresholdinputfeaturename();
  ::std::string* release_confidencethresholdinputfeaturename();
  void set_allocated_confidencethresholdinputfeaturename(::std::string* confidencethresholdinputfeaturename);

  // string confidenceOutputFeatureName = 210;
  void clear_confidenceoutputfeaturename();
  static const int kConfidenceOutputFeatureNameFieldNumber = 210;
  const ::std::string& confidenceoutputfeaturename() const;
  void set_confidenceoutputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_confidenceoutputfeaturename(::std::string&& value);
  #endif
  void set_confidenceoutputfeaturename(const char* value);
  void set_confidenceoutputfeaturename(const char* value, size_t size);
  ::std::string* mutable_confidenceoutputfeaturename();
  ::std::string* release_confidenceoutputfeaturename();
  void set_allocated_confidenceoutputfeaturename(::std::string* confidenceoutputfeaturename);

  // string coordinatesOutputFeatureName = 211;
  void clear_coordinatesoutputfeaturename();
  static const int kCoordinatesOutputFeatureNameFieldNumber = 211;
  const ::std::string& coordinatesoutputfeaturename() const;
  void set_coordinatesoutputfeaturename(const ::std::string& value);
  #if LANG_CXX11
  void set_coordinatesoutputfeaturename(::std::string&& value);
  #endif
  void set_coordinatesoutputfeaturename(const char* value);
  void set_coordinatesoutputfeaturename(const char* value, size_t size);
  ::std::string* mutable_coordinatesoutputfeaturename();
  ::std::string* release_coordinatesoutputfeaturename();
  void set_allocated_coordinatesoutputfeaturename(::std::string* coordinatesoutputfeaturename);

  // double iouThreshold = 110;
  void clear_iouthreshold();
  static const int kIouThresholdFieldNumber = 110;
  double iouthreshold() const;
  void set_iouthreshold(double value);

  // double confidenceThreshold = 111;
  void clear_confidencethreshold();
  static const int kConfidenceThresholdFieldNumber = 111;
  double confidencethreshold() const;
  void set_confidencethreshold(double value);

  // .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
  bool has_picktop() const;
  void clear_picktop();
  static const int kPickTopFieldNumber = 1;
  const ::CoreML::Specification::NonMaximumSuppression_PickTop& picktop() const;
  ::CoreML::Specification::NonMaximumSuppression_PickTop* mutable_picktop();
  ::CoreML::Specification::NonMaximumSuppression_PickTop* release_picktop();
  void set_allocated_picktop(::CoreML::Specification::NonMaximumSuppression_PickTop* picktop);

  // .CoreML.Specification.StringVector stringClassLabels = 100;
  bool has_stringclasslabels() const;
  void clear_stringclasslabels();
  static const int kStringClassLabelsFieldNumber = 100;
  const ::CoreML::Specification::StringVector& stringclasslabels() const;
  ::CoreML::Specification::StringVector* mutable_stringclasslabels();
  ::CoreML::Specification::StringVector* release_stringclasslabels();
  void set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels);

  // .CoreML.Specification.Int64Vector int64ClassLabels = 101;
  bool has_int64classlabels() const;
  void clear_int64classlabels();
  static const int kInt64ClassLabelsFieldNumber = 101;
  const ::CoreML::Specification::Int64Vector& int64classlabels() const;
  ::CoreML::Specification::Int64Vector* mutable_int64classlabels();
  ::CoreML::Specification::Int64Vector* release_int64classlabels();
  void set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels);

  SuppressionMethodCase SuppressionMethod_case() const;
  ClassLabelsCase ClassLabels_case() const;
  // @@protoc_insertion_point(class_scope:CoreML.Specification.NonMaximumSuppression)
 private:
  void set_has_picktop();
  void set_has_stringclasslabels();
  void set_has_int64classlabels();

  inline bool has_SuppressionMethod() const;
  void clear_SuppressionMethod();
  inline void clear_has_SuppressionMethod();

  inline bool has_ClassLabels() const;
  void clear_ClassLabels();
  inline void clear_has_ClassLabels();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr confidenceinputfeaturename_;
  ::google::protobuf::internal::ArenaStringPtr coordinatesinputfeaturename_;
  ::google::protobuf::internal::ArenaStringPtr iouthresholdinputfeaturename_;
  ::google::protobuf::internal::ArenaStringPtr confidencethresholdinputfeaturename_;
  ::google::protobuf::internal::ArenaStringPtr confidenceoutputfeaturename_;
  ::google::protobuf::internal::ArenaStringPtr coordinatesoutputfeaturename_;
  double iouthreshold_;
  double confidencethreshold_;
  union SuppressionMethodUnion {
    SuppressionMethodUnion() {}
    ::CoreML::Specification::NonMaximumSuppression_PickTop* picktop_;
  } SuppressionMethod_;
  union ClassLabelsUnion {
    ClassLabelsUnion() {}
    ::CoreML::Specification::StringVector* stringclasslabels_;
    ::CoreML::Specification::Int64Vector* int64classlabels_;
  } ClassLabels_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_NonMaximumSuppression_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NonMaximumSuppression_PickTop

// bool perClass = 1;
inline void NonMaximumSuppression_PickTop::clear_perclass() {
  perclass_ = false;
}
inline bool NonMaximumSuppression_PickTop::perclass() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.PickTop.perClass)
  return perclass_;
}
inline void NonMaximumSuppression_PickTop::set_perclass(bool value) {
  
  perclass_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.PickTop.perClass)
}

// -------------------------------------------------------------------

// NonMaximumSuppression

// .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
inline bool NonMaximumSuppression::has_picktop() const {
  return SuppressionMethod_case() == kPickTop;
}
inline void NonMaximumSuppression::set_has_picktop() {
  _oneof_case_[0] = kPickTop;
}
inline void NonMaximumSuppression::clear_picktop() {
  if (has_picktop()) {
    delete SuppressionMethod_.picktop_;
    clear_has_SuppressionMethod();
  }
}
inline  const ::CoreML::Specification::NonMaximumSuppression_PickTop& NonMaximumSuppression::picktop() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.pickTop)
  return has_picktop()
      ? *SuppressionMethod_.picktop_
      : ::CoreML::Specification::NonMaximumSuppression_PickTop::default_instance();
}
inline ::CoreML::Specification::NonMaximumSuppression_PickTop* NonMaximumSuppression::mutable_picktop() {
  if (!has_picktop()) {
    clear_SuppressionMethod();
    set_has_picktop();
    SuppressionMethod_.picktop_ = new ::CoreML::Specification::NonMaximumSuppression_PickTop;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.pickTop)
  return SuppressionMethod_.picktop_;
}
inline ::CoreML::Specification::NonMaximumSuppression_PickTop* NonMaximumSuppression::release_picktop() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.pickTop)
  if (has_picktop()) {
    clear_has_SuppressionMethod();
    ::CoreML::Specification::NonMaximumSuppression_PickTop* temp = SuppressionMethod_.picktop_;
    SuppressionMethod_.picktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NonMaximumSuppression::set_allocated_picktop(::CoreML::Specification::NonMaximumSuppression_PickTop* picktop) {
  clear_SuppressionMethod();
  if (picktop) {
    set_has_picktop();
    SuppressionMethod_.picktop_ = picktop;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.pickTop)
}

// .CoreML.Specification.StringVector stringClassLabels = 100;
inline bool NonMaximumSuppression::has_stringclasslabels() const {
  return ClassLabels_case() == kStringClassLabels;
}
inline void NonMaximumSuppression::set_has_stringclasslabels() {
  _oneof_case_[1] = kStringClassLabels;
}
inline void NonMaximumSuppression::clear_stringclasslabels() {
  if (has_stringclasslabels()) {
    delete ClassLabels_.stringclasslabels_;
    clear_has_ClassLabels();
  }
}
inline  const ::CoreML::Specification::StringVector& NonMaximumSuppression::stringclasslabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  return has_stringclasslabels()
      ? *ClassLabels_.stringclasslabels_
      : ::CoreML::Specification::StringVector::default_instance();
}
inline ::CoreML::Specification::StringVector* NonMaximumSuppression::mutable_stringclasslabels() {
  if (!has_stringclasslabels()) {
    clear_ClassLabels();
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = new ::CoreML::Specification::StringVector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  return ClassLabels_.stringclasslabels_;
}
inline ::CoreML::Specification::StringVector* NonMaximumSuppression::release_stringclasslabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  if (has_stringclasslabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::StringVector* temp = ClassLabels_.stringclasslabels_;
    ClassLabels_.stringclasslabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NonMaximumSuppression::set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels) {
  clear_ClassLabels();
  if (stringclasslabels) {
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = stringclasslabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
}

// .CoreML.Specification.Int64Vector int64ClassLabels = 101;
inline bool NonMaximumSuppression::has_int64classlabels() const {
  return ClassLabels_case() == kInt64ClassLabels;
}
inline void NonMaximumSuppression::set_has_int64classlabels() {
  _oneof_case_[1] = kInt64ClassLabels;
}
inline void NonMaximumSuppression::clear_int64classlabels() {
  if (has_int64classlabels()) {
    delete ClassLabels_.int64classlabels_;
    clear_has_ClassLabels();
  }
}
inline  const ::CoreML::Specification::Int64Vector& NonMaximumSuppression::int64classlabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  return has_int64classlabels()
      ? *ClassLabels_.int64classlabels_
      : ::CoreML::Specification::Int64Vector::default_instance();
}
inline ::CoreML::Specification::Int64Vector* NonMaximumSuppression::mutable_int64classlabels() {
  if (!has_int64classlabels()) {
    clear_ClassLabels();
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = new ::CoreML::Specification::Int64Vector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  return ClassLabels_.int64classlabels_;
}
inline ::CoreML::Specification::Int64Vector* NonMaximumSuppression::release_int64classlabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  if (has_int64classlabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::Int64Vector* temp = ClassLabels_.int64classlabels_;
    ClassLabels_.int64classlabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void NonMaximumSuppression::set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels) {
  clear_ClassLabels();
  if (int64classlabels) {
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = int64classlabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
}

// double iouThreshold = 110;
inline void NonMaximumSuppression::clear_iouthreshold() {
  iouthreshold_ = 0;
}
inline double NonMaximumSuppression::iouthreshold() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.iouThreshold)
  return iouthreshold_;
}
inline void NonMaximumSuppression::set_iouthreshold(double value) {
  
  iouthreshold_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.iouThreshold)
}

// double confidenceThreshold = 111;
inline void NonMaximumSuppression::clear_confidencethreshold() {
  confidencethreshold_ = 0;
}
inline double NonMaximumSuppression::confidencethreshold() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceThreshold)
  return confidencethreshold_;
}
inline void NonMaximumSuppression::set_confidencethreshold(double value) {
  
  confidencethreshold_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceThreshold)
}

// string confidenceInputFeatureName = 200;
inline void NonMaximumSuppression::clear_confidenceinputfeaturename() {
  confidenceinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::confidenceinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  return confidenceinputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_confidenceinputfeaturename(const ::std::string& value) {
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_confidenceinputfeaturename(::std::string&& value) {
  
  confidenceinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_confidenceinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
inline void NonMaximumSuppression::set_confidenceinputfeaturename(const char* value, size_t size) {
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_confidenceinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  return confidenceinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_confidenceinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  
  return confidenceinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_confidenceinputfeaturename(::std::string* confidenceinputfeaturename) {
  if (confidenceinputfeaturename != NULL) {
    
  } else {
    
  }
  confidenceinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidenceinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}

// string coordinatesInputFeatureName = 201;
inline void NonMaximumSuppression::clear_coordinatesinputfeaturename() {
  coordinatesinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::coordinatesinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  return coordinatesinputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_coordinatesinputfeaturename(const ::std::string& value) {
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_coordinatesinputfeaturename(::std::string&& value) {
  
  coordinatesinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_coordinatesinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
inline void NonMaximumSuppression::set_coordinatesinputfeaturename(const char* value, size_t size) {
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_coordinatesinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  return coordinatesinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_coordinatesinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  
  return coordinatesinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_coordinatesinputfeaturename(::std::string* coordinatesinputfeaturename) {
  if (coordinatesinputfeaturename != NULL) {
    
  } else {
    
  }
  coordinatesinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coordinatesinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}

// string iouThresholdInputFeatureName = 202;
inline void NonMaximumSuppression::clear_iouthresholdinputfeaturename() {
  iouthresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::iouthresholdinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  return iouthresholdinputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_iouthresholdinputfeaturename(const ::std::string& value) {
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_iouthresholdinputfeaturename(::std::string&& value) {
  
  iouthresholdinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_iouthresholdinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
inline void NonMaximumSuppression::set_iouthresholdinputfeaturename(const char* value, size_t size) {
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_iouthresholdinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  return iouthresholdinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_iouthresholdinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  
  return iouthresholdinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_iouthresholdinputfeaturename(::std::string* iouthresholdinputfeaturename) {
  if (iouthresholdinputfeaturename != NULL) {
    
  } else {
    
  }
  iouthresholdinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iouthresholdinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}

// string confidenceThresholdInputFeatureName = 203;
inline void NonMaximumSuppression::clear_confidencethresholdinputfeaturename() {
  confidencethresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::confidencethresholdinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  return confidencethresholdinputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const ::std::string& value) {
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_confidencethresholdinputfeaturename(::std::string&& value) {
  
  confidencethresholdinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
inline void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const char* value, size_t size) {
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_confidencethresholdinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  return confidencethresholdinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_confidencethresholdinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  
  return confidencethresholdinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_confidencethresholdinputfeaturename(::std::string* confidencethresholdinputfeaturename) {
  if (confidencethresholdinputfeaturename != NULL) {
    
  } else {
    
  }
  confidencethresholdinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidencethresholdinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}

// string confidenceOutputFeatureName = 210;
inline void NonMaximumSuppression::clear_confidenceoutputfeaturename() {
  confidenceoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::confidenceoutputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  return confidenceoutputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_confidenceoutputfeaturename(const ::std::string& value) {
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_confidenceoutputfeaturename(::std::string&& value) {
  
  confidenceoutputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_confidenceoutputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
inline void NonMaximumSuppression::set_confidenceoutputfeaturename(const char* value, size_t size) {
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_confidenceoutputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  return confidenceoutputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_confidenceoutputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  
  return confidenceoutputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_confidenceoutputfeaturename(::std::string* confidenceoutputfeaturename) {
  if (confidenceoutputfeaturename != NULL) {
    
  } else {
    
  }
  confidenceoutputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidenceoutputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}

// string coordinatesOutputFeatureName = 211;
inline void NonMaximumSuppression::clear_coordinatesoutputfeaturename() {
  coordinatesoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NonMaximumSuppression::coordinatesoutputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  return coordinatesoutputfeaturename_.GetNoArena();
}
inline void NonMaximumSuppression::set_coordinatesoutputfeaturename(const ::std::string& value) {
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
#if LANG_CXX11
inline void NonMaximumSuppression::set_coordinatesoutputfeaturename(::std::string&& value) {
  
  coordinatesoutputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
#endif
inline void NonMaximumSuppression::set_coordinatesoutputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
inline void NonMaximumSuppression::set_coordinatesoutputfeaturename(const char* value, size_t size) {
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
inline ::std::string* NonMaximumSuppression::mutable_coordinatesoutputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  return coordinatesoutputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NonMaximumSuppression::release_coordinatesoutputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  
  return coordinatesoutputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NonMaximumSuppression::set_allocated_coordinatesoutputfeaturename(::std::string* coordinatesoutputfeaturename) {
  if (coordinatesoutputfeaturename != NULL) {
    
  } else {
    
  }
  coordinatesoutputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coordinatesoutputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}

inline bool NonMaximumSuppression::has_SuppressionMethod() const {
  return SuppressionMethod_case() != SUPPRESSIONMETHOD_NOT_SET;
}
inline void NonMaximumSuppression::clear_has_SuppressionMethod() {
  _oneof_case_[0] = SUPPRESSIONMETHOD_NOT_SET;
}
inline bool NonMaximumSuppression::has_ClassLabels() const {
  return ClassLabels_case() != CLASSLABELS_NOT_SET;
}
inline void NonMaximumSuppression::clear_has_ClassLabels() {
  _oneof_case_[1] = CLASSLABELS_NOT_SET;
}
inline NonMaximumSuppression::SuppressionMethodCase NonMaximumSuppression::SuppressionMethod_case() const {
  return NonMaximumSuppression::SuppressionMethodCase(_oneof_case_[0]);
}
inline NonMaximumSuppression::ClassLabelsCase NonMaximumSuppression::ClassLabels_case() const {
  return NonMaximumSuppression::ClassLabelsCase(_oneof_case_[1]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_NonMaximumSuppression_2eproto__INCLUDED
