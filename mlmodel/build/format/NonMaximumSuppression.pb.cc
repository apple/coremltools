// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NonMaximumSuppression.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NonMaximumSuppression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {
class NonMaximumSuppression_PickTopDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NonMaximumSuppression_PickTop> {
} _NonMaximumSuppression_PickTop_default_instance_;
class NonMaximumSuppressionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NonMaximumSuppression> {
  public:
  const ::CoreML::Specification::NonMaximumSuppression_PickTop* picktop_;
  const ::CoreML::Specification::StringVector* stringclasslabels_;
  const ::CoreML::Specification::Int64Vector* int64classlabels_;
} _NonMaximumSuppression_default_instance_;

namespace protobuf_NonMaximumSuppression_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _NonMaximumSuppression_PickTop_default_instance_.Shutdown();
  _NonMaximumSuppression_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults();
  _NonMaximumSuppression_PickTop_default_instance_.DefaultConstruct();
  _NonMaximumSuppression_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::CoreML::Specification::protobuf_DataStructures_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_NonMaximumSuppression_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NonMaximumSuppression_PickTop::kPerClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NonMaximumSuppression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.NonMaximumSuppression.PickTop)
}
NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(const NonMaximumSuppression_PickTop& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  perclass_ = from.perclass_;
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.NonMaximumSuppression.PickTop)
}

void NonMaximumSuppression_PickTop::SharedCtor() {
  perclass_ = false;
  _cached_size_ = 0;
}

NonMaximumSuppression_PickTop::~NonMaximumSuppression_PickTop() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.NonMaximumSuppression.PickTop)
  SharedDtor();
}

void NonMaximumSuppression_PickTop::SharedDtor() {
}

void NonMaximumSuppression_PickTop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NonMaximumSuppression_PickTop& NonMaximumSuppression_PickTop::default_instance() {
  protobuf_NonMaximumSuppression_2eproto::InitDefaults();
  return *internal_default_instance();
}

NonMaximumSuppression_PickTop* NonMaximumSuppression_PickTop::New(::google::protobuf::Arena* arena) const {
  NonMaximumSuppression_PickTop* n = new NonMaximumSuppression_PickTop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NonMaximumSuppression_PickTop::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  perclass_ = false;
}

bool NonMaximumSuppression_PickTop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool perClass = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &perclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.NonMaximumSuppression.PickTop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.NonMaximumSuppression.PickTop)
  return false;
#undef DO_
}

void NonMaximumSuppression_PickTop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool perClass = 1;
  if (this->perclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->perclass(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.NonMaximumSuppression.PickTop)
}

size_t NonMaximumSuppression_PickTop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  size_t total_size = 0;

  // bool perClass = 1;
  if (this->perclass() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NonMaximumSuppression_PickTop::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const NonMaximumSuppression_PickTop*>(&from));
}

void NonMaximumSuppression_PickTop::MergeFrom(const NonMaximumSuppression_PickTop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.perclass() != 0) {
    set_perclass(from.perclass());
  }
}

void NonMaximumSuppression_PickTop::CopyFrom(const NonMaximumSuppression_PickTop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.NonMaximumSuppression.PickTop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NonMaximumSuppression_PickTop::IsInitialized() const {
  return true;
}

void NonMaximumSuppression_PickTop::Swap(NonMaximumSuppression_PickTop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NonMaximumSuppression_PickTop::InternalSwap(NonMaximumSuppression_PickTop* other) {
  std::swap(perclass_, other->perclass_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NonMaximumSuppression_PickTop::GetTypeName() const {
  return "CoreML.Specification.NonMaximumSuppression.PickTop";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NonMaximumSuppression_PickTop

// bool perClass = 1;
void NonMaximumSuppression_PickTop::clear_perclass() {
  perclass_ = false;
}
bool NonMaximumSuppression_PickTop::perclass() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.PickTop.perClass)
  return perclass_;
}
void NonMaximumSuppression_PickTop::set_perclass(bool value) {
  
  perclass_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.PickTop.perClass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NonMaximumSuppression::kPickTopFieldNumber;
const int NonMaximumSuppression::kStringClassLabelsFieldNumber;
const int NonMaximumSuppression::kInt64ClassLabelsFieldNumber;
const int NonMaximumSuppression::kIouThresholdFieldNumber;
const int NonMaximumSuppression::kConfidenceThresholdFieldNumber;
const int NonMaximumSuppression::kConfidenceInputFeatureNameFieldNumber;
const int NonMaximumSuppression::kCoordinatesInputFeatureNameFieldNumber;
const int NonMaximumSuppression::kIouThresholdInputFeatureNameFieldNumber;
const int NonMaximumSuppression::kConfidenceThresholdInputFeatureNameFieldNumber;
const int NonMaximumSuppression::kConfidenceOutputFeatureNameFieldNumber;
const int NonMaximumSuppression::kCoordinatesOutputFeatureNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NonMaximumSuppression::NonMaximumSuppression()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_NonMaximumSuppression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.NonMaximumSuppression)
}
NonMaximumSuppression::NonMaximumSuppression(const NonMaximumSuppression& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confidenceinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confidenceinputfeaturename().size() > 0) {
    confidenceinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidenceinputfeaturename_);
  }
  coordinatesinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coordinatesinputfeaturename().size() > 0) {
    coordinatesinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coordinatesinputfeaturename_);
  }
  iouthresholdinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iouthresholdinputfeaturename().size() > 0) {
    iouthresholdinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iouthresholdinputfeaturename_);
  }
  confidencethresholdinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confidencethresholdinputfeaturename().size() > 0) {
    confidencethresholdinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidencethresholdinputfeaturename_);
  }
  confidenceoutputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confidenceoutputfeaturename().size() > 0) {
    confidenceoutputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidenceoutputfeaturename_);
  }
  coordinatesoutputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coordinatesoutputfeaturename().size() > 0) {
    coordinatesoutputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coordinatesoutputfeaturename_);
  }
  ::memcpy(&iouthreshold_, &from.iouthreshold_,
    reinterpret_cast<char*>(&confidencethreshold_) -
    reinterpret_cast<char*>(&iouthreshold_) + sizeof(confidencethreshold_));
  clear_has_SuppressionMethod();
  switch (from.SuppressionMethod_case()) {
    case kPickTop: {
      mutable_picktop()->::CoreML::Specification::NonMaximumSuppression_PickTop::MergeFrom(from.picktop());
      break;
    }
    case SUPPRESSIONMETHOD_NOT_SET: {
      break;
    }
  }
  clear_has_ClassLabels();
  switch (from.ClassLabels_case()) {
    case kStringClassLabels: {
      mutable_stringclasslabels()->::CoreML::Specification::StringVector::MergeFrom(from.stringclasslabels());
      break;
    }
    case kInt64ClassLabels: {
      mutable_int64classlabels()->::CoreML::Specification::Int64Vector::MergeFrom(from.int64classlabels());
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.NonMaximumSuppression)
}

void NonMaximumSuppression::SharedCtor() {
  confidenceinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iouthresholdinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidencethresholdinputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidenceoutputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesoutputfeaturename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iouthreshold_, 0, reinterpret_cast<char*>(&confidencethreshold_) -
    reinterpret_cast<char*>(&iouthreshold_) + sizeof(confidencethreshold_));
  clear_has_SuppressionMethod();
  clear_has_ClassLabels();
  _cached_size_ = 0;
}

NonMaximumSuppression::~NonMaximumSuppression() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.NonMaximumSuppression)
  SharedDtor();
}

void NonMaximumSuppression::SharedDtor() {
  confidenceinputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesinputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iouthresholdinputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidencethresholdinputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidenceoutputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesoutputfeaturename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_SuppressionMethod()) {
    clear_SuppressionMethod();
  }
  if (has_ClassLabels()) {
    clear_ClassLabels();
  }
}

void NonMaximumSuppression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NonMaximumSuppression& NonMaximumSuppression::default_instance() {
  protobuf_NonMaximumSuppression_2eproto::InitDefaults();
  return *internal_default_instance();
}

NonMaximumSuppression* NonMaximumSuppression::New(::google::protobuf::Arena* arena) const {
  NonMaximumSuppression* n = new NonMaximumSuppression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NonMaximumSuppression::clear_SuppressionMethod() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.NonMaximumSuppression)
  switch (SuppressionMethod_case()) {
    case kPickTop: {
      delete SuppressionMethod_.picktop_;
      break;
    }
    case SUPPRESSIONMETHOD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUPPRESSIONMETHOD_NOT_SET;
}

void NonMaximumSuppression::clear_ClassLabels() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.NonMaximumSuppression)
  switch (ClassLabels_case()) {
    case kStringClassLabels: {
      delete ClassLabels_.stringclasslabels_;
      break;
    }
    case kInt64ClassLabels: {
      delete ClassLabels_.int64classlabels_;
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = CLASSLABELS_NOT_SET;
}


void NonMaximumSuppression::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.NonMaximumSuppression)
  confidenceinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iouthresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidencethresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidenceoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinatesoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iouthreshold_, 0, reinterpret_cast<char*>(&confidencethreshold_) -
    reinterpret_cast<char*>(&iouthreshold_) + sizeof(confidencethreshold_));
  clear_SuppressionMethod();
  clear_ClassLabels();
}

bool NonMaximumSuppression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.NonMaximumSuppression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_picktop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.StringVector stringClassLabels = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(802u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stringclasslabels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.Int64Vector int64ClassLabels = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(810u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int64classlabels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double iouThreshold = 110;
      case 110: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(881u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iouthreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double confidenceThreshold = 111;
      case 111: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(889u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &confidencethreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confidenceInputFeatureName = 200;
      case 200: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1602u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confidenceinputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confidenceinputfeaturename().data(), this->confidenceinputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coordinatesInputFeatureName = 201;
      case 201: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1610u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coordinatesinputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coordinatesinputfeaturename().data(), this->coordinatesinputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string iouThresholdInputFeatureName = 202;
      case 202: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1618u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iouthresholdinputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iouthresholdinputfeaturename().data(), this->iouthresholdinputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confidenceThresholdInputFeatureName = 203;
      case 203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1626u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confidencethresholdinputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confidencethresholdinputfeaturename().data(), this->confidencethresholdinputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confidenceOutputFeatureName = 210;
      case 210: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1682u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confidenceoutputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confidenceoutputfeaturename().data(), this->confidenceoutputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string coordinatesOutputFeatureName = 211;
      case 211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1690u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coordinatesoutputfeaturename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coordinatesoutputfeaturename().data(), this->coordinatesoutputfeaturename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.NonMaximumSuppression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.NonMaximumSuppression)
  return false;
#undef DO_
}

void NonMaximumSuppression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.NonMaximumSuppression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
  if (has_picktop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *SuppressionMethod_.picktop_, output);
  }

  // .CoreML.Specification.StringVector stringClassLabels = 100;
  if (has_stringclasslabels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      100, *ClassLabels_.stringclasslabels_, output);
  }

  // .CoreML.Specification.Int64Vector int64ClassLabels = 101;
  if (has_int64classlabels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      101, *ClassLabels_.int64classlabels_, output);
  }

  // double iouThreshold = 110;
  if (this->iouthreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(110, this->iouthreshold(), output);
  }

  // double confidenceThreshold = 111;
  if (this->confidencethreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(111, this->confidencethreshold(), output);
  }

  // string confidenceInputFeatureName = 200;
  if (this->confidenceinputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confidenceinputfeaturename().data(), this->confidenceinputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      200, this->confidenceinputfeaturename(), output);
  }

  // string coordinatesInputFeatureName = 201;
  if (this->coordinatesinputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coordinatesinputfeaturename().data(), this->coordinatesinputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      201, this->coordinatesinputfeaturename(), output);
  }

  // string iouThresholdInputFeatureName = 202;
  if (this->iouthresholdinputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iouthresholdinputfeaturename().data(), this->iouthresholdinputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      202, this->iouthresholdinputfeaturename(), output);
  }

  // string confidenceThresholdInputFeatureName = 203;
  if (this->confidencethresholdinputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confidencethresholdinputfeaturename().data(), this->confidencethresholdinputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      203, this->confidencethresholdinputfeaturename(), output);
  }

  // string confidenceOutputFeatureName = 210;
  if (this->confidenceoutputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confidenceoutputfeaturename().data(), this->confidenceoutputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      210, this->confidenceoutputfeaturename(), output);
  }

  // string coordinatesOutputFeatureName = 211;
  if (this->coordinatesoutputfeaturename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coordinatesoutputfeaturename().data(), this->coordinatesoutputfeaturename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      211, this->coordinatesoutputfeaturename(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.NonMaximumSuppression)
}

size_t NonMaximumSuppression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.NonMaximumSuppression)
  size_t total_size = 0;

  // string confidenceInputFeatureName = 200;
  if (this->confidenceinputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confidenceinputfeaturename());
  }

  // string coordinatesInputFeatureName = 201;
  if (this->coordinatesinputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coordinatesinputfeaturename());
  }

  // string iouThresholdInputFeatureName = 202;
  if (this->iouthresholdinputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iouthresholdinputfeaturename());
  }

  // string confidenceThresholdInputFeatureName = 203;
  if (this->confidencethresholdinputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confidencethresholdinputfeaturename());
  }

  // string confidenceOutputFeatureName = 210;
  if (this->confidenceoutputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confidenceoutputfeaturename());
  }

  // string coordinatesOutputFeatureName = 211;
  if (this->coordinatesoutputfeaturename().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coordinatesoutputfeaturename());
  }

  // double iouThreshold = 110;
  if (this->iouthreshold() != 0) {
    total_size += 2 + 8;
  }

  // double confidenceThreshold = 111;
  if (this->confidencethreshold() != 0) {
    total_size += 2 + 8;
  }

  switch (SuppressionMethod_case()) {
    // .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
    case kPickTop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *SuppressionMethod_.picktop_);
      break;
    }
    case SUPPRESSIONMETHOD_NOT_SET: {
      break;
    }
  }
  switch (ClassLabels_case()) {
    // .CoreML.Specification.StringVector stringClassLabels = 100;
    case kStringClassLabels: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ClassLabels_.stringclasslabels_);
      break;
    }
    // .CoreML.Specification.Int64Vector int64ClassLabels = 101;
    case kInt64ClassLabels: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *ClassLabels_.int64classlabels_);
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NonMaximumSuppression::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const NonMaximumSuppression*>(&from));
}

void NonMaximumSuppression::MergeFrom(const NonMaximumSuppression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.NonMaximumSuppression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.confidenceinputfeaturename().size() > 0) {

    confidenceinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidenceinputfeaturename_);
  }
  if (from.coordinatesinputfeaturename().size() > 0) {

    coordinatesinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coordinatesinputfeaturename_);
  }
  if (from.iouthresholdinputfeaturename().size() > 0) {

    iouthresholdinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iouthresholdinputfeaturename_);
  }
  if (from.confidencethresholdinputfeaturename().size() > 0) {

    confidencethresholdinputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidencethresholdinputfeaturename_);
  }
  if (from.confidenceoutputfeaturename().size() > 0) {

    confidenceoutputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confidenceoutputfeaturename_);
  }
  if (from.coordinatesoutputfeaturename().size() > 0) {

    coordinatesoutputfeaturename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coordinatesoutputfeaturename_);
  }
  if (from.iouthreshold() != 0) {
    set_iouthreshold(from.iouthreshold());
  }
  if (from.confidencethreshold() != 0) {
    set_confidencethreshold(from.confidencethreshold());
  }
  switch (from.SuppressionMethod_case()) {
    case kPickTop: {
      mutable_picktop()->::CoreML::Specification::NonMaximumSuppression_PickTop::MergeFrom(from.picktop());
      break;
    }
    case SUPPRESSIONMETHOD_NOT_SET: {
      break;
    }
  }
  switch (from.ClassLabels_case()) {
    case kStringClassLabels: {
      mutable_stringclasslabels()->::CoreML::Specification::StringVector::MergeFrom(from.stringclasslabels());
      break;
    }
    case kInt64ClassLabels: {
      mutable_int64classlabels()->::CoreML::Specification::Int64Vector::MergeFrom(from.int64classlabels());
      break;
    }
    case CLASSLABELS_NOT_SET: {
      break;
    }
  }
}

void NonMaximumSuppression::CopyFrom(const NonMaximumSuppression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.NonMaximumSuppression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NonMaximumSuppression::IsInitialized() const {
  return true;
}

void NonMaximumSuppression::Swap(NonMaximumSuppression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NonMaximumSuppression::InternalSwap(NonMaximumSuppression* other) {
  confidenceinputfeaturename_.Swap(&other->confidenceinputfeaturename_);
  coordinatesinputfeaturename_.Swap(&other->coordinatesinputfeaturename_);
  iouthresholdinputfeaturename_.Swap(&other->iouthresholdinputfeaturename_);
  confidencethresholdinputfeaturename_.Swap(&other->confidencethresholdinputfeaturename_);
  confidenceoutputfeaturename_.Swap(&other->confidenceoutputfeaturename_);
  coordinatesoutputfeaturename_.Swap(&other->coordinatesoutputfeaturename_);
  std::swap(iouthreshold_, other->iouthreshold_);
  std::swap(confidencethreshold_, other->confidencethreshold_);
  std::swap(SuppressionMethod_, other->SuppressionMethod_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(ClassLabels_, other->ClassLabels_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NonMaximumSuppression::GetTypeName() const {
  return "CoreML.Specification.NonMaximumSuppression";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NonMaximumSuppression

// .CoreML.Specification.NonMaximumSuppression.PickTop pickTop = 1;
bool NonMaximumSuppression::has_picktop() const {
  return SuppressionMethod_case() == kPickTop;
}
void NonMaximumSuppression::set_has_picktop() {
  _oneof_case_[0] = kPickTop;
}
void NonMaximumSuppression::clear_picktop() {
  if (has_picktop()) {
    delete SuppressionMethod_.picktop_;
    clear_has_SuppressionMethod();
  }
}
 const ::CoreML::Specification::NonMaximumSuppression_PickTop& NonMaximumSuppression::picktop() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.pickTop)
  return has_picktop()
      ? *SuppressionMethod_.picktop_
      : ::CoreML::Specification::NonMaximumSuppression_PickTop::default_instance();
}
::CoreML::Specification::NonMaximumSuppression_PickTop* NonMaximumSuppression::mutable_picktop() {
  if (!has_picktop()) {
    clear_SuppressionMethod();
    set_has_picktop();
    SuppressionMethod_.picktop_ = new ::CoreML::Specification::NonMaximumSuppression_PickTop;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.pickTop)
  return SuppressionMethod_.picktop_;
}
::CoreML::Specification::NonMaximumSuppression_PickTop* NonMaximumSuppression::release_picktop() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.pickTop)
  if (has_picktop()) {
    clear_has_SuppressionMethod();
    ::CoreML::Specification::NonMaximumSuppression_PickTop* temp = SuppressionMethod_.picktop_;
    SuppressionMethod_.picktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NonMaximumSuppression::set_allocated_picktop(::CoreML::Specification::NonMaximumSuppression_PickTop* picktop) {
  clear_SuppressionMethod();
  if (picktop) {
    set_has_picktop();
    SuppressionMethod_.picktop_ = picktop;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.pickTop)
}

// .CoreML.Specification.StringVector stringClassLabels = 100;
bool NonMaximumSuppression::has_stringclasslabels() const {
  return ClassLabels_case() == kStringClassLabels;
}
void NonMaximumSuppression::set_has_stringclasslabels() {
  _oneof_case_[1] = kStringClassLabels;
}
void NonMaximumSuppression::clear_stringclasslabels() {
  if (has_stringclasslabels()) {
    delete ClassLabels_.stringclasslabels_;
    clear_has_ClassLabels();
  }
}
 const ::CoreML::Specification::StringVector& NonMaximumSuppression::stringclasslabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  return has_stringclasslabels()
      ? *ClassLabels_.stringclasslabels_
      : ::CoreML::Specification::StringVector::default_instance();
}
::CoreML::Specification::StringVector* NonMaximumSuppression::mutable_stringclasslabels() {
  if (!has_stringclasslabels()) {
    clear_ClassLabels();
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = new ::CoreML::Specification::StringVector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  return ClassLabels_.stringclasslabels_;
}
::CoreML::Specification::StringVector* NonMaximumSuppression::release_stringclasslabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
  if (has_stringclasslabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::StringVector* temp = ClassLabels_.stringclasslabels_;
    ClassLabels_.stringclasslabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NonMaximumSuppression::set_allocated_stringclasslabels(::CoreML::Specification::StringVector* stringclasslabels) {
  clear_ClassLabels();
  if (stringclasslabels) {
    set_has_stringclasslabels();
    ClassLabels_.stringclasslabels_ = stringclasslabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.stringClassLabels)
}

// .CoreML.Specification.Int64Vector int64ClassLabels = 101;
bool NonMaximumSuppression::has_int64classlabels() const {
  return ClassLabels_case() == kInt64ClassLabels;
}
void NonMaximumSuppression::set_has_int64classlabels() {
  _oneof_case_[1] = kInt64ClassLabels;
}
void NonMaximumSuppression::clear_int64classlabels() {
  if (has_int64classlabels()) {
    delete ClassLabels_.int64classlabels_;
    clear_has_ClassLabels();
  }
}
 const ::CoreML::Specification::Int64Vector& NonMaximumSuppression::int64classlabels() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  return has_int64classlabels()
      ? *ClassLabels_.int64classlabels_
      : ::CoreML::Specification::Int64Vector::default_instance();
}
::CoreML::Specification::Int64Vector* NonMaximumSuppression::mutable_int64classlabels() {
  if (!has_int64classlabels()) {
    clear_ClassLabels();
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = new ::CoreML::Specification::Int64Vector;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  return ClassLabels_.int64classlabels_;
}
::CoreML::Specification::Int64Vector* NonMaximumSuppression::release_int64classlabels() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
  if (has_int64classlabels()) {
    clear_has_ClassLabels();
    ::CoreML::Specification::Int64Vector* temp = ClassLabels_.int64classlabels_;
    ClassLabels_.int64classlabels_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void NonMaximumSuppression::set_allocated_int64classlabels(::CoreML::Specification::Int64Vector* int64classlabels) {
  clear_ClassLabels();
  if (int64classlabels) {
    set_has_int64classlabels();
    ClassLabels_.int64classlabels_ = int64classlabels;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.int64ClassLabels)
}

// double iouThreshold = 110;
void NonMaximumSuppression::clear_iouthreshold() {
  iouthreshold_ = 0;
}
double NonMaximumSuppression::iouthreshold() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.iouThreshold)
  return iouthreshold_;
}
void NonMaximumSuppression::set_iouthreshold(double value) {
  
  iouthreshold_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.iouThreshold)
}

// double confidenceThreshold = 111;
void NonMaximumSuppression::clear_confidencethreshold() {
  confidencethreshold_ = 0;
}
double NonMaximumSuppression::confidencethreshold() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceThreshold)
  return confidencethreshold_;
}
void NonMaximumSuppression::set_confidencethreshold(double value) {
  
  confidencethreshold_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceThreshold)
}

// string confidenceInputFeatureName = 200;
void NonMaximumSuppression::clear_confidenceinputfeaturename() {
  confidenceinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::confidenceinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  return confidenceinputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_confidenceinputfeaturename(const ::std::string& value) {
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_confidenceinputfeaturename(::std::string&& value) {
  
  confidenceinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
#endif
void NonMaximumSuppression::set_confidenceinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
void NonMaximumSuppression::set_confidenceinputfeaturename(const char* value, size_t size) {
  
  confidenceinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_confidenceinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  return confidenceinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_confidenceinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
  
  return confidenceinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_confidenceinputfeaturename(::std::string* confidenceinputfeaturename) {
  if (confidenceinputfeaturename != NULL) {
    
  } else {
    
  }
  confidenceinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidenceinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName)
}

// string coordinatesInputFeatureName = 201;
void NonMaximumSuppression::clear_coordinatesinputfeaturename() {
  coordinatesinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::coordinatesinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  return coordinatesinputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_coordinatesinputfeaturename(const ::std::string& value) {
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_coordinatesinputfeaturename(::std::string&& value) {
  
  coordinatesinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
#endif
void NonMaximumSuppression::set_coordinatesinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
void NonMaximumSuppression::set_coordinatesinputfeaturename(const char* value, size_t size) {
  
  coordinatesinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_coordinatesinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  return coordinatesinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_coordinatesinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
  
  return coordinatesinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_coordinatesinputfeaturename(::std::string* coordinatesinputfeaturename) {
  if (coordinatesinputfeaturename != NULL) {
    
  } else {
    
  }
  coordinatesinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coordinatesinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName)
}

// string iouThresholdInputFeatureName = 202;
void NonMaximumSuppression::clear_iouthresholdinputfeaturename() {
  iouthresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::iouthresholdinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  return iouthresholdinputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_iouthresholdinputfeaturename(const ::std::string& value) {
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_iouthresholdinputfeaturename(::std::string&& value) {
  
  iouthresholdinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
#endif
void NonMaximumSuppression::set_iouthresholdinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
void NonMaximumSuppression::set_iouthresholdinputfeaturename(const char* value, size_t size) {
  
  iouthresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_iouthresholdinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  return iouthresholdinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_iouthresholdinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
  
  return iouthresholdinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_iouthresholdinputfeaturename(::std::string* iouthresholdinputfeaturename) {
  if (iouthresholdinputfeaturename != NULL) {
    
  } else {
    
  }
  iouthresholdinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iouthresholdinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName)
}

// string confidenceThresholdInputFeatureName = 203;
void NonMaximumSuppression::clear_confidencethresholdinputfeaturename() {
  confidencethresholdinputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::confidencethresholdinputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  return confidencethresholdinputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const ::std::string& value) {
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_confidencethresholdinputfeaturename(::std::string&& value) {
  
  confidencethresholdinputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
#endif
void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
void NonMaximumSuppression::set_confidencethresholdinputfeaturename(const char* value, size_t size) {
  
  confidencethresholdinputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_confidencethresholdinputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  return confidencethresholdinputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_confidencethresholdinputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
  
  return confidencethresholdinputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_confidencethresholdinputfeaturename(::std::string* confidencethresholdinputfeaturename) {
  if (confidencethresholdinputfeaturename != NULL) {
    
  } else {
    
  }
  confidencethresholdinputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidencethresholdinputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName)
}

// string confidenceOutputFeatureName = 210;
void NonMaximumSuppression::clear_confidenceoutputfeaturename() {
  confidenceoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::confidenceoutputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  return confidenceoutputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_confidenceoutputfeaturename(const ::std::string& value) {
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_confidenceoutputfeaturename(::std::string&& value) {
  
  confidenceoutputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
#endif
void NonMaximumSuppression::set_confidenceoutputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
void NonMaximumSuppression::set_confidenceoutputfeaturename(const char* value, size_t size) {
  
  confidenceoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_confidenceoutputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  return confidenceoutputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_confidenceoutputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
  
  return confidenceoutputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_confidenceoutputfeaturename(::std::string* confidenceoutputfeaturename) {
  if (confidenceoutputfeaturename != NULL) {
    
  } else {
    
  }
  confidenceoutputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), confidenceoutputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName)
}

// string coordinatesOutputFeatureName = 211;
void NonMaximumSuppression::clear_coordinatesoutputfeaturename() {
  coordinatesoutputfeaturename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NonMaximumSuppression::coordinatesoutputfeaturename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  return coordinatesoutputfeaturename_.GetNoArena();
}
void NonMaximumSuppression::set_coordinatesoutputfeaturename(const ::std::string& value) {
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
#if LANG_CXX11
void NonMaximumSuppression::set_coordinatesoutputfeaturename(::std::string&& value) {
  
  coordinatesoutputfeaturename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
#endif
void NonMaximumSuppression::set_coordinatesoutputfeaturename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
void NonMaximumSuppression::set_coordinatesoutputfeaturename(const char* value, size_t size) {
  
  coordinatesoutputfeaturename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}
::std::string* NonMaximumSuppression::mutable_coordinatesoutputfeaturename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  return coordinatesoutputfeaturename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NonMaximumSuppression::release_coordinatesoutputfeaturename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
  
  return coordinatesoutputfeaturename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NonMaximumSuppression::set_allocated_coordinatesoutputfeaturename(::std::string* coordinatesoutputfeaturename) {
  if (coordinatesoutputfeaturename != NULL) {
    
  } else {
    
  }
  coordinatesoutputfeaturename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coordinatesoutputfeaturename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName)
}

bool NonMaximumSuppression::has_SuppressionMethod() const {
  return SuppressionMethod_case() != SUPPRESSIONMETHOD_NOT_SET;
}
void NonMaximumSuppression::clear_has_SuppressionMethod() {
  _oneof_case_[0] = SUPPRESSIONMETHOD_NOT_SET;
}
bool NonMaximumSuppression::has_ClassLabels() const {
  return ClassLabels_case() != CLASSLABELS_NOT_SET;
}
void NonMaximumSuppression::clear_has_ClassLabels() {
  _oneof_case_[1] = CLASSLABELS_NOT_SET;
}
NonMaximumSuppression::SuppressionMethodCase NonMaximumSuppression::SuppressionMethod_case() const {
  return NonMaximumSuppression::SuppressionMethodCase(_oneof_case_[0]);
}
NonMaximumSuppression::ClassLabelsCase NonMaximumSuppression::ClassLabels_case() const {
  return NonMaximumSuppression::ClassLabelsCase(_oneof_case_[1]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
