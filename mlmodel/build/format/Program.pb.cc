// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Program.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Program.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {
namespace V5 {
class Program_ParametersEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Program::Program_ParametersEntry> {
} _Program_ParametersEntry_default_instance_;
class ProgramDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Program> {
} _Program_default_instance_;
class FunctionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Function> {
} _Function_default_instance_;
class Block_InputsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Block::Block_InputsEntry> {
} _Block_InputsEntry_default_instance_;
class BlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Block> {
} _Block_default_instance_;
class Operator_InputsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Operator::Operator_InputsEntry> {
} _Operator_InputsEntry_default_instance_;
class Operator_AttributesEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Operator::Operator_AttributesEntry> {
} _Operator_AttributesEntry_default_instance_;
class OperatorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Operator> {
} _Operator_default_instance_;
class NamedValueTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NamedValueType> {
} _NamedValueType_default_instance_;
class ValueTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ValueType> {
  public:
  int scalartype_;
  const ::CoreML::Specification::V5::TensorType* tensortype_;
  const ::CoreML::Specification::V5::ListType* listtype_;
  const ::CoreML::Specification::V5::TupleType* tupletype_;
} _ValueType_default_instance_;
class TensorTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TensorType> {
} _TensorType_default_instance_;
class ListTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ListType> {
} _ListType_default_instance_;
class TupleTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TupleType> {
} _TupleType_default_instance_;
class DimensionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Dimension> {
  public:
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int64 size_;
} _Dimension_default_instance_;
class Value_ImmediateValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Value_ImmediateValue> {
  public:
  float f_;
  ::google::protobuf::int64 i_;
  bool b_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  const ::CoreML::Specification::V5::TensorValue* tensor_;
  const ::CoreML::Specification::V5::TupleValue* tuple_;
} _Value_ImmediateValue_default_instance_;
class Value_FileValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Value_FileValue> {
} _Value_FileValue_default_instance_;
class ValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Value> {
  public:
  const ::CoreML::Specification::V5::Value_ImmediateValue* immediatevalue_;
  const ::CoreML::Specification::V5::Value_FileValue* filevalue_;
} _Value_default_instance_;
class TensorValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TensorValue> {
} _TensorValue_default_instance_;
class TupleValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TupleValue> {
} _TupleValue_default_instance_;

namespace protobuf_Program_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _Program_default_instance_.Shutdown();
  _Function_default_instance_.Shutdown();
  _Block_default_instance_.Shutdown();
  _Operator_default_instance_.Shutdown();
  _NamedValueType_default_instance_.Shutdown();
  _ValueType_default_instance_.Shutdown();
  _TensorType_default_instance_.Shutdown();
  _ListType_default_instance_.Shutdown();
  _TupleType_default_instance_.Shutdown();
  _Dimension_default_instance_.Shutdown();
  _Value_ImmediateValue_default_instance_.Shutdown();
  _Value_FileValue_default_instance_.Shutdown();
  _Value_default_instance_.Shutdown();
  _TensorValue_default_instance_.Shutdown();
  _TupleValue_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Program_ParametersEntry_default_instance_.DefaultConstruct();
  _Program_default_instance_.DefaultConstruct();
  _Function_default_instance_.DefaultConstruct();
  _Block_InputsEntry_default_instance_.DefaultConstruct();
  _Block_default_instance_.DefaultConstruct();
  _Operator_InputsEntry_default_instance_.DefaultConstruct();
  _Operator_AttributesEntry_default_instance_.DefaultConstruct();
  _Operator_default_instance_.DefaultConstruct();
  _NamedValueType_default_instance_.DefaultConstruct();
  _ValueType_default_instance_.DefaultConstruct();
  _TensorType_default_instance_.DefaultConstruct();
  _ListType_default_instance_.DefaultConstruct();
  _TupleType_default_instance_.DefaultConstruct();
  _Dimension_default_instance_.DefaultConstruct();
  _Value_ImmediateValue_default_instance_.DefaultConstruct();
  _Value_FileValue_default_instance_.DefaultConstruct();
  _Value_default_instance_.DefaultConstruct();
  _TensorValue_default_instance_.DefaultConstruct();
  _TupleValue_default_instance_.DefaultConstruct();
  _Program_ParametersEntry_default_instance_.get_mutable()->set_default_instance(_Program_ParametersEntry_default_instance_.get_mutable());
  _Program_ParametersEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _Function_default_instance_.get_mutable()->block_ = const_cast< ::CoreML::Specification::V5::Block*>(
      ::CoreML::Specification::V5::Block::internal_default_instance());
  _Block_InputsEntry_default_instance_.get_mutable()->set_default_instance(_Block_InputsEntry_default_instance_.get_mutable());
  _Block_InputsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _Operator_InputsEntry_default_instance_.get_mutable()->set_default_instance(_Operator_InputsEntry_default_instance_.get_mutable());
  _Operator_InputsEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _Operator_AttributesEntry_default_instance_.get_mutable()->set_default_instance(_Operator_AttributesEntry_default_instance_.get_mutable());
  _Operator_AttributesEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _NamedValueType_default_instance_.get_mutable()->type_ = const_cast< ::CoreML::Specification::V5::ValueType*>(
      ::CoreML::Specification::V5::ValueType::internal_default_instance());
  _ListType_default_instance_.get_mutable()->type_ = const_cast< ::CoreML::Specification::V5::ValueType*>(
      ::CoreML::Specification::V5::ValueType::internal_default_instance());
  _ListType_default_instance_.get_mutable()->length_ = const_cast< ::CoreML::Specification::V5::Dimension*>(
      ::CoreML::Specification::V5::Dimension::internal_default_instance());
  _Value_default_instance_.get_mutable()->type_ = const_cast< ::CoreML::Specification::V5::ValueType*>(
      ::CoreML::Specification::V5::ValueType::internal_default_instance());
  _TensorValue_default_instance_.get_mutable()->tensortype_ = const_cast< ::CoreML::Specification::V5::TensorType*>(
      ::CoreML::Specification::V5::TensorType::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_Program_2eproto

bool ScalarType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 10:
    case 11:
    case 12:
    case 13:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Program::kVersionFieldNumber;
const int Program::kFunctionsFieldNumber;
const int Program::kParametersFieldNumber;
const int Program::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Program::Program()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Program)
}
Program::Program(const Program& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      functions_(from.functions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  docstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.docstring().size() > 0) {
    docstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docstring_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Program)
}

void Program::SharedCtor() {
  docstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Program::~Program() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Program)
  SharedDtor();
}

void Program::SharedDtor() {
  docstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Program::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Program& Program::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Program* Program::New(::google::protobuf::Arena* arena) const {
  Program* n = new Program;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Program::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Program)
  functions_.Clear();
  parameters_.Clear();
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
}

bool Program::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Program)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.Function functions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_functions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .CoreML.Specification.V5.Value> parameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          Program_ParametersEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              Program_ParametersEntry,
              ::std::string, ::CoreML::Specification::V5::Value,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Program.ParametersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string docString = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docstring().data(), this->docstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Program.docString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Program)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Program)
  return false;
#undef DO_
}

void Program::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  // repeated .CoreML.Specification.V5.Function functions = 2;
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->functions(i), output);
  }

  // map<string, .CoreML.Specification.V5.Value> parameters = 3;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Program.ParametersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->parameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Program_ParametersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Program_ParametersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string docString = 4;
  if (this->docstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docstring().data(), this->docstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Program.docString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->docstring(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Program)
}

size_t Program::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Program)
  size_t total_size = 0;

  // repeated .CoreML.Specification.V5.Function functions = 2;
  {
    unsigned int count = this->functions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->functions(i));
    }
  }

  // map<string, .CoreML.Specification.V5.Value> parameters = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  {
    ::google::protobuf::scoped_ptr<Program_ParametersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string docString = 4;
  if (this->docstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docstring());
  }

  // int64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Program::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Program*>(&from));
}

void Program::MergeFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Program)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
  parameters_.MergeFrom(from.parameters_);
  if (from.docstring().size() > 0) {

    docstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docstring_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void Program::CopyFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Program::IsInitialized() const {
  return true;
}

void Program::Swap(Program* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Program::InternalSwap(Program* other) {
  functions_.InternalSwap(&other->functions_);
  parameters_.Swap(&other->parameters_);
  docstring_.Swap(&other->docstring_);
  std::swap(version_, other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Program::GetTypeName() const {
  return "CoreML.Specification.V5.Program";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Program

// int64 version = 1;
void Program::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Program::version() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.version)
  return version_;
}
void Program::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Program.version)
}

// repeated .CoreML.Specification.V5.Function functions = 2;
int Program::functions_size() const {
  return functions_.size();
}
void Program::clear_functions() {
  functions_.Clear();
}
const ::CoreML::Specification::V5::Function& Program::functions(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.functions)
  return functions_.Get(index);
}
::CoreML::Specification::V5::Function* Program::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Program.functions)
  return functions_.Mutable(index);
}
::CoreML::Specification::V5::Function* Program::add_functions() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Program.functions)
  return functions_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >*
Program::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Program.functions)
  return &functions_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Function >&
Program::functions() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Program.functions)
  return functions_;
}

// map<string, .CoreML.Specification.V5.Value> parameters = 3;
int Program::parameters_size() const {
  return parameters_.size();
}
void Program::clear_parameters() {
  parameters_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
Program::parameters() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Program.parameters)
  return parameters_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
Program::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Program.parameters)
  return parameters_.MutableMap();
}

// string docString = 4;
void Program::clear_docstring() {
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Program::docstring() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Program.docString)
  return docstring_.GetNoArena();
}
void Program::set_docstring(const ::std::string& value) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Program.docString)
}
#if LANG_CXX11
void Program::set_docstring(::std::string&& value) {
  
  docstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Program.docString)
}
#endif
void Program::set_docstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Program.docString)
}
void Program::set_docstring(const char* value, size_t size) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Program.docString)
}
::std::string* Program::mutable_docstring() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Program.docString)
  return docstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Program::release_docstring() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Program.docString)
  
  return docstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Program::set_allocated_docstring(::std::string* docstring) {
  if (docstring != NULL) {
    
  } else {
    
  }
  docstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docstring);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Program.docString)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Function::kNameFieldNumber;
const int Function::kInputsFieldNumber;
const int Function::kOutputsFieldNumber;
const int Function::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Function::Function()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Function)
}
Function::Function(const Function& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_block()) {
    block_ = new ::CoreML::Specification::V5::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Function)
}

void Function::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_ = NULL;
  _cached_size_ = 0;
}

Function::~Function() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Function)
  SharedDtor();
}

void Function::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete block_;
  }
}

void Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Function& Function::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Function* Function::New(::google::protobuf::Arena* arena) const {
  Function* n = new Function;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Function::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Function)
  inputs_.Clear();
  outputs_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && block_ != NULL) {
    delete block_;
  }
  block_ = NULL;
}

bool Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Function)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Function.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.ValueType outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.Block block = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Function)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Function)
  return false;
#undef DO_
}

void Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Function)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Function.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
  for (unsigned int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->inputs(i), output);
  }

  // repeated .CoreML.Specification.V5.ValueType outputs = 3;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->outputs(i), output);
  }

  // .CoreML.Specification.V5.Block block = 4;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->block_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Function)
}

size_t Function::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Function)
  size_t total_size = 0;

  // repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
  {
    unsigned int count = this->inputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputs(i));
    }
  }

  // repeated .CoreML.Specification.V5.ValueType outputs = 3;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .CoreML.Specification.V5.Block block = 4;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Function::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Function*>(&from));
}

void Function::MergeFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Function)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_block()) {
    mutable_block()->::CoreML::Specification::V5::Block::MergeFrom(from.block());
  }
}

void Function::CopyFrom(const Function& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Function)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function::IsInitialized() const {
  return true;
}

void Function::Swap(Function* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Function::InternalSwap(Function* other) {
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  name_.Swap(&other->name_);
  std::swap(block_, other->block_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Function::GetTypeName() const {
  return "CoreML.Specification.V5.Function";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Function

// string name = 1;
void Function::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Function::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.name)
  return name_.GetNoArena();
}
void Function::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Function.name)
}
#if LANG_CXX11
void Function::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Function.name)
}
#endif
void Function::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Function.name)
}
void Function::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Function.name)
}
::std::string* Function::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Function::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Function.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Function::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Function.name)
}

// repeated .CoreML.Specification.V5.NamedValueType inputs = 2;
int Function::inputs_size() const {
  return inputs_.size();
}
void Function::clear_inputs() {
  inputs_.Clear();
}
const ::CoreML::Specification::V5::NamedValueType& Function::inputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.inputs)
  return inputs_.Get(index);
}
::CoreML::Specification::V5::NamedValueType* Function::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.inputs)
  return inputs_.Mutable(index);
}
::CoreML::Specification::V5::NamedValueType* Function::add_inputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Function.inputs)
  return inputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
Function::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Function.inputs)
  return &inputs_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
Function::inputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Function.inputs)
  return inputs_;
}

// repeated .CoreML.Specification.V5.ValueType outputs = 3;
int Function::outputs_size() const {
  return outputs_.size();
}
void Function::clear_outputs() {
  outputs_.Clear();
}
const ::CoreML::Specification::V5::ValueType& Function::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.outputs)
  return outputs_.Get(index);
}
::CoreML::Specification::V5::ValueType* Function::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.outputs)
  return outputs_.Mutable(index);
}
::CoreML::Specification::V5::ValueType* Function::add_outputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Function.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
Function::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Function.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
Function::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Function.outputs)
  return outputs_;
}

// .CoreML.Specification.V5.Block block = 4;
bool Function::has_block() const {
  return this != internal_default_instance() && block_ != NULL;
}
void Function::clear_block() {
  if (GetArenaNoVirtual() == NULL && block_ != NULL) delete block_;
  block_ = NULL;
}
const ::CoreML::Specification::V5::Block& Function::block() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Function.block)
  return block_ != NULL ? *block_
                         : *::CoreML::Specification::V5::Block::internal_default_instance();
}
::CoreML::Specification::V5::Block* Function::mutable_block() {
  
  if (block_ == NULL) {
    block_ = new ::CoreML::Specification::V5::Block;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Function.block)
  return block_;
}
::CoreML::Specification::V5::Block* Function::release_block() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Function.block)
  
  ::CoreML::Specification::V5::Block* temp = block_;
  block_ = NULL;
  return temp;
}
void Function::set_allocated_block(::CoreML::Specification::V5::Block* block) {
  delete block_;
  block_ = block;
  if (block) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Function.block)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kInputsFieldNumber;
const int Block::kOutputsFieldNumber;
const int Block::kOperatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      outputs_(from.outputs_),
      operators_(from.operators_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inputs_.MergeFrom(from.inputs_);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Block& Block::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Block* Block::New(::google::protobuf::Arena* arena) const {
  Block* n = new Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Block)
  inputs_.Clear();
  outputs_.Clear();
  operators_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          Block_InputsEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              Block_InputsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&inputs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Block.InputsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Block.InputsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_outputs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outputs(this->outputs_size() - 1).data(),
            this->outputs(this->outputs_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Block.outputs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.Operator operators = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_operators()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> inputs = 1;
  if (!this->inputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Block.InputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Block.InputsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->inputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->inputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Block_InputsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inputs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Block_InputsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it) {
        entry.reset(inputs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string outputs = 2;
  for (int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outputs(i).data(), this->outputs(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Block.outputs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->outputs(i), output);
  }

  // repeated .CoreML.Specification.V5.Operator operators = 3;
  for (unsigned int i = 0, n = this->operators_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->operators(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Block)
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Block)
  size_t total_size = 0;

  // map<string, string> inputs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->inputs_size());
  {
    ::google::protobuf::scoped_ptr<Block_InputsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->inputs().begin();
        it != this->inputs().end(); ++it) {
      entry.reset(inputs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string outputs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->outputs_size());
  for (int i = 0, n = this->outputs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->outputs(i));
  }

  // repeated .CoreML.Specification.V5.Operator operators = 3;
  {
    unsigned int count = this->operators_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operators(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Block*>(&from));
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  operators_.MergeFrom(from.operators_);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  inputs_.Swap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  operators_.InternalSwap(&other->operators_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Block::GetTypeName() const {
  return "CoreML.Specification.V5.Block";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// map<string, string> inputs = 1;
int Block::inputs_size() const {
  return inputs_.size();
}
void Block::clear_inputs() {
  inputs_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Block::inputs() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Block.inputs)
  return inputs_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Block::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Block.inputs)
  return inputs_.MutableMap();
}

// repeated string outputs = 2;
int Block::outputs_size() const {
  return outputs_.size();
}
void Block::clear_outputs() {
  outputs_.Clear();
}
const ::std::string& Block::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Block.outputs)
  return outputs_.Get(index);
}
::std::string* Block::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Block.outputs)
  return outputs_.Mutable(index);
}
void Block::set_outputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Block.outputs)
  outputs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Block::set_outputs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Block.outputs)
  outputs_.Mutable(index)->assign(std::move(value));
}
#endif
void Block::set_outputs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Block.outputs)
}
void Block::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Block.outputs)
}
::std::string* Block::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:CoreML.Specification.V5.Block.outputs)
  return outputs_.Add();
}
void Block::add_outputs(const ::std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.outputs)
}
#if LANG_CXX11
void Block::add_outputs(::std::string&& value) {
  outputs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.outputs)
}
#endif
void Block::add_outputs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CoreML.Specification.V5.Block.outputs)
}
void Block::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CoreML.Specification.V5.Block.outputs)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Block.outputs)
  return outputs_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Block.outputs)
  return &outputs_;
}

// repeated .CoreML.Specification.V5.Operator operators = 3;
int Block::operators_size() const {
  return operators_.size();
}
void Block::clear_operators() {
  operators_.Clear();
}
const ::CoreML::Specification::V5::Operator& Block::operators(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Block.operators)
  return operators_.Get(index);
}
::CoreML::Specification::V5::Operator* Block::mutable_operators(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Block.operators)
  return operators_.Mutable(index);
}
::CoreML::Specification::V5::Operator* Block::add_operators() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Block.operators)
  return operators_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >*
Block::mutable_operators() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Block.operators)
  return &operators_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Operator >&
Block::operators() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Block.operators)
  return operators_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operator::kOpTypeFieldNumber;
const int Operator::kNameFieldNumber;
const int Operator::kInputsFieldNumber;
const int Operator::kOutputsFieldNumber;
const int Operator::kBlocksFieldNumber;
const int Operator::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operator::Operator()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Operator)
}
Operator::Operator(const Operator& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      outputs_(from.outputs_),
      blocks_(from.blocks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inputs_.MergeFrom(from.inputs_);
  attributes_.MergeFrom(from.attributes_);
  optype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optype().size() > 0) {
    optype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optype_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Operator)
}

void Operator::SharedCtor() {
  optype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Operator::~Operator() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Operator)
  SharedDtor();
}

void Operator::SharedDtor() {
  optype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Operator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Operator& Operator::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Operator* Operator::New(::google::protobuf::Arena* arena) const {
  Operator* n = new Operator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Operator::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Operator)
  inputs_.Clear();
  outputs_.Clear();
  blocks_.Clear();
  attributes_.Clear();
  optype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Operator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Operator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string opType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optype().data(), this->optype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Operator.opType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Operator.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> inputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          Operator_InputsEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              Operator_InputsEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&inputs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Operator.InputsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Operator.InputsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.Block blocks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .CoreML.Specification.V5.Value> attributes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          Operator_AttributesEntry::Parser< ::google::protobuf::internal::MapFieldLite<
              Operator_AttributesEntry,
              ::std::string, ::CoreML::Specification::V5::Value,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Operator.AttributesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Operator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Operator)
  return false;
#undef DO_
}

void Operator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string opType = 1;
  if (this->optype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optype().data(), this->optype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Operator.opType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->optype(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Operator.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // map<string, string> inputs = 3;
  if (!this->inputs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Operator.InputsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Operator.InputsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->inputs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->inputs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Operator_InputsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inputs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Operator_InputsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->inputs().begin();
          it != this->inputs().end(); ++it) {
        entry.reset(inputs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
  for (unsigned int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->outputs(i), output);
  }

  // repeated .CoreML.Specification.V5.Block blocks = 5;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->blocks(i), output);
  }

  // map<string, .CoreML.Specification.V5.Value> attributes = 6;
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "CoreML.Specification.V5.Operator.AttributesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Operator_AttributesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Operator_AttributesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessage(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Operator)
}

size_t Operator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Operator)
  size_t total_size = 0;

  // map<string, string> inputs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->inputs_size());
  {
    ::google::protobuf::scoped_ptr<Operator_InputsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->inputs().begin();
        it != this->inputs().end(); ++it) {
      entry.reset(inputs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
  {
    unsigned int count = this->outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs(i));
    }
  }

  // repeated .CoreML.Specification.V5.Block blocks = 5;
  {
    unsigned int count = this->blocks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocks(i));
    }
  }

  // map<string, .CoreML.Specification.V5.Value> attributes = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::google::protobuf::scoped_ptr<Operator_AttributesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string opType = 1;
  if (this->optype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optype());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operator::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Operator*>(&from));
}

void Operator::MergeFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  blocks_.MergeFrom(from.blocks_);
  attributes_.MergeFrom(from.attributes_);
  if (from.optype().size() > 0) {

    optype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optype_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Operator::CopyFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operator::IsInitialized() const {
  return true;
}

void Operator::Swap(Operator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operator::InternalSwap(Operator* other) {
  inputs_.Swap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  blocks_.InternalSwap(&other->blocks_);
  attributes_.Swap(&other->attributes_);
  optype_.Swap(&other->optype_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Operator::GetTypeName() const {
  return "CoreML.Specification.V5.Operator";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Operator

// string opType = 1;
void Operator::clear_optype() {
  optype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Operator::optype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.opType)
  return optype_.GetNoArena();
}
void Operator::set_optype(const ::std::string& value) {
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Operator.opType)
}
#if LANG_CXX11
void Operator::set_optype(::std::string&& value) {
  
  optype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Operator.opType)
}
#endif
void Operator::set_optype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Operator.opType)
}
void Operator::set_optype(const char* value, size_t size) {
  
  optype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Operator.opType)
}
::std::string* Operator::mutable_optype() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.opType)
  return optype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Operator::release_optype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Operator.opType)
  
  return optype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Operator::set_allocated_optype(::std::string* optype) {
  if (optype != NULL) {
    
  } else {
    
  }
  optype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optype);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Operator.opType)
}

// string name = 2;
void Operator::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Operator::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.name)
  return name_.GetNoArena();
}
void Operator::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Operator.name)
}
#if LANG_CXX11
void Operator::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Operator.name)
}
#endif
void Operator::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Operator.name)
}
void Operator::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Operator.name)
}
::std::string* Operator::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Operator::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Operator.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Operator::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Operator.name)
}

// map<string, string> inputs = 3;
int Operator::inputs_size() const {
  return inputs_.size();
}
void Operator::clear_inputs() {
  inputs_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
Operator::inputs() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Operator.inputs)
  return inputs_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
Operator::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Operator.inputs)
  return inputs_.MutableMap();
}

// repeated .CoreML.Specification.V5.NamedValueType outputs = 4;
int Operator::outputs_size() const {
  return outputs_.size();
}
void Operator::clear_outputs() {
  outputs_.Clear();
}
const ::CoreML::Specification::V5::NamedValueType& Operator::outputs(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Get(index);
}
::CoreML::Specification::V5::NamedValueType* Operator::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Mutable(index);
}
::CoreML::Specification::V5::NamedValueType* Operator::add_outputs() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Operator.outputs)
  return outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >*
Operator::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Operator.outputs)
  return &outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::NamedValueType >&
Operator::outputs() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Operator.outputs)
  return outputs_;
}

// repeated .CoreML.Specification.V5.Block blocks = 5;
int Operator::blocks_size() const {
  return blocks_.size();
}
void Operator::clear_blocks() {
  blocks_.Clear();
}
const ::CoreML::Specification::V5::Block& Operator::blocks(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Get(index);
}
::CoreML::Specification::V5::Block* Operator::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Mutable(index);
}
::CoreML::Specification::V5::Block* Operator::add_blocks() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.Operator.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >*
Operator::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.Operator.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Block >&
Operator::blocks() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.Operator.blocks)
  return blocks_;
}

// map<string, .CoreML.Specification.V5.Value> attributes = 6;
int Operator::attributes_size() const {
  return attributes_.size();
}
void Operator::clear_attributes() {
  attributes_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >&
Operator::attributes() const {
  // @@protoc_insertion_point(field_map:CoreML.Specification.V5.Operator.attributes)
  return attributes_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::CoreML::Specification::V5::Value >*
Operator::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:CoreML.Specification.V5.Operator.attributes)
  return attributes_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamedValueType::kNameFieldNumber;
const int NamedValueType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamedValueType::NamedValueType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.NamedValueType)
}
NamedValueType::NamedValueType(const NamedValueType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::CoreML::Specification::V5::ValueType(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.NamedValueType)
}

void NamedValueType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  _cached_size_ = 0;
}

NamedValueType::~NamedValueType() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.NamedValueType)
  SharedDtor();
}

void NamedValueType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_;
  }
}

void NamedValueType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const NamedValueType& NamedValueType::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

NamedValueType* NamedValueType::New(::google::protobuf::Arena* arena) const {
  NamedValueType* n = new NamedValueType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NamedValueType::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.NamedValueType)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}

bool NamedValueType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.NamedValueType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.NamedValueType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.ValueType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.NamedValueType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.NamedValueType)
  return false;
#undef DO_
}

void NamedValueType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.NamedValueType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.NamedValueType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .CoreML.Specification.V5.ValueType type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->type_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.NamedValueType)
}

size_t NamedValueType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.NamedValueType)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .CoreML.Specification.V5.ValueType type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NamedValueType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const NamedValueType*>(&from));
}

void NamedValueType::MergeFrom(const NamedValueType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.NamedValueType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    mutable_type()->::CoreML::Specification::V5::ValueType::MergeFrom(from.type());
  }
}

void NamedValueType::CopyFrom(const NamedValueType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.NamedValueType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedValueType::IsInitialized() const {
  return true;
}

void NamedValueType::Swap(NamedValueType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamedValueType::InternalSwap(NamedValueType* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string NamedValueType::GetTypeName() const {
  return "CoreML.Specification.V5.NamedValueType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NamedValueType

// string name = 1;
void NamedValueType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NamedValueType::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.NamedValueType.name)
  return name_.GetNoArena();
}
void NamedValueType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.NamedValueType.name)
}
#if LANG_CXX11
void NamedValueType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.NamedValueType.name)
}
#endif
void NamedValueType::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.NamedValueType.name)
}
void NamedValueType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.NamedValueType.name)
}
::std::string* NamedValueType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.NamedValueType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NamedValueType::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.NamedValueType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NamedValueType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.NamedValueType.name)
}

// .CoreML.Specification.V5.ValueType type = 2;
bool NamedValueType::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
void NamedValueType::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
const ::CoreML::Specification::V5::ValueType& NamedValueType::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.NamedValueType.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
::CoreML::Specification::V5::ValueType* NamedValueType::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.NamedValueType.type)
  return type_;
}
::CoreML::Specification::V5::ValueType* NamedValueType::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.NamedValueType.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
void NamedValueType::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.NamedValueType.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueType::kScalarTypeFieldNumber;
const int ValueType::kTensorTypeFieldNumber;
const int ValueType::kListTypeFieldNumber;
const int ValueType::kTupleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueType::ValueType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.ValueType)
}
ValueType::ValueType(const ValueType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kScalarType: {
      set_scalartype(from.scalartype());
      break;
    }
    case kTensorType: {
      mutable_tensortype()->::CoreML::Specification::V5::TensorType::MergeFrom(from.tensortype());
      break;
    }
    case kListType: {
      mutable_listtype()->::CoreML::Specification::V5::ListType::MergeFrom(from.listtype());
      break;
    }
    case kTupleType: {
      mutable_tupletype()->::CoreML::Specification::V5::TupleType::MergeFrom(from.tupletype());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.ValueType)
}

void ValueType::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

ValueType::~ValueType() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.ValueType)
  SharedDtor();
}

void ValueType::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void ValueType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ValueType& ValueType::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueType* ValueType::New(::google::protobuf::Arena* arena) const {
  ValueType* n = new ValueType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueType::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.V5.ValueType)
  switch (type_case()) {
    case kScalarType: {
      // No need to clear
      break;
    }
    case kTensorType: {
      delete type_.tensortype_;
      break;
    }
    case kListType: {
      delete type_.listtype_;
      break;
    }
    case kTupleType: {
      delete type_.tupletype_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void ValueType::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.ValueType)
  clear_type();
}

bool ValueType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.ValueType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.V5.ScalarType scalarType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scalartype(static_cast< ::CoreML::Specification::V5::ScalarType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.TensorType tensorType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensortype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.ListType listType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_listtype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.TupleType tupleType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tupletype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.ValueType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.ValueType)
  return false;
#undef DO_
}

void ValueType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.ValueType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.V5.ScalarType scalarType = 1;
  if (has_scalartype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scalartype(), output);
  }

  // .CoreML.Specification.V5.TensorType tensorType = 2;
  if (has_tensortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *type_.tensortype_, output);
  }

  // .CoreML.Specification.V5.ListType listType = 3;
  if (has_listtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *type_.listtype_, output);
  }

  // .CoreML.Specification.V5.TupleType tupleType = 4;
  if (has_tupletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *type_.tupletype_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.ValueType)
}

size_t ValueType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.ValueType)
  size_t total_size = 0;

  switch (type_case()) {
    // .CoreML.Specification.V5.ScalarType scalarType = 1;
    case kScalarType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scalartype());
      break;
    }
    // .CoreML.Specification.V5.TensorType tensorType = 2;
    case kTensorType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.tensortype_);
      break;
    }
    // .CoreML.Specification.V5.ListType listType = 3;
    case kListType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.listtype_);
      break;
    }
    // .CoreML.Specification.V5.TupleType tupleType = 4;
    case kTupleType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_.tupletype_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ValueType*>(&from));
}

void ValueType::MergeFrom(const ValueType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.ValueType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kScalarType: {
      set_scalartype(from.scalartype());
      break;
    }
    case kTensorType: {
      mutable_tensortype()->::CoreML::Specification::V5::TensorType::MergeFrom(from.tensortype());
      break;
    }
    case kListType: {
      mutable_listtype()->::CoreML::Specification::V5::ListType::MergeFrom(from.listtype());
      break;
    }
    case kTupleType: {
      mutable_tupletype()->::CoreML::Specification::V5::TupleType::MergeFrom(from.tupletype());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void ValueType::CopyFrom(const ValueType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.ValueType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueType::IsInitialized() const {
  return true;
}

void ValueType::Swap(ValueType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueType::InternalSwap(ValueType* other) {
  std::swap(type_, other->type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ValueType::GetTypeName() const {
  return "CoreML.Specification.V5.ValueType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueType

// .CoreML.Specification.V5.ScalarType scalarType = 1;
bool ValueType::has_scalartype() const {
  return type_case() == kScalarType;
}
void ValueType::set_has_scalartype() {
  _oneof_case_[0] = kScalarType;
}
void ValueType::clear_scalartype() {
  if (has_scalartype()) {
    type_.scalartype_ = 0;
    clear_has_type();
  }
}
::CoreML::Specification::V5::ScalarType ValueType::scalartype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.scalarType)
  if (has_scalartype()) {
    return static_cast< ::CoreML::Specification::V5::ScalarType >(type_.scalartype_);
  }
  return static_cast< ::CoreML::Specification::V5::ScalarType >(0);
}
void ValueType::set_scalartype(::CoreML::Specification::V5::ScalarType value) {
  if (!has_scalartype()) {
    clear_type();
    set_has_scalartype();
  }
  type_.scalartype_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.ValueType.scalarType)
}

// .CoreML.Specification.V5.TensorType tensorType = 2;
bool ValueType::has_tensortype() const {
  return type_case() == kTensorType;
}
void ValueType::set_has_tensortype() {
  _oneof_case_[0] = kTensorType;
}
void ValueType::clear_tensortype() {
  if (has_tensortype()) {
    delete type_.tensortype_;
    clear_has_type();
  }
}
 const ::CoreML::Specification::V5::TensorType& ValueType::tensortype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.tensorType)
  return has_tensortype()
      ? *type_.tensortype_
      : ::CoreML::Specification::V5::TensorType::default_instance();
}
::CoreML::Specification::V5::TensorType* ValueType::mutable_tensortype() {
  if (!has_tensortype()) {
    clear_type();
    set_has_tensortype();
    type_.tensortype_ = new ::CoreML::Specification::V5::TensorType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.tensorType)
  return type_.tensortype_;
}
::CoreML::Specification::V5::TensorType* ValueType::release_tensortype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.tensorType)
  if (has_tensortype()) {
    clear_has_type();
    ::CoreML::Specification::V5::TensorType* temp = type_.tensortype_;
    type_.tensortype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueType::set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype) {
  clear_type();
  if (tensortype) {
    set_has_tensortype();
    type_.tensortype_ = tensortype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.tensorType)
}

// .CoreML.Specification.V5.ListType listType = 3;
bool ValueType::has_listtype() const {
  return type_case() == kListType;
}
void ValueType::set_has_listtype() {
  _oneof_case_[0] = kListType;
}
void ValueType::clear_listtype() {
  if (has_listtype()) {
    delete type_.listtype_;
    clear_has_type();
  }
}
 const ::CoreML::Specification::V5::ListType& ValueType::listtype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.listType)
  return has_listtype()
      ? *type_.listtype_
      : ::CoreML::Specification::V5::ListType::default_instance();
}
::CoreML::Specification::V5::ListType* ValueType::mutable_listtype() {
  if (!has_listtype()) {
    clear_type();
    set_has_listtype();
    type_.listtype_ = new ::CoreML::Specification::V5::ListType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.listType)
  return type_.listtype_;
}
::CoreML::Specification::V5::ListType* ValueType::release_listtype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.listType)
  if (has_listtype()) {
    clear_has_type();
    ::CoreML::Specification::V5::ListType* temp = type_.listtype_;
    type_.listtype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueType::set_allocated_listtype(::CoreML::Specification::V5::ListType* listtype) {
  clear_type();
  if (listtype) {
    set_has_listtype();
    type_.listtype_ = listtype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.listType)
}

// .CoreML.Specification.V5.TupleType tupleType = 4;
bool ValueType::has_tupletype() const {
  return type_case() == kTupleType;
}
void ValueType::set_has_tupletype() {
  _oneof_case_[0] = kTupleType;
}
void ValueType::clear_tupletype() {
  if (has_tupletype()) {
    delete type_.tupletype_;
    clear_has_type();
  }
}
 const ::CoreML::Specification::V5::TupleType& ValueType::tupletype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ValueType.tupleType)
  return has_tupletype()
      ? *type_.tupletype_
      : ::CoreML::Specification::V5::TupleType::default_instance();
}
::CoreML::Specification::V5::TupleType* ValueType::mutable_tupletype() {
  if (!has_tupletype()) {
    clear_type();
    set_has_tupletype();
    type_.tupletype_ = new ::CoreML::Specification::V5::TupleType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ValueType.tupleType)
  return type_.tupletype_;
}
::CoreML::Specification::V5::TupleType* ValueType::release_tupletype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ValueType.tupleType)
  if (has_tupletype()) {
    clear_has_type();
    ::CoreML::Specification::V5::TupleType* temp = type_.tupletype_;
    type_.tupletype_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueType::set_allocated_tupletype(::CoreML::Specification::V5::TupleType* tupletype) {
  clear_type();
  if (tupletype) {
    set_has_tupletype();
    type_.tupletype_ = tupletype;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ValueType.tupleType)
}

bool ValueType::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void ValueType::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
ValueType::TypeCase ValueType::type_case() const {
  return ValueType::TypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorType::kScalarTypeFieldNumber;
const int TensorType::kRankFieldNumber;
const int TensorType::kDimensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorType::TensorType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.TensorType)
}
TensorType::TensorType(const TensorType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      dimension_(from.dimension_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rank_, &from.rank_,
    reinterpret_cast<char*>(&scalartype_) -
    reinterpret_cast<char*>(&rank_) + sizeof(scalartype_));
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.TensorType)
}

void TensorType::SharedCtor() {
  ::memset(&rank_, 0, reinterpret_cast<char*>(&scalartype_) -
    reinterpret_cast<char*>(&rank_) + sizeof(scalartype_));
  _cached_size_ = 0;
}

TensorType::~TensorType() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.TensorType)
  SharedDtor();
}

void TensorType::SharedDtor() {
}

void TensorType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TensorType& TensorType::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorType* TensorType::New(::google::protobuf::Arena* arena) const {
  TensorType* n = new TensorType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorType::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.TensorType)
  dimension_.Clear();
  ::memset(&rank_, 0, reinterpret_cast<char*>(&scalartype_) -
    reinterpret_cast<char*>(&rank_) + sizeof(scalartype_));
}

bool TensorType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.TensorType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.V5.ScalarType scalarType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scalartype(static_cast< ::CoreML::Specification::V5::ScalarType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CoreML.Specification.V5.Dimension dimension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dimension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.TensorType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.TensorType)
  return false;
#undef DO_
}

void TensorType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.TensorType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.V5.ScalarType scalarType = 1;
  if (this->scalartype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->scalartype(), output);
  }

  // int64 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rank(), output);
  }

  // repeated .CoreML.Specification.V5.Dimension dimension = 3;
  for (unsigned int i = 0, n = this->dimension_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->dimension(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.TensorType)
}

size_t TensorType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.TensorType)
  size_t total_size = 0;

  // repeated .CoreML.Specification.V5.Dimension dimension = 3;
  {
    unsigned int count = this->dimension_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dimension(i));
    }
  }

  // int64 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rank());
  }

  // .CoreML.Specification.V5.ScalarType scalarType = 1;
  if (this->scalartype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scalartype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TensorType*>(&from));
}

void TensorType::MergeFrom(const TensorType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.TensorType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.scalartype() != 0) {
    set_scalartype(from.scalartype());
  }
}

void TensorType::CopyFrom(const TensorType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.TensorType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorType::IsInitialized() const {
  return true;
}

void TensorType::Swap(TensorType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorType::InternalSwap(TensorType* other) {
  dimension_.InternalSwap(&other->dimension_);
  std::swap(rank_, other->rank_);
  std::swap(scalartype_, other->scalartype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TensorType::GetTypeName() const {
  return "CoreML.Specification.V5.TensorType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorType

// .CoreML.Specification.V5.ScalarType scalarType = 1;
void TensorType::clear_scalartype() {
  scalartype_ = 0;
}
::CoreML::Specification::V5::ScalarType TensorType::scalartype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.scalarType)
  return static_cast< ::CoreML::Specification::V5::ScalarType >(scalartype_);
}
void TensorType::set_scalartype(::CoreML::Specification::V5::ScalarType value) {
  
  scalartype_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorType.scalarType)
}

// int64 rank = 2;
void TensorType::clear_rank() {
  rank_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TensorType::rank() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.rank)
  return rank_;
}
void TensorType::set_rank(::google::protobuf::int64 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorType.rank)
}

// repeated .CoreML.Specification.V5.Dimension dimension = 3;
int TensorType::dimension_size() const {
  return dimension_.size();
}
void TensorType::clear_dimension() {
  dimension_.Clear();
}
const ::CoreML::Specification::V5::Dimension& TensorType::dimension(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Get(index);
}
::CoreML::Specification::V5::Dimension* TensorType::mutable_dimension(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Mutable(index);
}
::CoreML::Specification::V5::Dimension* TensorType::add_dimension() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorType.dimension)
  return dimension_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >*
TensorType::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorType.dimension)
  return &dimension_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Dimension >&
TensorType::dimension() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorType.dimension)
  return dimension_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListType::kTypeFieldNumber;
const int ListType::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListType::ListType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.ListType)
}
ListType::ListType(const ListType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::CoreML::Specification::V5::ValueType(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_length()) {
    length_ = new ::CoreML::Specification::V5::Dimension(*from.length_);
  } else {
    length_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.ListType)
}

void ListType::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&type_) + sizeof(length_));
  _cached_size_ = 0;
}

ListType::~ListType() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.ListType)
  SharedDtor();
}

void ListType::SharedDtor() {
  if (this != internal_default_instance()) {
    delete type_;
  }
  if (this != internal_default_instance()) {
    delete length_;
  }
}

void ListType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ListType& ListType::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

ListType* ListType::New(::google::protobuf::Arena* arena) const {
  ListType* n = new ListType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListType::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.ListType)
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && length_ != NULL) {
    delete length_;
  }
  length_ = NULL;
}

bool ListType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.ListType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.V5.ValueType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.Dimension length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_length()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.ListType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.ListType)
  return false;
#undef DO_
}

void ListType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.ListType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.V5.ValueType type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->type_, output);
  }

  // .CoreML.Specification.V5.Dimension length = 2;
  if (this->has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->length_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.ListType)
}

size_t ListType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.ListType)
  size_t total_size = 0;

  // .CoreML.Specification.V5.ValueType type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  // .CoreML.Specification.V5.Dimension length = 2;
  if (this->has_length()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->length_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListType*>(&from));
}

void ListType::MergeFrom(const ListType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.ListType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::CoreML::Specification::V5::ValueType::MergeFrom(from.type());
  }
  if (from.has_length()) {
    mutable_length()->::CoreML::Specification::V5::Dimension::MergeFrom(from.length());
  }
}

void ListType::CopyFrom(const ListType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.ListType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListType::IsInitialized() const {
  return true;
}

void ListType::Swap(ListType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListType::InternalSwap(ListType* other) {
  std::swap(type_, other->type_);
  std::swap(length_, other->length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ListType::GetTypeName() const {
  return "CoreML.Specification.V5.ListType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListType

// .CoreML.Specification.V5.ValueType type = 1;
bool ListType::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
void ListType::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
const ::CoreML::Specification::V5::ValueType& ListType::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ListType.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
::CoreML::Specification::V5::ValueType* ListType::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ListType.type)
  return type_;
}
::CoreML::Specification::V5::ValueType* ListType::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ListType.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
void ListType::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ListType.type)
}

// .CoreML.Specification.V5.Dimension length = 2;
bool ListType::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
void ListType::clear_length() {
  if (GetArenaNoVirtual() == NULL && length_ != NULL) delete length_;
  length_ = NULL;
}
const ::CoreML::Specification::V5::Dimension& ListType::length() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.ListType.length)
  return length_ != NULL ? *length_
                         : *::CoreML::Specification::V5::Dimension::internal_default_instance();
}
::CoreML::Specification::V5::Dimension* ListType::mutable_length() {
  
  if (length_ == NULL) {
    length_ = new ::CoreML::Specification::V5::Dimension;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.ListType.length)
  return length_;
}
::CoreML::Specification::V5::Dimension* ListType::release_length() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.ListType.length)
  
  ::CoreML::Specification::V5::Dimension* temp = length_;
  length_ = NULL;
  return temp;
}
void ListType::set_allocated_length(::CoreML::Specification::V5::Dimension* length) {
  delete length_;
  length_ = length;
  if (length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.ListType.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TupleType::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TupleType::TupleType()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.TupleType)
}
TupleType::TupleType(const TupleType& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.TupleType)
}

void TupleType::SharedCtor() {
  _cached_size_ = 0;
}

TupleType::~TupleType() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.TupleType)
  SharedDtor();
}

void TupleType::SharedDtor() {
}

void TupleType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TupleType& TupleType::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

TupleType* TupleType::New(::google::protobuf::Arena* arena) const {
  TupleType* n = new TupleType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TupleType::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.TupleType)
  values_.Clear();
}

bool TupleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.TupleType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CoreML.Specification.V5.ValueType values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.TupleType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.TupleType)
  return false;
#undef DO_
}

void TupleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.TupleType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CoreML.Specification.V5.ValueType values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->values(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.TupleType)
}

size_t TupleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.TupleType)
  size_t total_size = 0;

  // repeated .CoreML.Specification.V5.ValueType values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TupleType::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TupleType*>(&from));
}

void TupleType::MergeFrom(const TupleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.TupleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void TupleType::CopyFrom(const TupleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.TupleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TupleType::IsInitialized() const {
  return true;
}

void TupleType::Swap(TupleType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TupleType::InternalSwap(TupleType* other) {
  values_.InternalSwap(&other->values_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TupleType::GetTypeName() const {
  return "CoreML.Specification.V5.TupleType";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TupleType

// repeated .CoreML.Specification.V5.ValueType values = 1;
int TupleType::values_size() const {
  return values_.size();
}
void TupleType::clear_values() {
  values_.Clear();
}
const ::CoreML::Specification::V5::ValueType& TupleType::values(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TupleType.values)
  return values_.Get(index);
}
::CoreML::Specification::V5::ValueType* TupleType::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TupleType.values)
  return values_.Mutable(index);
}
::CoreML::Specification::V5::ValueType* TupleType::add_values() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TupleType.values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >*
TupleType::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TupleType.values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::ValueType >&
TupleType::values() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TupleType.values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dimension::kSymbolFieldNumber;
const int Dimension::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dimension::Dimension()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Dimension)
}
Dimension::Dimension(const Dimension& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_dimension();
  switch (from.dimension_case()) {
    case kSymbol: {
      set_symbol(from.symbol());
      break;
    }
    case kSize: {
      set_size(from.size());
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Dimension)
}

void Dimension::SharedCtor() {
  clear_has_dimension();
  _cached_size_ = 0;
}

Dimension::~Dimension() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Dimension)
  SharedDtor();
}

void Dimension::SharedDtor() {
  if (has_dimension()) {
    clear_dimension();
  }
}

void Dimension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Dimension& Dimension::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Dimension* Dimension::New(::google::protobuf::Arena* arena) const {
  Dimension* n = new Dimension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dimension::clear_dimension() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.V5.Dimension)
  switch (dimension_case()) {
    case kSymbol: {
      dimension_.symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSize: {
      // No need to clear
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DIMENSION_NOT_SET;
}


void Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Dimension)
  clear_dimension();
}

bool Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Dimension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Dimension.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          clear_dimension();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dimension_.size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Dimension)
  return false;
#undef DO_
}

void Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Dimension.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // int64 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Dimension)
}

size_t Dimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Dimension)
  size_t total_size = 0;

  switch (dimension_case()) {
    // string symbol = 1;
    case kSymbol: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
      break;
    }
    // int64 size = 2;
    case kSize: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dimension::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Dimension*>(&from));
}

void Dimension::MergeFrom(const Dimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Dimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.dimension_case()) {
    case kSymbol: {
      set_symbol(from.symbol());
      break;
    }
    case kSize: {
      set_size(from.size());
      break;
    }
    case DIMENSION_NOT_SET: {
      break;
    }
  }
}

void Dimension::CopyFrom(const Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dimension::IsInitialized() const {
  return true;
}

void Dimension::Swap(Dimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dimension::InternalSwap(Dimension* other) {
  std::swap(dimension_, other->dimension_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Dimension::GetTypeName() const {
  return "CoreML.Specification.V5.Dimension";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dimension

// string symbol = 1;
bool Dimension::has_symbol() const {
  return dimension_case() == kSymbol;
}
void Dimension::set_has_symbol() {
  _oneof_case_[0] = kSymbol;
}
void Dimension::clear_symbol() {
  if (has_symbol()) {
    dimension_.symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_dimension();
  }
}
const ::std::string& Dimension::symbol() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Dimension.symbol)
  if (has_symbol()) {
    return dimension_.symbol_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Dimension::set_symbol(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
}
#if LANG_CXX11
void Dimension::set_symbol(::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.symbol)
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Dimension.symbol)
}
#endif
void Dimension::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Dimension.symbol)
}
void Dimension::set_symbol(const char* value, size_t size) {
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dimension_.symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Dimension.symbol)
}
::std::string* Dimension::mutable_symbol() {
  if (!has_symbol()) {
    clear_dimension();
    set_has_symbol();
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Dimension.symbol)
  return dimension_.symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Dimension::release_symbol() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Dimension.symbol)
  if (has_symbol()) {
    clear_has_dimension();
    return dimension_.symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Dimension::set_allocated_symbol(::std::string* symbol) {
  if (!has_symbol()) {
    dimension_.symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_dimension();
  if (symbol != NULL) {
    set_has_symbol();
    dimension_.symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        symbol);
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Dimension.symbol)
}

// int64 size = 2;
bool Dimension::has_size() const {
  return dimension_case() == kSize;
}
void Dimension::set_has_size() {
  _oneof_case_[0] = kSize;
}
void Dimension::clear_size() {
  if (has_size()) {
    dimension_.size_ = GOOGLE_LONGLONG(0);
    clear_has_dimension();
  }
}
::google::protobuf::int64 Dimension::size() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Dimension.size)
  if (has_size()) {
    return dimension_.size_;
  }
  return GOOGLE_LONGLONG(0);
}
void Dimension::set_size(::google::protobuf::int64 value) {
  if (!has_size()) {
    clear_dimension();
    set_has_size();
  }
  dimension_.size_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Dimension.size)
}

bool Dimension::has_dimension() const {
  return dimension_case() != DIMENSION_NOT_SET;
}
void Dimension::clear_has_dimension() {
  _oneof_case_[0] = DIMENSION_NOT_SET;
}
Dimension::DimensionCase Dimension::dimension_case() const {
  return Dimension::DimensionCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_ImmediateValue::kFFieldNumber;
const int Value_ImmediateValue::kIFieldNumber;
const int Value_ImmediateValue::kBFieldNumber;
const int Value_ImmediateValue::kSFieldNumber;
const int Value_ImmediateValue::kTensorFieldNumber;
const int Value_ImmediateValue::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_ImmediateValue::Value_ImmediateValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Value.ImmediateValue)
}
Value_ImmediateValue::Value_ImmediateValue(const Value_ImmediateValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kF: {
      set_f(from.f());
      break;
    }
    case kI: {
      set_i(from.i());
      break;
    }
    case kB: {
      set_b(from.b());
      break;
    }
    case kS: {
      set_s(from.s());
      break;
    }
    case kTensor: {
      mutable_tensor()->::CoreML::Specification::V5::TensorValue::MergeFrom(from.tensor());
      break;
    }
    case kTuple: {
      mutable_tuple()->::CoreML::Specification::V5::TupleValue::MergeFrom(from.tuple());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Value.ImmediateValue)
}

void Value_ImmediateValue::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

Value_ImmediateValue::~Value_ImmediateValue() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Value.ImmediateValue)
  SharedDtor();
}

void Value_ImmediateValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Value_ImmediateValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Value_ImmediateValue& Value_ImmediateValue::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Value_ImmediateValue* Value_ImmediateValue::New(::google::protobuf::Arena* arena) const {
  Value_ImmediateValue* n = new Value_ImmediateValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_ImmediateValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.V5.Value.ImmediateValue)
  switch (value_case()) {
    case kF: {
      // No need to clear
      break;
    }
    case kI: {
      // No need to clear
      break;
    }
    case kB: {
      // No need to clear
      break;
    }
    case kS: {
      value_.s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTensor: {
      delete value_.tensor_;
      break;
    }
    case kTuple: {
      delete value_.tuple_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Value_ImmediateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Value.ImmediateValue)
  clear_value();
}

bool Value_ImmediateValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Value.ImmediateValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float f = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.f_)));
          set_has_f();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.i_)));
          set_has_i();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool b = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.TensorValue tensor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.TupleValue tuple = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Value.ImmediateValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Value.ImmediateValue)
  return false;
#undef DO_
}

void Value_ImmediateValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Value.ImmediateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float f = 1;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->f(), output);
  }

  // int64 i = 2;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->i(), output);
  }

  // bool b = 3;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->b(), output);
  }

  // bytes s = 4;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->s(), output);
  }

  // .CoreML.Specification.V5.TensorValue tensor = 5;
  if (has_tensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *value_.tensor_, output);
  }

  // .CoreML.Specification.V5.TupleValue tuple = 6;
  if (has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, *value_.tuple_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Value.ImmediateValue)
}

size_t Value_ImmediateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Value.ImmediateValue)
  size_t total_size = 0;

  switch (value_case()) {
    // float f = 1;
    case kF: {
      total_size += 1 + 4;
      break;
    }
    // int64 i = 2;
    case kI: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i());
      break;
    }
    // bool b = 3;
    case kB: {
      total_size += 1 + 1;
      break;
    }
    // bytes s = 4;
    case kS: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->s());
      break;
    }
    // .CoreML.Specification.V5.TensorValue tensor = 5;
    case kTensor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tensor_);
      break;
    }
    // .CoreML.Specification.V5.TupleValue tuple = 6;
    case kTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tuple_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_ImmediateValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Value_ImmediateValue*>(&from));
}

void Value_ImmediateValue::MergeFrom(const Value_ImmediateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Value.ImmediateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kF: {
      set_f(from.f());
      break;
    }
    case kI: {
      set_i(from.i());
      break;
    }
    case kB: {
      set_b(from.b());
      break;
    }
    case kS: {
      set_s(from.s());
      break;
    }
    case kTensor: {
      mutable_tensor()->::CoreML::Specification::V5::TensorValue::MergeFrom(from.tensor());
      break;
    }
    case kTuple: {
      mutable_tuple()->::CoreML::Specification::V5::TupleValue::MergeFrom(from.tuple());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Value_ImmediateValue::CopyFrom(const Value_ImmediateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Value.ImmediateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_ImmediateValue::IsInitialized() const {
  return true;
}

void Value_ImmediateValue::Swap(Value_ImmediateValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_ImmediateValue::InternalSwap(Value_ImmediateValue* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Value_ImmediateValue::GetTypeName() const {
  return "CoreML.Specification.V5.Value.ImmediateValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value_ImmediateValue

// float f = 1;
bool Value_ImmediateValue::has_f() const {
  return value_case() == kF;
}
void Value_ImmediateValue::set_has_f() {
  _oneof_case_[0] = kF;
}
void Value_ImmediateValue::clear_f() {
  if (has_f()) {
    value_.f_ = 0;
    clear_has_value();
  }
}
float Value_ImmediateValue::f() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.f)
  if (has_f()) {
    return value_.f_;
  }
  return 0;
}
void Value_ImmediateValue::set_f(float value) {
  if (!has_f()) {
    clear_value();
    set_has_f();
  }
  value_.f_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.f)
}

// int64 i = 2;
bool Value_ImmediateValue::has_i() const {
  return value_case() == kI;
}
void Value_ImmediateValue::set_has_i() {
  _oneof_case_[0] = kI;
}
void Value_ImmediateValue::clear_i() {
  if (has_i()) {
    value_.i_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 Value_ImmediateValue::i() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.i)
  if (has_i()) {
    return value_.i_;
  }
  return GOOGLE_LONGLONG(0);
}
void Value_ImmediateValue::set_i(::google::protobuf::int64 value) {
  if (!has_i()) {
    clear_value();
    set_has_i();
  }
  value_.i_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.i)
}

// bool b = 3;
bool Value_ImmediateValue::has_b() const {
  return value_case() == kB;
}
void Value_ImmediateValue::set_has_b() {
  _oneof_case_[0] = kB;
}
void Value_ImmediateValue::clear_b() {
  if (has_b()) {
    value_.b_ = false;
    clear_has_value();
  }
}
bool Value_ImmediateValue::b() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.b)
  if (has_b()) {
    return value_.b_;
  }
  return false;
}
void Value_ImmediateValue::set_b(bool value) {
  if (!has_b()) {
    clear_value();
    set_has_b();
  }
  value_.b_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.b)
}

// bytes s = 4;
bool Value_ImmediateValue::has_s() const {
  return value_case() == kS;
}
void Value_ImmediateValue::set_has_s() {
  _oneof_case_[0] = kS;
}
void Value_ImmediateValue::clear_s() {
  if (has_s()) {
    value_.s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& Value_ImmediateValue::s() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (has_s()) {
    return value_.s_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Value_ImmediateValue::set_s(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
}
#if LANG_CXX11
void Value_ImmediateValue::set_s(::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.ImmediateValue.s)
}
#endif
void Value_ImmediateValue::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.ImmediateValue.s)
}
void Value_ImmediateValue::set_s(const void* value, size_t size) {
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.ImmediateValue.s)
}
::std::string* Value_ImmediateValue::mutable_s() {
  if (!has_s()) {
    clear_value();
    set_has_s();
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.s)
  return value_.s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value_ImmediateValue::release_s() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.s)
  if (has_s()) {
    clear_has_value();
    return value_.s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Value_ImmediateValue::set_allocated_s(::std::string* s) {
  if (!has_s()) {
    value_.s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (s != NULL) {
    set_has_s();
    value_.s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        s);
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.s)
}

// .CoreML.Specification.V5.TensorValue tensor = 5;
bool Value_ImmediateValue::has_tensor() const {
  return value_case() == kTensor;
}
void Value_ImmediateValue::set_has_tensor() {
  _oneof_case_[0] = kTensor;
}
void Value_ImmediateValue::clear_tensor() {
  if (has_tensor()) {
    delete value_.tensor_;
    clear_has_value();
  }
}
 const ::CoreML::Specification::V5::TensorValue& Value_ImmediateValue::tensor() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  return has_tensor()
      ? *value_.tensor_
      : ::CoreML::Specification::V5::TensorValue::default_instance();
}
::CoreML::Specification::V5::TensorValue* Value_ImmediateValue::mutable_tensor() {
  if (!has_tensor()) {
    clear_value();
    set_has_tensor();
    value_.tensor_ = new ::CoreML::Specification::V5::TensorValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  return value_.tensor_;
}
::CoreML::Specification::V5::TensorValue* Value_ImmediateValue::release_tensor() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.tensor)
  if (has_tensor()) {
    clear_has_value();
    ::CoreML::Specification::V5::TensorValue* temp = value_.tensor_;
    value_.tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value_ImmediateValue::set_allocated_tensor(::CoreML::Specification::V5::TensorValue* tensor) {
  clear_value();
  if (tensor) {
    set_has_tensor();
    value_.tensor_ = tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.tensor)
}

// .CoreML.Specification.V5.TupleValue tuple = 6;
bool Value_ImmediateValue::has_tuple() const {
  return value_case() == kTuple;
}
void Value_ImmediateValue::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
void Value_ImmediateValue::clear_tuple() {
  if (has_tuple()) {
    delete value_.tuple_;
    clear_has_value();
  }
}
 const ::CoreML::Specification::V5::TupleValue& Value_ImmediateValue::tuple() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  return has_tuple()
      ? *value_.tuple_
      : ::CoreML::Specification::V5::TupleValue::default_instance();
}
::CoreML::Specification::V5::TupleValue* Value_ImmediateValue::mutable_tuple() {
  if (!has_tuple()) {
    clear_value();
    set_has_tuple();
    value_.tuple_ = new ::CoreML::Specification::V5::TupleValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  return value_.tuple_;
}
::CoreML::Specification::V5::TupleValue* Value_ImmediateValue::release_tuple() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.ImmediateValue.tuple)
  if (has_tuple()) {
    clear_has_value();
    ::CoreML::Specification::V5::TupleValue* temp = value_.tuple_;
    value_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value_ImmediateValue::set_allocated_tuple(::CoreML::Specification::V5::TupleValue* tuple) {
  clear_value();
  if (tuple) {
    set_has_tuple();
    value_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.ImmediateValue.tuple)
}

bool Value_ImmediateValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void Value_ImmediateValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
Value_ImmediateValue::ValueCase Value_ImmediateValue::value_case() const {
  return Value_ImmediateValue::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value_FileValue::kFileNameFieldNumber;
const int Value_FileValue::kOffsetFieldNumber;
const int Value_FileValue::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value_FileValue::Value_FileValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Value.FileValue)
}
Value_FileValue::Value_FileValue(const Value_FileValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&offset_, &from.offset_,
    reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Value.FileValue)
}

void Value_FileValue::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_) + sizeof(length_));
  _cached_size_ = 0;
}

Value_FileValue::~Value_FileValue() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Value.FileValue)
  SharedDtor();
}

void Value_FileValue::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value_FileValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Value_FileValue& Value_FileValue::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Value_FileValue* Value_FileValue::New(::google::protobuf::Arena* arena) const {
  Value_FileValue* n = new Value_FileValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value_FileValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Value.FileValue)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_) + sizeof(length_));
}

bool Value_FileValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Value.FileValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string fileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Value.FileValue.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Value.FileValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Value.FileValue)
  return false;
#undef DO_
}

void Value_FileValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Value.FileValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Value.FileValue.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // uint64 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->length(), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Value.FileValue)
}

size_t Value_FileValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Value.FileValue)
  size_t total_size = 0;

  // string fileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value_FileValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Value_FileValue*>(&from));
}

void Value_FileValue::MergeFrom(const Value_FileValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Value.FileValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void Value_FileValue::CopyFrom(const Value_FileValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Value.FileValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value_FileValue::IsInitialized() const {
  return true;
}

void Value_FileValue::Swap(Value_FileValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value_FileValue::InternalSwap(Value_FileValue* other) {
  filename_.Swap(&other->filename_);
  std::swap(offset_, other->offset_);
  std::swap(length_, other->length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Value_FileValue::GetTypeName() const {
  return "CoreML.Specification.V5.Value.FileValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value_FileValue

// string fileName = 1;
void Value_FileValue::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Value_FileValue::filename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.fileName)
  return filename_.GetNoArena();
}
void Value_FileValue::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.fileName)
}
#if LANG_CXX11
void Value_FileValue::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.FileValue.fileName)
}
#endif
void Value_FileValue::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.FileValue.fileName)
}
void Value_FileValue::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.FileValue.fileName)
}
::std::string* Value_FileValue::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.FileValue.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value_FileValue::release_filename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.FileValue.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Value_FileValue::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.FileValue.fileName)
}

// uint64 offset = 2;
void Value_FileValue::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Value_FileValue::offset() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.offset)
  return offset_;
}
void Value_FileValue::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.offset)
}

// uint64 length = 3;
void Value_FileValue::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Value_FileValue::length() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.FileValue.length)
  return length_;
}
void Value_FileValue::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.FileValue.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kNameFieldNumber;
const int Value::kDocStringFieldNumber;
const int Value::kTypeFieldNumber;
const int Value::kImmediateValueFieldNumber;
const int Value::kFileValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  docstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.docstring().size() > 0) {
    docstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docstring_);
  }
  if (from.has_type()) {
    type_ = new ::CoreML::Specification::V5::ValueType(*from.type_);
  } else {
    type_ = NULL;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kImmediateValue: {
      mutable_immediatevalue()->::CoreML::Specification::V5::Value_ImmediateValue::MergeFrom(from.immediatevalue());
      break;
    }
    case kFileValue: {
      mutable_filevalue()->::CoreML::Specification::V5::Value_FileValue::MergeFrom(from.filevalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.Value)
}

void Value::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  clear_has_value();
  _cached_size_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_;
  }
  if (has_value()) {
    clear_value();
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Value& Value::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.V5.Value)
  switch (value_case()) {
    case kImmediateValue: {
      delete value_.immediatevalue_;
      break;
    }
    case kFileValue: {
      delete value_.filevalue_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.Value)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  clear_value();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Value.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string docString = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docstring().data(), this->docstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CoreML.Specification.V5.Value.docString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.ValueType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_immediatevalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.V5.Value.FileValue fileValue = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filevalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Value.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string docString = 2;
  if (this->docstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docstring().data(), this->docstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CoreML.Specification.V5.Value.docString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->docstring(), output);
  }

  // .CoreML.Specification.V5.ValueType type = 3;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->type_, output);
  }

  // .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
  if (has_immediatevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *value_.immediatevalue_, output);
  }

  // .CoreML.Specification.V5.Value.FileValue fileValue = 5;
  if (has_filevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *value_.filevalue_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.Value)
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.Value)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string docString = 2;
  if (this->docstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docstring());
  }

  // .CoreML.Specification.V5.ValueType type = 3;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_);
  }

  switch (value_case()) {
    // .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
    case kImmediateValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.immediatevalue_);
      break;
    }
    // .CoreML.Specification.V5.Value.FileValue fileValue = 5;
    case kFileValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.filevalue_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Value*>(&from));
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.docstring().size() > 0) {

    docstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docstring_);
  }
  if (from.has_type()) {
    mutable_type()->::CoreML::Specification::V5::ValueType::MergeFrom(from.type());
  }
  switch (from.value_case()) {
    case kImmediateValue: {
      mutable_immediatevalue()->::CoreML::Specification::V5::Value_ImmediateValue::MergeFrom(from.immediatevalue());
      break;
    }
    case kFileValue: {
      mutable_filevalue()->::CoreML::Specification::V5::Value_FileValue::MergeFrom(from.filevalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  name_.Swap(&other->name_);
  docstring_.Swap(&other->docstring_);
  std::swap(type_, other->type_);
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Value::GetTypeName() const {
  return "CoreML.Specification.V5.Value";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value

// string name = 1;
void Value::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Value::name() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.name)
  return name_.GetNoArena();
}
void Value::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.name)
}
#if LANG_CXX11
void Value::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.name)
}
#endif
void Value::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.name)
}
void Value::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.name)
}
::std::string* Value::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value::release_name() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Value::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.name)
}

// string docString = 2;
void Value::clear_docstring() {
  docstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Value::docstring() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.docString)
  return docstring_.GetNoArena();
}
void Value::set_docstring(const ::std::string& value) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.Value.docString)
}
#if LANG_CXX11
void Value::set_docstring(::std::string&& value) {
  
  docstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoreML.Specification.V5.Value.docString)
}
#endif
void Value::set_docstring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.Value.docString)
}
void Value::set_docstring(const char* value, size_t size) {
  
  docstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.Value.docString)
}
::std::string* Value::mutable_docstring() {
  
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.docString)
  return docstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value::release_docstring() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.docString)
  
  return docstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Value::set_allocated_docstring(::std::string* docstring) {
  if (docstring != NULL) {
    
  } else {
    
  }
  docstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docstring);
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.docString)
}

// .CoreML.Specification.V5.ValueType type = 3;
bool Value::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
void Value::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
const ::CoreML::Specification::V5::ValueType& Value::type() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.type)
  return type_ != NULL ? *type_
                         : *::CoreML::Specification::V5::ValueType::internal_default_instance();
}
::CoreML::Specification::V5::ValueType* Value::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::CoreML::Specification::V5::ValueType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.type)
  return type_;
}
::CoreML::Specification::V5::ValueType* Value::release_type() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.type)
  
  ::CoreML::Specification::V5::ValueType* temp = type_;
  type_ = NULL;
  return temp;
}
void Value::set_allocated_type(::CoreML::Specification::V5::ValueType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.type)
}

// .CoreML.Specification.V5.Value.ImmediateValue immediateValue = 4;
bool Value::has_immediatevalue() const {
  return value_case() == kImmediateValue;
}
void Value::set_has_immediatevalue() {
  _oneof_case_[0] = kImmediateValue;
}
void Value::clear_immediatevalue() {
  if (has_immediatevalue()) {
    delete value_.immediatevalue_;
    clear_has_value();
  }
}
 const ::CoreML::Specification::V5::Value_ImmediateValue& Value::immediatevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.immediateValue)
  return has_immediatevalue()
      ? *value_.immediatevalue_
      : ::CoreML::Specification::V5::Value_ImmediateValue::default_instance();
}
::CoreML::Specification::V5::Value_ImmediateValue* Value::mutable_immediatevalue() {
  if (!has_immediatevalue()) {
    clear_value();
    set_has_immediatevalue();
    value_.immediatevalue_ = new ::CoreML::Specification::V5::Value_ImmediateValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.immediateValue)
  return value_.immediatevalue_;
}
::CoreML::Specification::V5::Value_ImmediateValue* Value::release_immediatevalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.immediateValue)
  if (has_immediatevalue()) {
    clear_has_value();
    ::CoreML::Specification::V5::Value_ImmediateValue* temp = value_.immediatevalue_;
    value_.immediatevalue_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_immediatevalue(::CoreML::Specification::V5::Value_ImmediateValue* immediatevalue) {
  clear_value();
  if (immediatevalue) {
    set_has_immediatevalue();
    value_.immediatevalue_ = immediatevalue;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.immediateValue)
}

// .CoreML.Specification.V5.Value.FileValue fileValue = 5;
bool Value::has_filevalue() const {
  return value_case() == kFileValue;
}
void Value::set_has_filevalue() {
  _oneof_case_[0] = kFileValue;
}
void Value::clear_filevalue() {
  if (has_filevalue()) {
    delete value_.filevalue_;
    clear_has_value();
  }
}
 const ::CoreML::Specification::V5::Value_FileValue& Value::filevalue() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.Value.fileValue)
  return has_filevalue()
      ? *value_.filevalue_
      : ::CoreML::Specification::V5::Value_FileValue::default_instance();
}
::CoreML::Specification::V5::Value_FileValue* Value::mutable_filevalue() {
  if (!has_filevalue()) {
    clear_value();
    set_has_filevalue();
    value_.filevalue_ = new ::CoreML::Specification::V5::Value_FileValue;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.Value.fileValue)
  return value_.filevalue_;
}
::CoreML::Specification::V5::Value_FileValue* Value::release_filevalue() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.Value.fileValue)
  if (has_filevalue()) {
    clear_has_value();
    ::CoreML::Specification::V5::Value_FileValue* temp = value_.filevalue_;
    value_.filevalue_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Value::set_allocated_filevalue(::CoreML::Specification::V5::Value_FileValue* filevalue) {
  clear_value();
  if (filevalue) {
    set_has_filevalue();
    value_.filevalue_ = filevalue;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.Value.fileValue)
}

bool Value::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void Value::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
Value::ValueCase Value::value_case() const {
  return Value::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorValue::kTensorTypeFieldNumber;
const int TensorValue::kFloatsFieldNumber;
const int TensorValue::kIntsFieldNumber;
const int TensorValue::kBoolsFieldNumber;
const int TensorValue::kStringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorValue::TensorValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.TensorValue)
}
TensorValue::TensorValue(const TensorValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      floats_(from.floats_),
      ints_(from.ints_),
      bools_(from.bools_),
      strings_(from.strings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tensortype()) {
    tensortype_ = new ::CoreML::Specification::V5::TensorType(*from.tensortype_);
  } else {
    tensortype_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.TensorValue)
}

void TensorValue::SharedCtor() {
  tensortype_ = NULL;
  _cached_size_ = 0;
}

TensorValue::~TensorValue() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.TensorValue)
  SharedDtor();
}

void TensorValue::SharedDtor() {
  if (this != internal_default_instance()) {
    delete tensortype_;
  }
}

void TensorValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TensorValue& TensorValue::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorValue* TensorValue::New(::google::protobuf::Arena* arena) const {
  TensorValue* n = new TensorValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.TensorValue)
  floats_.Clear();
  ints_.Clear();
  bools_.Clear();
  strings_.Clear();
  if (GetArenaNoVirtual() == NULL && tensortype_ != NULL) {
    delete tensortype_;
  }
  tensortype_ = NULL;
}

bool TensorValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.TensorValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.V5.TensorType tensorType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensortype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float floats = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(21u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ints = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ints())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool bools = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_bools())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34u, input, this->mutable_bools())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes strings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.TensorValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.TensorValue)
  return false;
#undef DO_
}

void TensorValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.TensorValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.V5.TensorType tensorType = 1;
  if (this->has_tensortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->tensortype_, output);
  }

  // repeated float floats = 2 [packed = true];
  if (this->floats_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_floats_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->floats().data(), this->floats_size(), output);
  }

  // repeated int64 ints = 3 [packed = true];
  if (this->ints_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ints_cached_byte_size_);
  }
  for (int i = 0, n = this->ints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ints(i), output);
  }

  // repeated bool bools = 4 [packed = true];
  if (this->bools_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bools_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->bools().data(), this->bools_size(), output);
  }

  // repeated bytes strings = 5;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->strings(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.TensorValue)
}

size_t TensorValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.TensorValue)
  size_t total_size = 0;

  // repeated float floats = 2 [packed = true];
  {
    unsigned int count = this->floats_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _floats_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 ints = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ints_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ints_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool bools = 4 [packed = true];
  {
    unsigned int count = this->bools_size();
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bools_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes strings = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->strings(i));
  }

  // .CoreML.Specification.V5.TensorType tensorType = 1;
  if (this->has_tensortype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tensortype_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TensorValue*>(&from));
}

void TensorValue::MergeFrom(const TensorValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.TensorValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floats_.MergeFrom(from.floats_);
  ints_.MergeFrom(from.ints_);
  bools_.MergeFrom(from.bools_);
  strings_.MergeFrom(from.strings_);
  if (from.has_tensortype()) {
    mutable_tensortype()->::CoreML::Specification::V5::TensorType::MergeFrom(from.tensortype());
  }
}

void TensorValue::CopyFrom(const TensorValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.TensorValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorValue::IsInitialized() const {
  return true;
}

void TensorValue::Swap(TensorValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorValue::InternalSwap(TensorValue* other) {
  floats_.InternalSwap(&other->floats_);
  ints_.InternalSwap(&other->ints_);
  bools_.InternalSwap(&other->bools_);
  strings_.InternalSwap(&other->strings_);
  std::swap(tensortype_, other->tensortype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TensorValue::GetTypeName() const {
  return "CoreML.Specification.V5.TensorValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorValue

// .CoreML.Specification.V5.TensorType tensorType = 1;
bool TensorValue::has_tensortype() const {
  return this != internal_default_instance() && tensortype_ != NULL;
}
void TensorValue::clear_tensortype() {
  if (GetArenaNoVirtual() == NULL && tensortype_ != NULL) delete tensortype_;
  tensortype_ = NULL;
}
const ::CoreML::Specification::V5::TensorType& TensorValue::tensortype() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.tensorType)
  return tensortype_ != NULL ? *tensortype_
                         : *::CoreML::Specification::V5::TensorType::internal_default_instance();
}
::CoreML::Specification::V5::TensorType* TensorValue::mutable_tensortype() {
  
  if (tensortype_ == NULL) {
    tensortype_ = new ::CoreML::Specification::V5::TensorType;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorValue.tensorType)
  return tensortype_;
}
::CoreML::Specification::V5::TensorType* TensorValue::release_tensortype() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.V5.TensorValue.tensorType)
  
  ::CoreML::Specification::V5::TensorType* temp = tensortype_;
  tensortype_ = NULL;
  return temp;
}
void TensorValue::set_allocated_tensortype(::CoreML::Specification::V5::TensorType* tensortype) {
  delete tensortype_;
  tensortype_ = tensortype;
  if (tensortype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.V5.TensorValue.tensorType)
}

// repeated float floats = 2 [packed = true];
int TensorValue::floats_size() const {
  return floats_.size();
}
void TensorValue::clear_floats() {
  floats_.Clear();
}
float TensorValue::floats(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.floats)
  return floats_.Get(index);
}
void TensorValue::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.floats)
}
void TensorValue::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.floats)
}
const ::google::protobuf::RepeatedField< float >&
TensorValue::floats() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.floats)
  return floats_;
}
::google::protobuf::RepeatedField< float >*
TensorValue::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.floats)
  return &floats_;
}

// repeated int64 ints = 3 [packed = true];
int TensorValue::ints_size() const {
  return ints_.size();
}
void TensorValue::clear_ints() {
  ints_.Clear();
}
::google::protobuf::int64 TensorValue::ints(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.ints)
  return ints_.Get(index);
}
void TensorValue::set_ints(int index, ::google::protobuf::int64 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.ints)
}
void TensorValue::add_ints(::google::protobuf::int64 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.ints)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorValue::ints() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.ints)
  return ints_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorValue::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.ints)
  return &ints_;
}

// repeated bool bools = 4 [packed = true];
int TensorValue::bools_size() const {
  return bools_.size();
}
void TensorValue::clear_bools() {
  bools_.Clear();
}
bool TensorValue::bools(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.bools)
  return bools_.Get(index);
}
void TensorValue::set_bools(int index, bool value) {
  bools_.Set(index, value);
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.bools)
}
void TensorValue::add_bools(bool value) {
  bools_.Add(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.bools)
}
const ::google::protobuf::RepeatedField< bool >&
TensorValue::bools() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.bools)
  return bools_;
}
::google::protobuf::RepeatedField< bool >*
TensorValue::mutable_bools() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.bools)
  return &bools_;
}

// repeated bytes strings = 5;
int TensorValue::strings_size() const {
  return strings_.size();
}
void TensorValue::clear_strings() {
  strings_.Clear();
}
const ::std::string& TensorValue::strings(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Get(index);
}
::std::string* TensorValue::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Mutable(index);
}
void TensorValue::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.strings)
  strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void TensorValue::set_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CoreML.Specification.V5.TensorValue.strings)
  strings_.Mutable(index)->assign(std::move(value));
}
#endif
void TensorValue::set_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CoreML.Specification.V5.TensorValue.strings)
}
void TensorValue::set_strings(int index, const void* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CoreML.Specification.V5.TensorValue.strings)
}
::std::string* TensorValue::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:CoreML.Specification.V5.TensorValue.strings)
  return strings_.Add();
}
void TensorValue::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.strings)
}
#if LANG_CXX11
void TensorValue::add_strings(::std::string&& value) {
  strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TensorValue.strings)
}
#endif
void TensorValue::add_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CoreML.Specification.V5.TensorValue.strings)
}
void TensorValue::add_strings(const void* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CoreML.Specification.V5.TensorValue.strings)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TensorValue::strings() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TensorValue.strings)
  return strings_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TensorValue::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TensorValue.strings)
  return &strings_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TupleValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TupleValue::TupleValue()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Program_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.V5.TupleValue)
}
TupleValue::TupleValue(const TupleValue& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      value_(from.value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.V5.TupleValue)
}

void TupleValue::SharedCtor() {
  _cached_size_ = 0;
}

TupleValue::~TupleValue() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.V5.TupleValue)
  SharedDtor();
}

void TupleValue::SharedDtor() {
}

void TupleValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TupleValue& TupleValue::default_instance() {
  protobuf_Program_2eproto::InitDefaults();
  return *internal_default_instance();
}

TupleValue* TupleValue::New(::google::protobuf::Arena* arena) const {
  TupleValue* n = new TupleValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TupleValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.V5.TupleValue)
  value_.Clear();
}

bool TupleValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.V5.TupleValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CoreML.Specification.V5.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.V5.TupleValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.V5.TupleValue)
  return false;
#undef DO_
}

void TupleValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.V5.TupleValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CoreML.Specification.V5.Value value = 1;
  for (unsigned int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.V5.TupleValue)
}

size_t TupleValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.V5.TupleValue)
  size_t total_size = 0;

  // repeated .CoreML.Specification.V5.Value value = 1;
  {
    unsigned int count = this->value_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TupleValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TupleValue*>(&from));
}

void TupleValue::MergeFrom(const TupleValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.V5.TupleValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void TupleValue::CopyFrom(const TupleValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.V5.TupleValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TupleValue::IsInitialized() const {
  return true;
}

void TupleValue::Swap(TupleValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TupleValue::InternalSwap(TupleValue* other) {
  value_.InternalSwap(&other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string TupleValue::GetTypeName() const {
  return "CoreML.Specification.V5.TupleValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TupleValue

// repeated .CoreML.Specification.V5.Value value = 1;
int TupleValue::value_size() const {
  return value_.size();
}
void TupleValue::clear_value() {
  value_.Clear();
}
const ::CoreML::Specification::V5::Value& TupleValue::value(int index) const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.V5.TupleValue.value)
  return value_.Get(index);
}
::CoreML::Specification::V5::Value* TupleValue::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.V5.TupleValue.value)
  return value_.Mutable(index);
}
::CoreML::Specification::V5::Value* TupleValue::add_value() {
  // @@protoc_insertion_point(field_add:CoreML.Specification.V5.TupleValue.value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >*
TupleValue::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CoreML.Specification.V5.TupleValue.value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::CoreML::Specification::V5::Value >&
TupleValue::value() const {
  // @@protoc_insertion_point(field_list:CoreML.Specification.V5.TupleValue.value)
  return value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace V5
}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
