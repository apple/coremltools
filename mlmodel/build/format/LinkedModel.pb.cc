// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LinkedModel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LinkedModel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace CoreML {
namespace Specification {
class LinkedModelDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LinkedModel> {
  public:
  const ::CoreML::Specification::LinkedModelFile* linkedmodelfile_;
} _LinkedModel_default_instance_;
class LinkedModelFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LinkedModelFile> {
} _LinkedModelFile_default_instance_;

namespace protobuf_LinkedModel_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _LinkedModel_default_instance_.Shutdown();
  _LinkedModelFile_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults();
  _LinkedModel_default_instance_.DefaultConstruct();
  _LinkedModelFile_default_instance_.DefaultConstruct();
  _LinkedModelFile_default_instance_.get_mutable()->linkedmodelfilename_ = const_cast< ::CoreML::Specification::StringParameter*>(
      ::CoreML::Specification::StringParameter::internal_default_instance());
  _LinkedModelFile_default_instance_.get_mutable()->linkedmodelsearchpath_ = const_cast< ::CoreML::Specification::StringParameter*>(
      ::CoreML::Specification::StringParameter::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::CoreML::Specification::protobuf_Parameters_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_LinkedModel_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkedModel::kLinkedModelFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkedModel::LinkedModel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LinkedModel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.LinkedModel)
}
LinkedModel::LinkedModel(const LinkedModel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_LinkType();
  switch (from.LinkType_case()) {
    case kLinkedModelFile: {
      mutable_linkedmodelfile()->::CoreML::Specification::LinkedModelFile::MergeFrom(from.linkedmodelfile());
      break;
    }
    case LINKTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.LinkedModel)
}

void LinkedModel::SharedCtor() {
  clear_has_LinkType();
  _cached_size_ = 0;
}

LinkedModel::~LinkedModel() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.LinkedModel)
  SharedDtor();
}

void LinkedModel::SharedDtor() {
  if (has_LinkType()) {
    clear_LinkType();
  }
}

void LinkedModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LinkedModel& LinkedModel::default_instance() {
  protobuf_LinkedModel_2eproto::InitDefaults();
  return *internal_default_instance();
}

LinkedModel* LinkedModel::New(::google::protobuf::Arena* arena) const {
  LinkedModel* n = new LinkedModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinkedModel::clear_LinkType() {
// @@protoc_insertion_point(one_of_clear_start:CoreML.Specification.LinkedModel)
  switch (LinkType_case()) {
    case kLinkedModelFile: {
      delete LinkType_.linkedmodelfile_;
      break;
    }
    case LINKTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LINKTYPE_NOT_SET;
}


void LinkedModel::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.LinkedModel)
  clear_LinkType();
}

bool LinkedModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.LinkedModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.LinkedModelFile linkedModelFile = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linkedmodelfile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.LinkedModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.LinkedModel)
  return false;
#undef DO_
}

void LinkedModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.LinkedModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.LinkedModelFile linkedModelFile = 1;
  if (has_linkedmodelfile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *LinkType_.linkedmodelfile_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.LinkedModel)
}

size_t LinkedModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.LinkedModel)
  size_t total_size = 0;

  switch (LinkType_case()) {
    // .CoreML.Specification.LinkedModelFile linkedModelFile = 1;
    case kLinkedModelFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *LinkType_.linkedmodelfile_);
      break;
    }
    case LINKTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinkedModel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LinkedModel*>(&from));
}

void LinkedModel::MergeFrom(const LinkedModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.LinkedModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.LinkType_case()) {
    case kLinkedModelFile: {
      mutable_linkedmodelfile()->::CoreML::Specification::LinkedModelFile::MergeFrom(from.linkedmodelfile());
      break;
    }
    case LINKTYPE_NOT_SET: {
      break;
    }
  }
}

void LinkedModel::CopyFrom(const LinkedModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.LinkedModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkedModel::IsInitialized() const {
  return true;
}

void LinkedModel::Swap(LinkedModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkedModel::InternalSwap(LinkedModel* other) {
  std::swap(LinkType_, other->LinkType_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string LinkedModel::GetTypeName() const {
  return "CoreML.Specification.LinkedModel";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LinkedModel

// .CoreML.Specification.LinkedModelFile linkedModelFile = 1;
bool LinkedModel::has_linkedmodelfile() const {
  return LinkType_case() == kLinkedModelFile;
}
void LinkedModel::set_has_linkedmodelfile() {
  _oneof_case_[0] = kLinkedModelFile;
}
void LinkedModel::clear_linkedmodelfile() {
  if (has_linkedmodelfile()) {
    delete LinkType_.linkedmodelfile_;
    clear_has_LinkType();
  }
}
 const ::CoreML::Specification::LinkedModelFile& LinkedModel::linkedmodelfile() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.LinkedModel.linkedModelFile)
  return has_linkedmodelfile()
      ? *LinkType_.linkedmodelfile_
      : ::CoreML::Specification::LinkedModelFile::default_instance();
}
::CoreML::Specification::LinkedModelFile* LinkedModel::mutable_linkedmodelfile() {
  if (!has_linkedmodelfile()) {
    clear_LinkType();
    set_has_linkedmodelfile();
    LinkType_.linkedmodelfile_ = new ::CoreML::Specification::LinkedModelFile;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.LinkedModel.linkedModelFile)
  return LinkType_.linkedmodelfile_;
}
::CoreML::Specification::LinkedModelFile* LinkedModel::release_linkedmodelfile() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.LinkedModel.linkedModelFile)
  if (has_linkedmodelfile()) {
    clear_has_LinkType();
    ::CoreML::Specification::LinkedModelFile* temp = LinkType_.linkedmodelfile_;
    LinkType_.linkedmodelfile_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LinkedModel::set_allocated_linkedmodelfile(::CoreML::Specification::LinkedModelFile* linkedmodelfile) {
  clear_LinkType();
  if (linkedmodelfile) {
    set_has_linkedmodelfile();
    LinkType_.linkedmodelfile_ = linkedmodelfile;
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.LinkedModel.linkedModelFile)
}

bool LinkedModel::has_LinkType() const {
  return LinkType_case() != LINKTYPE_NOT_SET;
}
void LinkedModel::clear_has_LinkType() {
  _oneof_case_[0] = LINKTYPE_NOT_SET;
}
LinkedModel::LinkTypeCase LinkedModel::LinkType_case() const {
  return LinkedModel::LinkTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinkedModelFile::kLinkedModelFileNameFieldNumber;
const int LinkedModelFile::kLinkedModelSearchPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinkedModelFile::LinkedModelFile()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LinkedModel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CoreML.Specification.LinkedModelFile)
}
LinkedModelFile::LinkedModelFile(const LinkedModelFile& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linkedmodelfilename()) {
    linkedmodelfilename_ = new ::CoreML::Specification::StringParameter(*from.linkedmodelfilename_);
  } else {
    linkedmodelfilename_ = NULL;
  }
  if (from.has_linkedmodelsearchpath()) {
    linkedmodelsearchpath_ = new ::CoreML::Specification::StringParameter(*from.linkedmodelsearchpath_);
  } else {
    linkedmodelsearchpath_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CoreML.Specification.LinkedModelFile)
}

void LinkedModelFile::SharedCtor() {
  ::memset(&linkedmodelfilename_, 0, reinterpret_cast<char*>(&linkedmodelsearchpath_) -
    reinterpret_cast<char*>(&linkedmodelfilename_) + sizeof(linkedmodelsearchpath_));
  _cached_size_ = 0;
}

LinkedModelFile::~LinkedModelFile() {
  // @@protoc_insertion_point(destructor:CoreML.Specification.LinkedModelFile)
  SharedDtor();
}

void LinkedModelFile::SharedDtor() {
  if (this != internal_default_instance()) {
    delete linkedmodelfilename_;
  }
  if (this != internal_default_instance()) {
    delete linkedmodelsearchpath_;
  }
}

void LinkedModelFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LinkedModelFile& LinkedModelFile::default_instance() {
  protobuf_LinkedModel_2eproto::InitDefaults();
  return *internal_default_instance();
}

LinkedModelFile* LinkedModelFile::New(::google::protobuf::Arena* arena) const {
  LinkedModelFile* n = new LinkedModelFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinkedModelFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CoreML.Specification.LinkedModelFile)
  if (GetArenaNoVirtual() == NULL && linkedmodelfilename_ != NULL) {
    delete linkedmodelfilename_;
  }
  linkedmodelfilename_ = NULL;
  if (GetArenaNoVirtual() == NULL && linkedmodelsearchpath_ != NULL) {
    delete linkedmodelsearchpath_;
  }
  linkedmodelsearchpath_ = NULL;
}

bool LinkedModelFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CoreML.Specification.LinkedModelFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CoreML.Specification.StringParameter linkedModelFileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linkedmodelfilename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CoreML.Specification.StringParameter linkedModelSearchPath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linkedmodelsearchpath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CoreML.Specification.LinkedModelFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CoreML.Specification.LinkedModelFile)
  return false;
#undef DO_
}

void LinkedModelFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CoreML.Specification.LinkedModelFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CoreML.Specification.StringParameter linkedModelFileName = 1;
  if (this->has_linkedmodelfilename()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->linkedmodelfilename_, output);
  }

  // .CoreML.Specification.StringParameter linkedModelSearchPath = 2;
  if (this->has_linkedmodelsearchpath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->linkedmodelsearchpath_, output);
  }

  // @@protoc_insertion_point(serialize_end:CoreML.Specification.LinkedModelFile)
}

size_t LinkedModelFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CoreML.Specification.LinkedModelFile)
  size_t total_size = 0;

  // .CoreML.Specification.StringParameter linkedModelFileName = 1;
  if (this->has_linkedmodelfilename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->linkedmodelfilename_);
  }

  // .CoreML.Specification.StringParameter linkedModelSearchPath = 2;
  if (this->has_linkedmodelsearchpath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->linkedmodelsearchpath_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinkedModelFile::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LinkedModelFile*>(&from));
}

void LinkedModelFile::MergeFrom(const LinkedModelFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CoreML.Specification.LinkedModelFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_linkedmodelfilename()) {
    mutable_linkedmodelfilename()->::CoreML::Specification::StringParameter::MergeFrom(from.linkedmodelfilename());
  }
  if (from.has_linkedmodelsearchpath()) {
    mutable_linkedmodelsearchpath()->::CoreML::Specification::StringParameter::MergeFrom(from.linkedmodelsearchpath());
  }
}

void LinkedModelFile::CopyFrom(const LinkedModelFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CoreML.Specification.LinkedModelFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkedModelFile::IsInitialized() const {
  return true;
}

void LinkedModelFile::Swap(LinkedModelFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinkedModelFile::InternalSwap(LinkedModelFile* other) {
  std::swap(linkedmodelfilename_, other->linkedmodelfilename_);
  std::swap(linkedmodelsearchpath_, other->linkedmodelsearchpath_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string LinkedModelFile::GetTypeName() const {
  return "CoreML.Specification.LinkedModelFile";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LinkedModelFile

// .CoreML.Specification.StringParameter linkedModelFileName = 1;
bool LinkedModelFile::has_linkedmodelfilename() const {
  return this != internal_default_instance() && linkedmodelfilename_ != NULL;
}
void LinkedModelFile::clear_linkedmodelfilename() {
  if (GetArenaNoVirtual() == NULL && linkedmodelfilename_ != NULL) delete linkedmodelfilename_;
  linkedmodelfilename_ = NULL;
}
const ::CoreML::Specification::StringParameter& LinkedModelFile::linkedmodelfilename() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.LinkedModelFile.linkedModelFileName)
  return linkedmodelfilename_ != NULL ? *linkedmodelfilename_
                         : *::CoreML::Specification::StringParameter::internal_default_instance();
}
::CoreML::Specification::StringParameter* LinkedModelFile::mutable_linkedmodelfilename() {
  
  if (linkedmodelfilename_ == NULL) {
    linkedmodelfilename_ = new ::CoreML::Specification::StringParameter;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.LinkedModelFile.linkedModelFileName)
  return linkedmodelfilename_;
}
::CoreML::Specification::StringParameter* LinkedModelFile::release_linkedmodelfilename() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.LinkedModelFile.linkedModelFileName)
  
  ::CoreML::Specification::StringParameter* temp = linkedmodelfilename_;
  linkedmodelfilename_ = NULL;
  return temp;
}
void LinkedModelFile::set_allocated_linkedmodelfilename(::CoreML::Specification::StringParameter* linkedmodelfilename) {
  delete linkedmodelfilename_;
  linkedmodelfilename_ = linkedmodelfilename;
  if (linkedmodelfilename) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.LinkedModelFile.linkedModelFileName)
}

// .CoreML.Specification.StringParameter linkedModelSearchPath = 2;
bool LinkedModelFile::has_linkedmodelsearchpath() const {
  return this != internal_default_instance() && linkedmodelsearchpath_ != NULL;
}
void LinkedModelFile::clear_linkedmodelsearchpath() {
  if (GetArenaNoVirtual() == NULL && linkedmodelsearchpath_ != NULL) delete linkedmodelsearchpath_;
  linkedmodelsearchpath_ = NULL;
}
const ::CoreML::Specification::StringParameter& LinkedModelFile::linkedmodelsearchpath() const {
  // @@protoc_insertion_point(field_get:CoreML.Specification.LinkedModelFile.linkedModelSearchPath)
  return linkedmodelsearchpath_ != NULL ? *linkedmodelsearchpath_
                         : *::CoreML::Specification::StringParameter::internal_default_instance();
}
::CoreML::Specification::StringParameter* LinkedModelFile::mutable_linkedmodelsearchpath() {
  
  if (linkedmodelsearchpath_ == NULL) {
    linkedmodelsearchpath_ = new ::CoreML::Specification::StringParameter;
  }
  // @@protoc_insertion_point(field_mutable:CoreML.Specification.LinkedModelFile.linkedModelSearchPath)
  return linkedmodelsearchpath_;
}
::CoreML::Specification::StringParameter* LinkedModelFile::release_linkedmodelsearchpath() {
  // @@protoc_insertion_point(field_release:CoreML.Specification.LinkedModelFile.linkedModelSearchPath)
  
  ::CoreML::Specification::StringParameter* temp = linkedmodelsearchpath_;
  linkedmodelsearchpath_ = NULL;
  return temp;
}
void LinkedModelFile::set_allocated_linkedmodelsearchpath(::CoreML::Specification::StringParameter* linkedmodelsearchpath) {
  delete linkedmodelsearchpath_;
  linkedmodelsearchpath_ = linkedmodelsearchpath;
  if (linkedmodelsearchpath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CoreML.Specification.LinkedModelFile.linkedModelSearchPath)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace CoreML

// @@protoc_insertion_point(global_scope)
